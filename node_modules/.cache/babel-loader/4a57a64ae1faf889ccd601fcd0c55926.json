{"ast":null,"code":"import * as constant from \"../utils/constants\"; // ======================= LOAD DATA ====================\n\nexport function loadTreeData(val) {\n  return {\n    type: constant.NEW_TREE,\n    payload: val\n  };\n} // ======================= PHYLOTREE SETTINGS ====================\n//RESIZE SIGNAL\n\nexport function changeTreeResizeSignal(value) {\n  return {\n    type: constant.RESIZE_SIGNAL_TREE,\n    payload: value\n  };\n} //LAYOUT\n\nexport function changeTreeLayout(value) {\n  return {\n    type: constant.LAYOUT_TREE,\n    payload: value\n  };\n} //DOWNLOAD\n\nexport function changeIsTreeDownloading(value) {\n  return {\n    type: constant.IS_DOWNLOADING_TREE,\n    payload: value\n  };\n} //NODE\n\nexport function changeIsTreeNodeAligned(value) {\n  return {\n    type: constant.IS_NODE_ALIGNED,\n    payload: value\n  };\n}\nexport function changeTreeNodeSize(value) {\n  return {\n    type: constant.NODE_SIZE_TREE,\n    payload: value\n  };\n}\nexport function changeTreeTextSize(value) {\n  return {\n    type: constant.NODE_LABEL_SIZE_TREE,\n    payload: value\n  };\n}\nexport function changeTreeTextOffset(value) {\n  return {\n    type: constant.NODE_LABEL_OFFSET_TREE,\n    payload: value\n  };\n} //SCALE\n\nexport function changeIsTreeScaleShown(value) {\n  return {\n    type: constant.IS_SCALE_SHOWN_TREE,\n    payload: value\n  };\n}\nexport function changeTreeScaleFactor(value) {\n  return {\n    type: constant.SCALE_FACTOR_TREE,\n    payload: value\n  };\n}\nexport function changeTreeCustomScale(value) {\n  return {\n    type: constant.SCALE_CUSTOM_VALUE_TREE,\n    payload: value\n  };\n}","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/action/phyloTree_actions.js"],"names":["constant","loadTreeData","val","type","NEW_TREE","payload","changeTreeResizeSignal","value","RESIZE_SIGNAL_TREE","changeTreeLayout","LAYOUT_TREE","changeIsTreeDownloading","IS_DOWNLOADING_TREE","changeIsTreeNodeAligned","IS_NODE_ALIGNED","changeTreeNodeSize","NODE_SIZE_TREE","changeTreeTextSize","NODE_LABEL_SIZE_TREE","changeTreeTextOffset","NODE_LABEL_OFFSET_TREE","changeIsTreeScaleShown","IS_SCALE_SHOWN_TREE","changeTreeScaleFactor","SCALE_FACTOR_TREE","changeTreeCustomScale","SCALE_CUSTOM_VALUE_TREE"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,oBAA1B,C,CAEA;;AACA,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACI,QADV;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,C,CAED;AACA;;AACA,OAAO,SAASI,sBAAT,CAAgCC,KAAhC,EAAuC;AAC5C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAACQ,kBADV;AAELH,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,C,CAED;;AACA,OAAO,SAASE,gBAAT,CAA0BF,KAA1B,EAAiC;AACtC,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAACU,WADV;AAELL,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,C,CACD;;AACA,OAAO,SAASI,uBAAT,CAAiCJ,KAAjC,EAAwC;AAC7C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAACY,mBADV;AAELP,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,C,CAED;;AACA,OAAO,SAASM,uBAAT,CAAiCN,KAAjC,EAAwC;AAC7C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAACc,eADV;AAELT,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AACD,OAAO,SAASQ,kBAAT,CAA4BR,KAA5B,EAAmC;AACxC,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAACgB,cADV;AAELX,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AACD,OAAO,SAASU,kBAAT,CAA4BV,KAA5B,EAAmC;AACxC,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAACkB,oBADV;AAELb,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AACD,OAAO,SAASY,oBAAT,CAA8BZ,KAA9B,EAAqC;AAC1C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAACoB,sBADV;AAELf,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,C,CAED;;AACA,OAAO,SAASc,sBAAT,CAAgCd,KAAhC,EAAuC;AAC5C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAACsB,mBADV;AAELjB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AACD,OAAO,SAASgB,qBAAT,CAA+BhB,KAA/B,EAAsC;AAC3C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAACwB,iBADV;AAELnB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AACD,OAAO,SAASkB,qBAAT,CAA+BlB,KAA/B,EAAsC;AAC3C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,QAAQ,CAAC0B,uBADV;AAELrB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID","sourcesContent":["import * as constant from \"../utils/constants\";\n\n// ======================= LOAD DATA ====================\nexport function loadTreeData(val) {\n  return {\n    type: constant.NEW_TREE,\n    payload: val\n  };\n}\n\n// ======================= PHYLOTREE SETTINGS ====================\n//RESIZE SIGNAL\nexport function changeTreeResizeSignal(value) {\n  return {\n    type: constant.RESIZE_SIGNAL_TREE,\n    payload: value\n  };\n}\n\n//LAYOUT\nexport function changeTreeLayout(value) {\n  return {\n    type: constant.LAYOUT_TREE,\n    payload: value\n  };\n}\n//DOWNLOAD\nexport function changeIsTreeDownloading(value) {\n  return {\n    type: constant.IS_DOWNLOADING_TREE,\n    payload: value\n  };\n}\n\n//NODE\nexport function changeIsTreeNodeAligned(value) {\n  return {\n    type: constant.IS_NODE_ALIGNED,\n    payload: value\n  };\n}\nexport function changeTreeNodeSize(value) {\n  return {\n    type: constant.NODE_SIZE_TREE,\n    payload: value\n  };\n}\nexport function changeTreeTextSize(value) {\n  return {\n    type: constant.NODE_LABEL_SIZE_TREE,\n    payload: value\n  };\n}\nexport function changeTreeTextOffset(value) {\n  return {\n    type: constant.NODE_LABEL_OFFSET_TREE,\n    payload: value\n  };\n}\n\n//SCALE\nexport function changeIsTreeScaleShown(value) {\n  return {\n    type: constant.IS_SCALE_SHOWN_TREE,\n    payload: value\n  };\n}\nexport function changeTreeScaleFactor(value) {\n  return {\n    type: constant.SCALE_FACTOR_TREE,\n    payload: value\n  };\n}\nexport function changeTreeCustomScale(value) {\n  return {\n    type: constant.SCALE_CUSTOM_VALUE_TREE,\n    payload: value\n  };\n}\n"]},"metadata":{},"sourceType":"module"}