{"ast":null,"code":"import { INIT_COLOR_SCALE_ALL, COLOR_TYPE, COLOR_BY_SPECIES, COLOR_BY_LOCATION, COLOR_BY_SOURCETYPE, COLOR_BY_PROFILE_ONE, COLOR_BY_PROFILE_TWO, COLOR_BY_PROFILE_THREE } from \"../utils/constants\";\nimport { initialState } from \"../reducers\";\n\nvar colorscaleReducer = function colorscaleReducer(prevState, action) {\n  switch (action.type) {\n    case INIT_COLOR_SCALE_ALL:\n      var newStateColor_init = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState) {\n        newStateColor_init = action.payload;\n      }\n\n      return newStateColor_init;\n\n    case COLOR_TYPE:\n      var newStateColor_type = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.colorType) {\n        newStateColor_type.colorType = action.payload;\n      }\n\n      return newStateColor_type;\n\n    case COLOR_BY_SPECIES:\n      var newStateColor_bySpecies = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.bySpecies) {\n        newStateColor_bySpecies.bySpecies = action.payload;\n      }\n\n      return newStateColor_bySpecies;\n\n    case COLOR_BY_LOCATION:\n      var newStateColor_byLoc = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.byLocation) {\n        newStateColor_byLoc.byLocation = action.payload;\n      }\n\n      return newStateColor_byLoc;\n    // if no change return same state with before\n\n    case COLOR_BY_SOURCETYPE:\n      var newStateColor_bySourceType = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.bySourceType) {\n        newStateColor_bySourceType.bySourceType = action.payload;\n      }\n\n      return newStateColor_bySourceType;\n\n    case COLOR_BY_PROFILE_ONE:\n      var newStateColor_byProfile1 = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.byProfile1) {\n        newStateColor_byProfile1.byProfile1 = action.payload;\n      }\n\n      return newStateColor_byProfile1;\n\n    case COLOR_BY_PROFILE_TWO:\n      var newStateColor_byProfile2 = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.byProfile2) {\n        newStateColor_byProfile2.byProfile2 = action.payload;\n      }\n\n      return newStateColor_byProfile2;\n\n    case COLOR_BY_PROFILE_THREE:\n      var newStateColor_byProfile3 = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.byProfile3) {\n        newStateColor_byProfile3.byProfile3 = action.payload;\n      }\n\n      return newStateColor_byProfile3;\n\n    default:\n      if (prevState) {\n        return prevState;\n      } else {\n        return initialState.colorScale;\n      }\n\n  }\n};\n\nexport default colorscaleReducer;","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/reducers/reducer-colorScale.js"],"names":["INIT_COLOR_SCALE_ALL","COLOR_TYPE","COLOR_BY_SPECIES","COLOR_BY_LOCATION","COLOR_BY_SOURCETYPE","COLOR_BY_PROFILE_ONE","COLOR_BY_PROFILE_TWO","COLOR_BY_PROFILE_THREE","initialState","colorscaleReducer","prevState","action","type","newStateColor_init","Object","assign","payload","newStateColor_type","colorType","newStateColor_bySpecies","bySpecies","newStateColor_byLoc","byLocation","newStateColor_bySourceType","bySourceType","newStateColor_byProfile1","byProfile1","newStateColor_byProfile2","byProfile2","newStateColor_byProfile3","byProfile3","colorScale"],"mappings":"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","sourcesContent":["import {\n  INIT_COLOR_SCALE_ALL,\n  COLOR_TYPE,\n  COLOR_BY_SPECIES,\n  COLOR_BY_LOCATION,\n  COLOR_BY_SOURCETYPE,\n  COLOR_BY_PROFILE_ONE,\n  COLOR_BY_PROFILE_TWO,\n  COLOR_BY_PROFILE_THREE\n} from \"../utils/constants\";\nimport { initialState } from \"../reducers\";\n\nconst colorscaleReducer = (prevState, action) => {\n  switch (action.type) {\n    case INIT_COLOR_SCALE_ALL:\n      let newStateColor_init = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState) {\n        newStateColor_init = action.payload;\n      }\n      return newStateColor_init;\n\n    case COLOR_TYPE:\n      let newStateColor_type = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.colorType) {\n        newStateColor_type.colorType = action.payload;\n      }\n      return newStateColor_type;\n\n    case COLOR_BY_SPECIES:\n      let newStateColor_bySpecies = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.bySpecies) {\n        newStateColor_bySpecies.bySpecies = action.payload;\n      }\n      return newStateColor_bySpecies;\n\n    case COLOR_BY_LOCATION:\n      let newStateColor_byLoc = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.byLocation) {\n        newStateColor_byLoc.byLocation = action.payload;\n      }\n      return newStateColor_byLoc; // if no change return same state with before\n\n    case COLOR_BY_SOURCETYPE:\n      let newStateColor_bySourceType = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.bySourceType) {\n        newStateColor_bySourceType.bySourceType = action.payload;\n      }\n      return newStateColor_bySourceType;\n\n    case COLOR_BY_PROFILE_ONE:\n      let newStateColor_byProfile1 = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.byProfile1) {\n        newStateColor_byProfile1.byProfile1 = action.payload;\n      }\n      return newStateColor_byProfile1;\n    case COLOR_BY_PROFILE_TWO:\n      let newStateColor_byProfile2 = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.byProfile2) {\n        newStateColor_byProfile2.byProfile2 = action.payload;\n      }\n      return newStateColor_byProfile2;\n    case COLOR_BY_PROFILE_THREE:\n      let newStateColor_byProfile3 = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.byProfile3) {\n        newStateColor_byProfile3.byProfile3 = action.payload;\n      }\n      return newStateColor_byProfile3;\n\n    default:\n      if (prevState) {\n        return prevState;\n      } else {\n        return initialState.colorScale;\n      }\n  }\n};\n\nexport default colorscaleReducer;\n"]},"metadata":{},"sourceType":"module"}