{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_Movement/comp_Movement.js\";\n\n/* ============================================================================\nPatient movement, render:\n-Gantt chart\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport MovementChart from \"./chart_Movement_gantt\";\nimport MovementSettings from \"./comp_Movement_Settings\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport { DragOutlined, CloseOutlined, RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport { changeMovementResizeSignal, changeMovementNodeSize, changeMovementTextSize, changeMovementTextOffset, changeIsOverlappingLineShown, changeIsOverlappingLineScaled, changeOverlappingLineScaleFactor, changeIsSortedBySuffix, changeSuffixSeparator, changeIsResort } from \"../action/movementChart_actions\";\nimport \"./style_Movement.css\";\nvar dimensions = [\"width\", \"height\"];\n\nvar PatientMovement = function PatientMovement(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUserRedraw = _useState2[0],\n      setisUserRedraw = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDrawerVisible = _useState4[0],\n      setisDrawerVisible = _useState4[1]; // USEEFFECTS\n\n\n  useEffect(function () {\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]); //HANDLERS\n\n  var closeCardHandler = function closeCardHandler() {\n    props.deactivateChart(props.id);\n    props.changeMovementResizeSignal(false);\n  };\n\n  var openDrawerHandler = function openDrawerHandler() {\n    setisDrawerVisible(true);\n  };\n\n  var closeDrawerHandler = function closeDrawerHandler() {\n    setisDrawerVisible(false);\n  };\n\n  var userRedrawHandler = function userRedrawHandler() {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeMovementResizeSignal(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Movement timeline\",\n    bordered: true,\n    headStyle: {\n      height: \"50px\",\n      padding: \"0 20px\"\n    },\n    style: {\n      height: \"100%\"\n    },\n    bodyStyle: {\n      margin: \"0px\",\n      padding: \"5px\"\n    },\n    extra: /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"panelHeader\",\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(DragOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(RetweetOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }),\n      onClick: userRedrawHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(SettingOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }),\n      onClick: openDrawerHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(CloseOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }),\n      onClick: closeCardHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"movement-drawer-settings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MovementSettings, {\n    isDrawerVisible: isDrawerVisible,\n    movementSettings: props.movementSettings,\n    closeDrawerHandler: closeDrawerHandler,\n    changeMovementNodeSize: props.changeMovementNodeSize,\n    changeMovementTextSize: props.changeMovementTextSize,\n    changeMovementTextOffset: props.changeMovementTextOffset,\n    changeIsOverlappingLineShown: props.changeIsOverlappingLineShown,\n    changeIsSortedBySuffix: props.changeIsSortedBySuffix,\n    changeSuffixSeparator: props.changeSuffixSeparator,\n    changeIsResort: props.changeIsResort,\n    changeIsOverlappingLineScaled: props.changeIsOverlappingLineScaled,\n    changeOverlappingLineScaleFactor: props.changeOverlappingLineScaleFactor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), props.movementData && /*#__PURE__*/React.createElement(MovementChart, {\n    width: props.width,\n    height: props.height,\n    data: props.movementData,\n    isolateData: props.isolateData,\n    colorScale: props.colorScale,\n    movementSettings: props.movementSettings,\n    isUserRedraw: isUserRedraw,\n    selectedData: props.selectedData,\n    setSelectedData: props.setSelectedData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    movementData: state.movementData,\n    isolateData: state.isolateData,\n    colorScale: state.colorScale,\n    selectedData: state.selectedData,\n    movementSettings: state.movementSettings\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    deactivateChart: deactivateChart,\n    changeMovementResizeSignal: changeMovementResizeSignal,\n    changeMovementNodeSize: changeMovementNodeSize,\n    changeMovementTextSize: changeMovementTextSize,\n    changeMovementTextOffset: changeMovementTextOffset,\n    setSelectedData: setSelectedData,\n    changeIsOverlappingLineShown: changeIsOverlappingLineShown,\n    changeIsOverlappingLineScaled: changeIsOverlappingLineScaled,\n    changeOverlappingLineScaleFactor: changeOverlappingLineScaleFactor,\n    changeIsSortedBySuffix: changeIsSortedBySuffix,\n    changeSuffixSeparator: changeSuffixSeparator,\n    changeIsResort: changeIsResort\n  }, dispatch);\n}\n\nvar MeasuredPatientMovement = withMeasure(dimensions)(PatientMovement);\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasuredPatientMovement);\n/*\n<Button\n  size={\"small\"}\n  style={{ margin: \"0 5px\", border: \"none\" }}\n  icon={<DownloadOutlined />}\n></Button>\n*/","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_Movement/comp_Movement.js"],"names":["React","useState","useEffect","MovementChart","MovementSettings","Row","Col","Card","Button","connect","bindActionCreators","withMeasure","DragOutlined","CloseOutlined","RetweetOutlined","SettingOutlined","deactivateChart","setSelectedData","changeMovementResizeSignal","changeMovementNodeSize","changeMovementTextSize","changeMovementTextOffset","changeIsOverlappingLineShown","changeIsOverlappingLineScaled","changeOverlappingLineScaleFactor","changeIsSortedBySuffix","changeSuffixSeparator","changeIsResort","dimensions","PatientMovement","props","isUserRedraw","setisUserRedraw","isDrawerVisible","setisDrawerVisible","closeCardHandler","id","openDrawerHandler","closeDrawerHandler","userRedrawHandler","height","padding","margin","border","movementSettings","movementData","width","isolateData","colorScale","selectedData","mapStateToProps","state","mapDispatchToProps","dispatch","MeasuredPatientMovement"],"mappings":"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","sourcesContent":["/* ============================================================================\nPatient movement, render:\n-Gantt chart\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport MovementChart from \"./chart_Movement_gantt\";\nimport MovementSettings from \"./comp_Movement_Settings\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport {\n  DragOutlined,\n  CloseOutlined,\n  RetweetOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport {\n  changeMovementResizeSignal,\n  changeMovementNodeSize,\n  changeMovementTextSize,\n  changeMovementTextOffset,\n  changeIsOverlappingLineShown,\n  changeIsOverlappingLineScaled,\n  changeOverlappingLineScaleFactor,\n  changeIsSortedBySuffix,\n  changeSuffixSeparator,\n  changeIsResort,\n} from \"../action/movementChart_actions\";\nimport \"./style_Movement.css\";\n\nconst dimensions = [\"width\", \"height\"];\n\nconst PatientMovement = (props) => {\n  const [isUserRedraw, setisUserRedraw] = useState(false);\n  const [isDrawerVisible, setisDrawerVisible] = useState(false);\n\n  // USEEFFECTS\n  useEffect(() => {\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]);\n\n  //HANDLERS\n  const closeCardHandler = () => {\n    props.deactivateChart(props.id);\n    props.changeMovementResizeSignal(false);\n  };\n  const openDrawerHandler = () => {\n    setisDrawerVisible(true);\n  };\n  const closeDrawerHandler = () => {\n    setisDrawerVisible(false);\n  };\n  const userRedrawHandler = () => {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeMovementResizeSignal(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ height: \"100%\" }}>\n        <Card\n          title={\"Movement timeline\"}\n          bordered={true}\n          headStyle={{ height: \"50px\", padding: \"0 20px\" }}\n          style={{ height: \"100%\" }}\n          bodyStyle={{ margin: \"0px\", padding: \"5px\" }}\n          extra={\n            <Row>\n              <Col span={6}>\n                <Button\n                  className=\"panelHeader\"\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<DragOutlined />}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<RetweetOutlined />}\n                  onClick={userRedrawHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<SettingOutlined />}\n                  onClick={openDrawerHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<CloseOutlined />}\n                  onClick={closeCardHandler}\n                ></Button>\n              </Col>\n            </Row>\n          }\n        >\n          <div id=\"movement-drawer-settings\">\n            <MovementSettings\n              isDrawerVisible={isDrawerVisible}\n              movementSettings={props.movementSettings}\n              closeDrawerHandler={closeDrawerHandler}\n              changeMovementNodeSize={props.changeMovementNodeSize}\n              changeMovementTextSize={props.changeMovementTextSize}\n              changeMovementTextOffset={props.changeMovementTextOffset}\n              changeIsOverlappingLineShown={props.changeIsOverlappingLineShown}\n              changeIsSortedBySuffix={props.changeIsSortedBySuffix}\n              changeSuffixSeparator={props.changeSuffixSeparator}\n              changeIsResort={props.changeIsResort}\n              changeIsOverlappingLineScaled={\n                props.changeIsOverlappingLineScaled\n              }\n              changeOverlappingLineScaleFactor={\n                props.changeOverlappingLineScaleFactor\n              }\n            />\n          </div>\n          {props.movementData && (\n            <MovementChart\n              width={props.width}\n              height={props.height}\n              data={props.movementData}\n              isolateData={props.isolateData}\n              colorScale={props.colorScale}\n              movementSettings={props.movementSettings}\n              isUserRedraw={isUserRedraw}\n              selectedData={props.selectedData}\n              setSelectedData={props.setSelectedData}\n            />\n          )}\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    movementData: state.movementData,\n    isolateData: state.isolateData,\n    colorScale: state.colorScale,\n    selectedData: state.selectedData,\n    movementSettings: state.movementSettings,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      deactivateChart: deactivateChart,\n      changeMovementResizeSignal: changeMovementResizeSignal,\n      changeMovementNodeSize: changeMovementNodeSize,\n      changeMovementTextSize: changeMovementTextSize,\n      changeMovementTextOffset: changeMovementTextOffset,\n      setSelectedData: setSelectedData,\n      changeIsOverlappingLineShown: changeIsOverlappingLineShown,\n      changeIsOverlappingLineScaled: changeIsOverlappingLineScaled,\n      changeOverlappingLineScaleFactor: changeOverlappingLineScaleFactor,\n      changeIsSortedBySuffix: changeIsSortedBySuffix,\n      changeSuffixSeparator: changeSuffixSeparator,\n      changeIsResort: changeIsResort,\n    },\n    dispatch\n  );\n}\n\nconst MeasuredPatientMovement = withMeasure(dimensions)(PatientMovement);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MeasuredPatientMovement);\n\n/*\n<Button\n  size={\"small\"}\n  style={{ margin: \"0 5px\", border: \"none\" }}\n  icon={<DownloadOutlined />}\n></Button>\n*/\n"]},"metadata":{},"sourceType":"module"}