{"ast":null,"code":"import * as constant from \"../utils/constants\"; // ======================= MOVEMENT SETTINGS ====================\n\nexport function changeMovementNodeSize(value) {\n  return {\n    type: constant.NEW_NODE_SIZE_MOVE,\n    payload: value\n  };\n}\nexport function changeMovementTextSize(value) {\n  return {\n    type: constant.NEW_TEXT_SIZE_MOVE,\n    payload: value\n  };\n}\nexport function changeMovementTextOffset(value) {\n  return {\n    type: constant.NEW_TEXT_OFFSET_MOVE,\n    payload: value\n  };\n}\nexport function changeMovementResizeSignal(value) {\n  return {\n    type: constant.NEW_RESIZE_SIGNAL_MOVE,\n    payload: value\n  };\n}\nexport function changeIsOverlappingLineShown(value) {\n  return {\n    type: constant.IS_OVERLAPPING_LINE_SHOWN,\n    payload: value\n  };\n}\nexport function changeIsOverlappingLineScaled(value) {\n  return {\n    type: constant.IS_OVERLAPPING_LINE_SCALED,\n    payload: value\n  };\n}\nexport function changeIsSortedBySuffix(value) {\n  return {\n    type: constant.IS_SORTED_BY_SUFFIX,\n    payload: value\n  };\n}\nexport function changeIsResort(value) {\n  return {\n    type: constant.IS_RESORT,\n    payload: value\n  };\n}\nexport function changeOverlappingLineScaleFactor(value) {\n  return {\n    type: constant.OVERLAPPING_LINE_SCALE_FACTOR,\n    payload: value\n  };\n}\nexport function changeSuffixSeparator(value) {\n  return {\n    type: constant.SUFFIX_SEPARATOR,\n    payload: value\n  };\n}","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/action/movementChart_actions.js"],"names":["constant","changeMovementNodeSize","value","type","NEW_NODE_SIZE_MOVE","payload","changeMovementTextSize","NEW_TEXT_SIZE_MOVE","changeMovementTextOffset","NEW_TEXT_OFFSET_MOVE","changeMovementResizeSignal","NEW_RESIZE_SIGNAL_MOVE","changeIsOverlappingLineShown","IS_OVERLAPPING_LINE_SHOWN","changeIsOverlappingLineScaled","IS_OVERLAPPING_LINE_SCALED","changeIsSortedBySuffix","IS_SORTED_BY_SUFFIX","changeIsResort","IS_RESORT","changeOverlappingLineScaleFactor","OVERLAPPING_LINE_SCALE_FACTOR","changeSuffixSeparator","SUFFIX_SEPARATOR"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,oBAA1B,C,CAEA;;AACA,OAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACI,kBADV;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AACD,OAAO,SAASI,sBAAT,CAAgCJ,KAAhC,EAAuC;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACO,kBADV;AAELF,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AACD,OAAO,SAASM,wBAAT,CAAkCN,KAAlC,EAAyC;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACS,oBADV;AAELJ,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AACD,OAAO,SAASQ,0BAAT,CAAoCR,KAApC,EAA2C;AAChD,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACW,sBADV;AAELN,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AACD,OAAO,SAASU,4BAAT,CAAsCV,KAAtC,EAA6C;AAClD,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACa,yBADV;AAELR,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AACD,OAAO,SAASY,6BAAT,CAAuCZ,KAAvC,EAA8C;AACnD,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACe,0BADV;AAELV,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AACD,OAAO,SAASc,sBAAT,CAAgCd,KAAhC,EAAuC;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACiB,mBADV;AAELZ,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AACD,OAAO,SAASgB,cAAT,CAAwBhB,KAAxB,EAA+B;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACmB,SADV;AAELd,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AACD,OAAO,SAASkB,gCAAT,CAA0ClB,KAA1C,EAAiD;AACtD,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACqB,6BADV;AAELhB,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AACD,OAAO,SAASoB,qBAAT,CAA+BpB,KAA/B,EAAsC;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEH,QAAQ,CAACuB,gBADV;AAELlB,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID","sourcesContent":["import * as constant from \"../utils/constants\";\n\n// ======================= MOVEMENT SETTINGS ====================\nexport function changeMovementNodeSize(value) {\n  return {\n    type: constant.NEW_NODE_SIZE_MOVE,\n    payload: value,\n  };\n}\nexport function changeMovementTextSize(value) {\n  return {\n    type: constant.NEW_TEXT_SIZE_MOVE,\n    payload: value,\n  };\n}\nexport function changeMovementTextOffset(value) {\n  return {\n    type: constant.NEW_TEXT_OFFSET_MOVE,\n    payload: value,\n  };\n}\nexport function changeMovementResizeSignal(value) {\n  return {\n    type: constant.NEW_RESIZE_SIGNAL_MOVE,\n    payload: value,\n  };\n}\nexport function changeIsOverlappingLineShown(value) {\n  return {\n    type: constant.IS_OVERLAPPING_LINE_SHOWN,\n    payload: value,\n  };\n}\nexport function changeIsOverlappingLineScaled(value) {\n  return {\n    type: constant.IS_OVERLAPPING_LINE_SCALED,\n    payload: value,\n  };\n}\nexport function changeIsSortedBySuffix(value) {\n  return {\n    type: constant.IS_SORTED_BY_SUFFIX,\n    payload: value,\n  };\n}\nexport function changeIsResort(value) {\n  return {\n    type: constant.IS_RESORT,\n    payload: value,\n  };\n}\nexport function changeOverlappingLineScaleFactor(value) {\n  return {\n    type: constant.OVERLAPPING_LINE_SCALE_FACTOR,\n    payload: value,\n  };\n}\nexport function changeSuffixSeparator(value) {\n  return {\n    type: constant.SUFFIX_SEPARATOR,\n    payload: value,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}