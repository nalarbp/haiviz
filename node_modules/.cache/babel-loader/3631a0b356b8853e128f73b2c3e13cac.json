{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_InputFiles/btn_MetadataInput.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Row, Col, Spin, Upload } from \"antd\";\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\nimport { MetadataInputSVG } from \"../utils/customIcons\";\nimport { getIsolateData } from \"../utils/utils\";\nimport DeleteInput from \"./btn_DeleteInput\";\nvar Dragger = Upload.Dragger;\n\nvar MetadataInput = function MetadataInput(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setisLoading = _useState2[1];\n\n  var beforeUploadHandler = function beforeUploadHandler(file) {\n    setisLoading(true);\n\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onloadend = function (evt) {\n        var dataUrl = evt.target.result;\n        getIsolateData(dataUrl, props.loadIsolateData, props.setColorScale, props.loadSimulatedMap, setisLoading);\n      };\n    }\n  };\n\n  useEffect(function () {\n    if (props.isolateData) {\n      setisLoading(false);\n    }\n  }, [props.isolateData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Metadata\",\n    style: {\n      height: \"100%\"\n    },\n    headStyle: {\n      textAlign: \"left\"\n    },\n    bodyStyle: {\n      margin: \"0px\",\n      padding: \"5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, !isLoading && !props.isolateData && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dragger, {\n    accept: \".csv\",\n    style: {\n      padding: \"10px\"\n    },\n    name: \"file\",\n    multiple: false,\n    action: \"dummy-post\",\n    beforeUpload: beforeUploadHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MetadataInputSVG, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })))), isLoading && !props.isolateData && /*#__PURE__*/React.createElement(Spin, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 45\n    }\n  }), !isLoading && props.isolateData && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    className: \"input_card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleTwoTone, {\n    twoToneColor: \"#52c41a\",\n    style: {\n      fontSize: \"20pt\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }\n  }, \"Loaded!\"))), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteInput, {\n    id: 'metadata',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default MetadataInput;","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_InputFiles/btn_MetadataInput.js"],"names":["React","useEffect","useState","Card","Row","Col","Spin","Upload","CheckCircleTwoTone","MetadataInputSVG","getIsolateData","DeleteInput","Dragger","MetadataInput","props","isLoading","setisLoading","beforeUploadHandler","file","reader","FileReader","readAsDataURL","onloadend","evt","dataUrl","target","result","loadIsolateData","setColorScale","loadSimulatedMap","isolateData","height","textAlign","margin","padding","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Row, Col, Spin, Upload } from \"antd\";\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\nimport { MetadataInputSVG } from \"../utils/customIcons\";\nimport { getIsolateData } from \"../utils/utils\";\nimport DeleteInput from \"./btn_DeleteInput\";\n\nconst { Dragger } = Upload;\nconst MetadataInput = (props) => {\n  const [isLoading, setisLoading] = useState(false);\n\n  const beforeUploadHandler = (file) => {\n    setisLoading(true);\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onloadend = function(evt) {\n        const dataUrl = evt.target.result;\n        getIsolateData(\n          dataUrl,\n          props.loadIsolateData,\n          props.setColorScale,\n          props.loadSimulatedMap,\n          setisLoading\n        );\n      };\n    }\n  };\n\n  useEffect(() => {\n    if (props.isolateData) {\n      setisLoading(false);\n    }\n  }, [props.isolateData]);\n\n  return (\n    <React.Fragment>\n      <Card\n        title={\"Metadata\"}\n        style={{ height: \"100%\" }}\n        headStyle={{ textAlign: \"left\" }}\n        bodyStyle={{ margin: \"0px\", padding: \"5px\" }}\n      >\n        {!isLoading && !props.isolateData && (\n          <React.Fragment>\n            <Dragger\n              accept={\".csv\"}\n              style={{ padding: \"10px\" }}\n              name=\"file\"\n              multiple={false}\n              action=\"dummy-post\"\n              beforeUpload={beforeUploadHandler}\n            >\n              <h1>\n                <MetadataInputSVG />\n              </h1>\n            </Dragger>\n          </React.Fragment>\n        )}\n        {isLoading && !props.isolateData && <Spin />}\n        {!isLoading && props.isolateData && (\n          <React.Fragment>\n            <Row justify=\"center\" className=\"input_card\"> \n              <Col>\n              <CheckCircleTwoTone\n                twoToneColor=\"#52c41a\"\n                style={{ fontSize: \"20pt\" }}\n              />\n               <p>Loaded!</p>\n              </Col>\n              </Row>\n              <Row justify=\"center\">\n              <Col>\n              <DeleteInput id={'metadata'}/>\n              </Col>\n              </Row>\n              \n            \n          </React.Fragment>\n        )}\n      </Card>\n    </React.Fragment>\n  );\n};\nexport default MetadataInput;\n"]},"metadata":{},"sourceType":"module"}