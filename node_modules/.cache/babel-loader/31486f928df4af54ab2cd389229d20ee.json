{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_SimulatedMap/comp_SimulatedMap.js\";\n\n/* ============================================================================\n\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport SimulatedMapChart from \"./chart_SimulatedMap_treemap\";\nimport SimulatedMapSettings from \"./comp_SimulatedMap_Settings.js\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport { bindActionCreators } from \"redux\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport { changeSimapResizeSignal, changeSimapNodeSize, changeSimapTextSize, changeSimapLayout, changeSimapIsLocTextShown } from \"../action/simulatedMap_actions\";\nimport { DragOutlined, CloseOutlined, RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nvar dimensions = [\"width\", \"height\"];\n\nvar SimulatedMap = function SimulatedMap(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUserRedraw = _useState2[0],\n      setisUserRedraw = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDrawerVisible = _useState4[0],\n      setisDrawerVisible = _useState4[1]; //USEEFFECTS\n\n\n  useEffect(function () {\n    //console.log(\"efect draw\");\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]); //HANDLERS\n\n  var closeCardHandler = function closeCardHandler() {\n    props.deactivateChart(props.id);\n    props.changeSimapResizeSignal(false);\n  };\n\n  var userRedrawHandler = function userRedrawHandler(val) {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeSimapResizeSignal(false);\n    }\n  };\n\n  var openDrawerHandler = function openDrawerHandler() {\n    setisDrawerVisible(true);\n  };\n\n  var closeDrawerHandler = function closeDrawerHandler() {\n    setisDrawerVisible(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Location Treemap\",\n    bordered: true,\n    headStyle: {\n      height: \"50px\",\n      padding: \"0 20px\"\n    },\n    style: {\n      height: \"100%\"\n    },\n    bodyStyle: {\n      margin: \"0px\",\n      padding: \"5px\"\n    },\n    extra: /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"panelHeader\",\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(DragOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(RetweetOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }),\n      onClick: userRedrawHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(SettingOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }),\n      onClick: openDrawerHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(CloseOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }),\n      onClick: closeCardHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"localmap-drawer-settings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SimulatedMapSettings, {\n    isDrawerVisible: isDrawerVisible,\n    closeDrawerHandler: closeDrawerHandler,\n    simulatedmapSettings: props.simulatedmapSettings,\n    changeSimapNodeSize: props.changeSimapNodeSize,\n    changeSimapTextSize: props.changeSimapTextSize,\n    changeSimapLayout: props.changeSimapLayout,\n    changeSimapIsLocTextShown: props.changeSimapIsLocTextShown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), props.isolateData && /*#__PURE__*/React.createElement(SimulatedMapChart, {\n    width: props.width,\n    height: props.height,\n    simulatedMap: props.simulatedMap,\n    data: props.isolateData,\n    setSelectedData: props.setSelectedData,\n    selectedData: props.selectedData,\n    isUserRedraw: isUserRedraw,\n    simulatedmapSettings: props.simulatedmapSettings,\n    colorScale: props.colorScale,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }))));\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    isolateData: state.isolateData,\n    selectedData: state.selectedData,\n    simulatedMap: state.simulatedMap,\n    simulatedmapSettings: state.simulatedmapSettings,\n    colorScale: state.colorScale\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return bindActionCreators({\n    deactivateChart: deactivateChart,\n    changeSimapResizeSignal: changeSimapResizeSignal,\n    setSelectedData: setSelectedData,\n    changeSimapNodeSize: changeSimapNodeSize,\n    changeSimapTextSize: changeSimapTextSize,\n    changeSimapLayout: changeSimapLayout,\n    changeSimapIsLocTextShown: changeSimapIsLocTextShown\n  }, dispatch);\n}\n\nvar MeasuredSimulatedMap = withMeasure(dimensions)(SimulatedMap);\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasuredSimulatedMap);","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_SimulatedMap/comp_SimulatedMap.js"],"names":["React","useState","useEffect","SimulatedMapChart","SimulatedMapSettings","Row","Col","Card","Button","connect","withMeasure","bindActionCreators","deactivateChart","setSelectedData","changeSimapResizeSignal","changeSimapNodeSize","changeSimapTextSize","changeSimapLayout","changeSimapIsLocTextShown","DragOutlined","CloseOutlined","RetweetOutlined","SettingOutlined","dimensions","SimulatedMap","props","isUserRedraw","setisUserRedraw","isDrawerVisible","setisDrawerVisible","closeCardHandler","id","userRedrawHandler","val","openDrawerHandler","closeDrawerHandler","height","padding","margin","border","simulatedmapSettings","isolateData","width","simulatedMap","selectedData","colorScale","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch","MeasuredSimulatedMap"],"mappings":"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","sourcesContent":["/* ============================================================================\n\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport SimulatedMapChart from \"./chart_SimulatedMap_treemap\";\nimport SimulatedMapSettings from \"./comp_SimulatedMap_Settings.js\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport { bindActionCreators } from \"redux\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport {\n  changeSimapResizeSignal,\n  changeSimapNodeSize,\n  changeSimapTextSize,\n  changeSimapLayout,\n  changeSimapIsLocTextShown\n} from \"../action/simulatedMap_actions\";\nimport {\n  DragOutlined,\n  CloseOutlined,\n  RetweetOutlined,\n  SettingOutlined\n} from \"@ant-design/icons\";\n\nconst dimensions = [\"width\", \"height\"];\n\nconst SimulatedMap = props => {\n  const [isUserRedraw, setisUserRedraw] = useState(false);\n  const [isDrawerVisible, setisDrawerVisible] = useState(false);\n\n  //USEEFFECTS\n  useEffect(() => {\n    //console.log(\"efect draw\");\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]);\n\n  //HANDLERS\n  const closeCardHandler = () => {\n    props.deactivateChart(props.id);\n    props.changeSimapResizeSignal(false);\n  };\n  const userRedrawHandler = val => {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeSimapResizeSignal(false);\n    }\n  };\n  const openDrawerHandler = () => {\n    setisDrawerVisible(true);\n  };\n  const closeDrawerHandler = () => {\n    setisDrawerVisible(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ height: \"100%\" }}>\n        <Card\n          title={\"Location Treemap\"}\n          bordered={true}\n          headStyle={{ height: \"50px\", padding: \"0 20px\" }}\n          style={{ height: \"100%\" }}\n          bodyStyle={{ margin: \"0px\", padding: \"5px\" }}\n          extra={\n            <Row>\n              <Col span={6}>\n                <Button\n                  className=\"panelHeader\"\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<DragOutlined />}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<RetweetOutlined />}\n                  onClick={userRedrawHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<SettingOutlined />}\n                  onClick={openDrawerHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<CloseOutlined />}\n                  onClick={closeCardHandler}\n                ></Button>\n              </Col>\n            </Row>\n          }\n        >\n          <div id=\"localmap-drawer-settings\">\n            <SimulatedMapSettings\n              isDrawerVisible={isDrawerVisible}\n              closeDrawerHandler={closeDrawerHandler}\n              simulatedmapSettings={props.simulatedmapSettings}\n              changeSimapNodeSize={props.changeSimapNodeSize}\n              changeSimapTextSize={props.changeSimapTextSize}\n              changeSimapLayout={props.changeSimapLayout}\n              changeSimapIsLocTextShown={props.changeSimapIsLocTextShown}\n            />\n          </div>\n          {props.isolateData && (\n            <SimulatedMapChart\n              width={props.width}\n              height={props.height}\n              simulatedMap={props.simulatedMap}\n              data={props.isolateData}\n              setSelectedData={props.setSelectedData}\n              selectedData={props.selectedData}\n              isUserRedraw={isUserRedraw}\n              simulatedmapSettings={props.simulatedmapSettings}\n              colorScale={props.colorScale}\n            />\n          )}\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    isolateData: state.isolateData,\n    selectedData: state.selectedData,\n    simulatedMap: state.simulatedMap,\n    simulatedmapSettings: state.simulatedmapSettings,\n    colorScale: state.colorScale\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return bindActionCreators(\n    {\n      deactivateChart: deactivateChart,\n      changeSimapResizeSignal: changeSimapResizeSignal,\n      setSelectedData: setSelectedData,\n      changeSimapNodeSize: changeSimapNodeSize,\n      changeSimapTextSize: changeSimapTextSize,\n      changeSimapLayout: changeSimapLayout,\n      changeSimapIsLocTextShown: changeSimapIsLocTextShown\n    },\n    dispatch\n  );\n}\n\nconst MeasuredSimulatedMap = withMeasure(dimensions)(SimulatedMap);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MeasuredSimulatedMap);\n"]},"metadata":{},"sourceType":"module"}