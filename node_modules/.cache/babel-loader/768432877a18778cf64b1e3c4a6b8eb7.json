{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_ColorScale/comp_ColorScale_Settings.js\";\n\n/* ============================================================================\n============================================================================ */\nimport React from \"react\";\nimport { Button, Drawer, Select, Row, Col } from \"antd\";\nimport { ReloadOutlined, FormatPainterFilled } from \"@ant-design/icons\";\nvar Option = Select.Option;\n\nvar ColorScaleSettings = function ColorScaleSettings(props) {\n  //HANDLERS\n  var setColorScaleHandler = function setColorScaleHandler(value) {\n    props.setselectedCategory(value);\n  };\n\n  var grayAllOutHandler = function grayAllOutHandler() {\n    props.grayColorScaleStateHandler();\n  };\n\n  var resetColorHandler = function resetColorHandler() {\n    props.resetColorScaleStateHandler();\n  };\n\n  var downloadSVGHandler = function downloadSVGHandler() {\n    props.changeIsColorScaleDownloading(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Color key settings\",\n    placement: \"right\",\n    closable: true,\n    onClose: props.closeDrawerHandler,\n    visible: props.isDrawerVisible,\n    getContainer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    id: \"colorscale-select\",\n    style: {\n      width: \"auto\",\n      marginBottom: \"2px\"\n    },\n    placeholder: props.selectedCategory,\n    onChange: setColorScaleHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"location\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"species\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Species\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"sourceType\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Source type\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"profile1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Profile 1\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"profile2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"Profile 2\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"profile3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Profile 3\"))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"colorscale-grayAll\",\n    title: \"Change all color to gray\",\n    onClick: grayAllOutHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Gray all color \", /*#__PURE__*/React.createElement(FormatPainterFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"colorscale-resetColor\",\n    title: \"Reset all color\",\n    onClick: resetColorHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Reset all color \", /*#__PURE__*/React.createElement(ReloadOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 31\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: downloadSVGHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Download SVG\")))));\n};\n\nexport default ColorScaleSettings;","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_ColorScale/comp_ColorScale_Settings.js"],"names":["React","Button","Drawer","Select","Row","Col","ReloadOutlined","FormatPainterFilled","Option","ColorScaleSettings","props","setColorScaleHandler","value","setselectedCategory","grayAllOutHandler","grayColorScaleStateHandler","resetColorHandler","resetColorScaleStateHandler","downloadSVGHandler","changeIsColorScaleDownloading","closeDrawerHandler","isDrawerVisible","width","marginBottom","selectedCategory"],"mappings":"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","sourcesContent":["/* ============================================================================\n============================================================================ */\nimport React from \"react\";\nimport { Button, Drawer, Select, Row, Col } from \"antd\";\nimport { ReloadOutlined, FormatPainterFilled } from \"@ant-design/icons\";\nconst { Option } = Select;\n\nconst ColorScaleSettings = (props) => {\n  //HANDLERS\n  const setColorScaleHandler = (value) => {\n    props.setselectedCategory(value);\n  };\n  const grayAllOutHandler = () => {\n    props.grayColorScaleStateHandler();\n  };\n  const resetColorHandler = () => {\n    props.resetColorScaleStateHandler();\n  };\n  const downloadSVGHandler = () => {\n    props.changeIsColorScaleDownloading(true);\n  };\n\n  return (\n    <React.Fragment>\n      <Drawer\n        title=\"Color key settings\"\n        placement=\"right\"\n        closable={true}\n        onClose={props.closeDrawerHandler}\n        visible={props.isDrawerVisible}\n        getContainer={true}\n      >\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Select\n              id={\"colorscale-select\"}\n              style={{ width: \"auto\", marginBottom: \"2px\" }}\n              placeholder={props.selectedCategory}\n              onChange={setColorScaleHandler}\n            >\n              <Option value=\"location\">Location</Option>\n              <Option value=\"species\">Species</Option>\n              <Option value=\"sourceType\">Source type</Option>\n              <Option value=\"profile1\">Profile 1</Option>\n              <Option value=\"profile2\">Profile 2</Option>\n              <Option value=\"profile3\">Profile 3</Option>\n            </Select>\n          </Col>\n          <Col span={24}>\n            <Button\n              id={\"colorscale-grayAll\"}\n              title={\"Change all color to gray\"}\n              onClick={grayAllOutHandler}\n            >\n              Gray all color <FormatPainterFilled />\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Button\n              id={\"colorscale-resetColor\"}\n              title={\"Reset all color\"}\n              onClick={resetColorHandler}\n            >\n              Reset all color <ReloadOutlined />\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Button onClick={downloadSVGHandler}>Download SVG</Button>\n          </Col>\n        </Row>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default ColorScaleSettings;\n"]},"metadata":{},"sourceType":"module"}