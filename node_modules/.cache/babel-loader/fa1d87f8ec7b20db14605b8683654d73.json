{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_TransGraph/comp_TransGraph.js\";\n\n/* ============================================================================\n//\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport TransGraph from \"./chart_TransGraph_cytoscape\";\nimport TransGraphHost from \"./chart_TransGraph_cytoscape_host\";\nimport TransmissionGraphSettings from \"./comp_TransGraph_Settings\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport { Row, Col, Card, Button, Empty } from \"antd\";\nimport { DragOutlined, CloseOutlined, RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport { changeTransResizeSignal, changeTransNodeSize, changeTransTextSize, changeTransTextOffset, changeTransIsDownloading, changeTransLayoutKey, changeTransIsLinkLabelShown, changeTransisUserStyleApplied, changeTransisLinkWeightApplied, changeTransLinkFactor } from \"../action/transGraph_actions\";\nvar dimensions = [\"width\", \"height\"];\n\nvar TransmissionGraph = function TransmissionGraph(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUserRedraw = _useState2[0],\n      setisUserRedraw = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDrawerVisible = _useState4[0],\n      setisDrawerVisible = _useState4[1]; // USEEFFECTS\n\n\n  useEffect(function () {\n    //console.log(isUserRedraw);\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]); //HANDLERS\n\n  var closeCardHandler = function closeCardHandler() {\n    props.deactivateChart(props.id);\n    props.changeTransResizeSignal(false);\n  };\n\n  var openDrawerHandler = function openDrawerHandler() {\n    setisDrawerVisible(true);\n  };\n\n  var closeDrawerHandler = function closeDrawerHandler() {\n    setisDrawerVisible(false);\n  };\n\n  var userRedrawHandler = function userRedrawHandler() {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeTransResizeSignal(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Graph (Network)\",\n    bordered: true,\n    headStyle: {\n      height: \"50px\",\n      padding: \"0 20px\"\n    },\n    style: {\n      height: \"100%\"\n    },\n    bodyStyle: {\n      margin: \"0px\",\n      padding: \"5px\"\n    },\n    extra: /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"panelHeader\",\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(DragOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(RetweetOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }),\n      onClick: userRedrawHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(SettingOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }),\n      onClick: openDrawerHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(CloseOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }),\n      onClick: closeCardHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"transgraph-drawer-settings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TransmissionGraphSettings, {\n    isolateData: props.isolateData,\n    data: props.transmissionData.graphData,\n    isDrawerVisible: isDrawerVisible,\n    closeDrawerHandler: closeDrawerHandler,\n    transgraphSettings: props.transgraphSettings,\n    changeTransNodeSize: props.changeTransNodeSize,\n    changeTransTextSize: props.changeTransTextSize,\n    changeTransTextOffset: props.changeTransTextOffset,\n    changeTransLayoutKey: props.changeTransLayoutKey,\n    changeTransIsLinkLabelShown: props.changeTransIsLinkLabelShown,\n    changeTransLinkFactor: props.changeTransLinkFactor,\n    changeTransisUserStyleApplied: props.changeTransisUserStyleApplied,\n    changeTransisLinkWeightApplied: props.changeTransisLinkWeightApplied,\n    changeTransIsDownloading: props.changeTransIsDownloading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), props.transmissionData.graphData && props.transmissionData.graphKey === \"isolate\" && /*#__PURE__*/React.createElement(TransGraph, {\n    width: props.width,\n    height: props.height,\n    data: props.transmissionData.graphData,\n    isUserRedraw: isUserRedraw,\n    transgraphSettings: props.transgraphSettings,\n    selectedData: props.selectedData,\n    setSelectedData: props.setSelectedData,\n    colorScale: props.colorScale,\n    isolateData: props.isolateData,\n    changeTransIsDownloading: props.changeTransIsDownloading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), props.transmissionData.graphData && props.transmissionData.graphKey === \"host\" && /*#__PURE__*/React.createElement(TransGraphHost, {\n    width: props.width,\n    height: props.height,\n    data: props.transmissionData.graphData,\n    isUserRedraw: isUserRedraw,\n    transgraphSettings: props.transgraphSettings,\n    selectedData: props.selectedData,\n    setSelectedData: props.setSelectedData,\n    colorScale: props.colorScale,\n    isolateData: props.isolateData,\n    changeTransIsDownloading: props.changeTransIsDownloading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }), props.transmissionData.graphData && !props.transmissionData.graphKey && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"transgraph-invalid-graph\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Empty, {\n    description: \"Invalid graph type: More than 20% node's label are neither isolate name nor source name. Please restart HAIviz and load a valid graph input\",\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    transmissionData: state.transmission,\n    selectedData: state.selectedData,\n    transgraphSettings: state.transgraphSettings,\n    colorScale: state.colorScale,\n    isolateData: state.isolateData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    deactivateChart: deactivateChart,\n    changeTransResizeSignal: changeTransResizeSignal,\n    changeTransNodeSize: changeTransNodeSize,\n    changeTransTextSize: changeTransTextSize,\n    changeTransTextOffset: changeTransTextOffset,\n    setSelectedData: setSelectedData,\n    changeTransIsDownloading: changeTransIsDownloading,\n    changeTransLayoutKey: changeTransLayoutKey,\n    changeTransIsLinkLabelShown: changeTransIsLinkLabelShown,\n    changeTransisUserStyleApplied: changeTransisUserStyleApplied,\n    changeTransLinkFactor: changeTransLinkFactor,\n    changeTransisLinkWeightApplied: changeTransisLinkWeightApplied\n  }, dispatch);\n}\n\nvar MeasuredTransmissionGraph = withMeasure(dimensions)(TransmissionGraph);\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasuredTransmissionGraph);\n/*\n<Button\n  size={\"small\"}\n  style={{ margin: \"0 5px\", border: \"none\" }}\n  icon={<DownloadOutlined />}\n></Button>\n<p>Link's weight threshold</p>\n<Slider\n  id={\"transgraph-change-linkThreshold\"}\n  min={-1}\n  max={25}\n  step={1}\n  onChange={linkThresholdHandler}\n  defaultValue={props.transgraphSettings.transgraphIsDownloading}\n></Slider>\n*/","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_TransGraph/comp_TransGraph.js"],"names":["React","useState","useEffect","TransGraph","TransGraphHost","TransmissionGraphSettings","connect","bindActionCreators","withMeasure","Row","Col","Card","Button","Empty","DragOutlined","CloseOutlined","RetweetOutlined","SettingOutlined","deactivateChart","setSelectedData","changeTransResizeSignal","changeTransNodeSize","changeTransTextSize","changeTransTextOffset","changeTransIsDownloading","changeTransLayoutKey","changeTransIsLinkLabelShown","changeTransisUserStyleApplied","changeTransisLinkWeightApplied","changeTransLinkFactor","dimensions","TransmissionGraph","props","isUserRedraw","setisUserRedraw","isDrawerVisible","setisDrawerVisible","closeCardHandler","id","openDrawerHandler","closeDrawerHandler","userRedrawHandler","height","padding","margin","border","isolateData","transmissionData","graphData","transgraphSettings","graphKey","width","selectedData","colorScale","PRESENTED_IMAGE_SIMPLE","mapStateToProps","state","transmission","mapDispatchToProps","dispatch","MeasuredTransmissionGraph"],"mappings":"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","sourcesContent":["/* ============================================================================\n//\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport TransGraph from \"./chart_TransGraph_cytoscape\";\nimport TransGraphHost from \"./chart_TransGraph_cytoscape_host\";\nimport TransmissionGraphSettings from \"./comp_TransGraph_Settings\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport { Row, Col, Card, Button, Empty } from \"antd\";\nimport {\n  DragOutlined,\n  CloseOutlined,\n  RetweetOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport {\n  changeTransResizeSignal,\n  changeTransNodeSize,\n  changeTransTextSize,\n  changeTransTextOffset,\n  changeTransIsDownloading,\n  changeTransLayoutKey,\n  changeTransIsLinkLabelShown,\n  changeTransisUserStyleApplied,\n  changeTransisLinkWeightApplied,\n  changeTransLinkFactor,\n} from \"../action/transGraph_actions\";\n\nconst dimensions = [\"width\", \"height\"];\n\nconst TransmissionGraph = (props) => {\n  const [isUserRedraw, setisUserRedraw] = useState(false);\n  const [isDrawerVisible, setisDrawerVisible] = useState(false);\n\n  // USEEFFECTS\n  useEffect(() => {\n    //console.log(isUserRedraw);\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]);\n\n  //HANDLERS\n  const closeCardHandler = () => {\n    props.deactivateChart(props.id);\n    props.changeTransResizeSignal(false);\n  };\n  const openDrawerHandler = () => {\n    setisDrawerVisible(true);\n  };\n  const closeDrawerHandler = () => {\n    setisDrawerVisible(false);\n  };\n  const userRedrawHandler = () => {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeTransResizeSignal(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ height: \"100%\" }}>\n        <Card\n          title={\"Graph (Network)\"}\n          bordered={true}\n          headStyle={{ height: \"50px\", padding: \"0 20px\" }}\n          style={{ height: \"100%\" }}\n          bodyStyle={{ margin: \"0px\", padding: \"5px\" }}\n          extra={\n            <Row>\n              <Col span={6}>\n                <Button\n                  className=\"panelHeader\"\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<DragOutlined />}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                {\" \"}\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<RetweetOutlined />}\n                  onClick={userRedrawHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<SettingOutlined />}\n                  onClick={openDrawerHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<CloseOutlined />}\n                  onClick={closeCardHandler}\n                ></Button>\n              </Col>\n            </Row>\n          }\n        >\n          <div id=\"transgraph-drawer-settings\">\n            <TransmissionGraphSettings\n              isolateData={props.isolateData}\n              data={props.transmissionData.graphData}\n              isDrawerVisible={isDrawerVisible}\n              closeDrawerHandler={closeDrawerHandler}\n              transgraphSettings={props.transgraphSettings}\n              changeTransNodeSize={props.changeTransNodeSize}\n              changeTransTextSize={props.changeTransTextSize}\n              changeTransTextOffset={props.changeTransTextOffset}\n              changeTransLayoutKey={props.changeTransLayoutKey}\n              changeTransIsLinkLabelShown={props.changeTransIsLinkLabelShown}\n              changeTransLinkFactor={props.changeTransLinkFactor}\n              changeTransisUserStyleApplied={\n                props.changeTransisUserStyleApplied\n              }\n              changeTransisLinkWeightApplied={\n                props.changeTransisLinkWeightApplied\n              }\n              changeTransIsDownloading={props.changeTransIsDownloading}\n            />\n          </div>\n          {props.transmissionData.graphData &&\n            props.transmissionData.graphKey === \"isolate\" && (\n              <TransGraph\n                width={props.width}\n                height={props.height}\n                data={props.transmissionData.graphData}\n                isUserRedraw={isUserRedraw}\n                transgraphSettings={props.transgraphSettings}\n                selectedData={props.selectedData}\n                setSelectedData={props.setSelectedData}\n                colorScale={props.colorScale}\n                isolateData={props.isolateData}\n                changeTransIsDownloading={props.changeTransIsDownloading}\n              />\n            )}\n          {props.transmissionData.graphData &&\n            props.transmissionData.graphKey === \"host\" && (\n              <TransGraphHost\n                width={props.width}\n                height={props.height}\n                data={props.transmissionData.graphData}\n                isUserRedraw={isUserRedraw}\n                transgraphSettings={props.transgraphSettings}\n                selectedData={props.selectedData}\n                setSelectedData={props.setSelectedData}\n                colorScale={props.colorScale}\n                isolateData={props.isolateData}\n                changeTransIsDownloading={props.changeTransIsDownloading}\n              />\n            )}\n          {props.transmissionData.graphData &&\n            !props.transmissionData.graphKey && (\n              <React.Fragment>\n                <div id=\"transgraph-invalid-graph\">\n                  <Empty\n                    description={\n                      \"Invalid graph type: More than 20% node's label are neither isolate name nor source name. Please restart HAIviz and load a valid graph input\"\n                    }\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    transmissionData: state.transmission,\n    selectedData: state.selectedData,\n    transgraphSettings: state.transgraphSettings,\n    colorScale: state.colorScale,\n    isolateData: state.isolateData,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      deactivateChart: deactivateChart,\n      changeTransResizeSignal: changeTransResizeSignal,\n      changeTransNodeSize: changeTransNodeSize,\n      changeTransTextSize: changeTransTextSize,\n      changeTransTextOffset: changeTransTextOffset,\n      setSelectedData: setSelectedData,\n      changeTransIsDownloading: changeTransIsDownloading,\n      changeTransLayoutKey: changeTransLayoutKey,\n      changeTransIsLinkLabelShown: changeTransIsLinkLabelShown,\n      changeTransisUserStyleApplied: changeTransisUserStyleApplied,\n      changeTransLinkFactor: changeTransLinkFactor,\n      changeTransisLinkWeightApplied: changeTransisLinkWeightApplied,\n    },\n    dispatch\n  );\n}\n\nconst MeasuredTransmissionGraph = withMeasure(dimensions)(TransmissionGraph);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MeasuredTransmissionGraph);\n\n/*\n<Button\n  size={\"small\"}\n  style={{ margin: \"0 5px\", border: \"none\" }}\n  icon={<DownloadOutlined />}\n></Button>\n<p>Link's weight threshold</p>\n<Slider\n  id={\"transgraph-change-linkThreshold\"}\n  min={-1}\n  max={25}\n  step={1}\n  onChange={linkThresholdHandler}\n  defaultValue={props.transgraphSettings.transgraphIsDownloading}\n></Slider>\n*/\n"]},"metadata":{},"sourceType":"module"}