{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/hocs/withMeasure.js\";\n\n/* NOTE: this is compatible with react-measure up to 1.4.7 only */\nimport React from 'react';\nimport Measure from 'react-measure';\n\nvar withMeasure = function withMeasure() {\n  var dimensionsToInject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['width', 'height', 'top', 'right', 'bottom', 'left'];\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (WrappedComponent) {\n    return function (wrappedComponentProps) {\n      return /*#__PURE__*/React.createElement(Measure, Object.assign({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 3\n        }\n      }), function (dimensions) {\n        var injectedDimensions = {};\n        dimensionsToInject.forEach(function (key) {\n          //console.log(dimensions[key]);\n          injectedDimensions[key] = dimensions[key];\n        });\n        return /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, injectedDimensions, wrappedComponentProps, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 9\n          }\n        }));\n      });\n    };\n  };\n};\n\nexport default withMeasure;","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/hocs/withMeasure.js"],"names":["React","Measure","withMeasure","dimensionsToInject","props","WrappedComponent","wrappedComponentProps","dimensions","injectedDimensions","forEach","key"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAClBC,kBADkB,uEACG,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,EAA2B,OAA3B,EAAoC,QAApC,EAA8C,MAA9C,CADH;AAAA,MAElBC,KAFkB,uEAEV,EAFU;AAAA,SAGf,UAAAC,gBAAgB;AAAA,WAAI,UAAAC,qBAAqB;AAAA,0BAC5C,oBAAC,OAAD,oBAAaF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,UAAAG,UAAU,EAAI;AACb,YAAMC,kBAAkB,GAAG,EAA3B;AACAL,QAAAA,kBAAkB,CAACM,OAAnB,CAA2B,UAAAC,GAAG,EAAI;AAChC;AACAF,UAAAA,kBAAkB,CAACE,GAAD,CAAlB,GAA0BH,UAAU,CAACG,GAAD,CAApC;AACD,SAHD;AAIA,4BACE,oBAAC,gBAAD,oBAAsBF,kBAAtB,EAA8CF,qBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,OAVH,CAD4C;AAAA,KAAzB;AAAA,GAHD;AAAA,CAApB;;AAkBA,eAAeJ,WAAf","sourcesContent":["/* NOTE: this is compatible with react-measure up to 1.4.7 only */\nimport React from 'react'\nimport Measure from 'react-measure'\n\nconst withMeasure = (\n  dimensionsToInject = ['width', 'height', 'top', 'right', 'bottom', 'left'],\n  props = {}\n) => WrappedComponent => wrappedComponentProps => (\n  <Measure {...props}>\n    {dimensions => {\n      const injectedDimensions = {}\n      dimensionsToInject.forEach(key => {\n        //console.log(dimensions[key]);\n        injectedDimensions[key] = dimensions[key]\n      })\n      return (\n        <WrappedComponent {...injectedDimensions} {...wrappedComponentProps} />\n      )\n    }}\n  </Measure>\n)\n\nexport default withMeasure\n"]},"metadata":{},"sourceType":"module"}