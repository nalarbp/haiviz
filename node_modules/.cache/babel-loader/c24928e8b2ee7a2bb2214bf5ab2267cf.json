{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_DataTable/comp_DataTable_Settings.js\";\n\n/* ============================================================================\n============================================================================ */\nimport React, { useState } from \"react\";\nimport { color } from \"d3-color\";\nimport { ExportToCsv } from \"export-to-csv\";\nimport { Button, Select, Drawer, Row, Col } from \"antd\";\nimport { dateToStringIS08601 } from \"../utils/utils\";\nvar Option = Select.Option;\n\nvar DataTableSettings = function DataTableSettings(props) {\n  var _useState = useState(\"HAIviz\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      downloadFormat = _useState2[0],\n      setdownloadFormat = _useState2[1]; //HANDLERS\n\n\n  var downloadTableHandler = function downloadTableHandler() {\n    createCSVObject(props.isolateData, props.selectedData);\n  };\n\n  var changeTableFormatHandler = function changeTableFormatHandler(val) {\n    setdownloadFormat(val);\n  };\n\n  function createCSVObject(isolateData, selectedData) {\n    var csvObj = isolateData.map(function (d) {\n      return {\n        isolate_name: d.isolate_name,\n        isolate_species: d.isolate_species,\n        isolate_sourceType: d.isolate_sourceType,\n        isolate_sourceName: d.isolate_sourceName,\n        isolate_colDate: dateToStringIS08601(d.isolate_colDate),\n        isolate_colLocation: d.isolate_colLocation,\n        profile_1: d.profile_1,\n        profile_2: d.profile_2,\n        profile_3: d.profile_3,\n        \"isolate_species:color\": color(props.colorScale.bySpecies.get(d.isolate_species)).formatHex(),\n        \"isolate_sourceType:color\": color(props.colorScale.bySourceType.get(d.isolate_sourceType)).formatHex(),\n        \"isolate_colLocation:color\": color(props.colorScale.byLocation.get(d.isolate_colLocation)).formatHex(),\n        \"profile_1:color\": color(props.colorScale.byProfile1.get(d.profile_1)).formatHex(),\n        \"profile_2:color\": color(props.colorScale.byProfile2.get(d.profile_2)).formatHex(),\n        \"profile_3:color\": color(props.colorScale.byProfile3.get(d.profile_3)).formatHex()\n      };\n    }); //filter by selected data\n\n    if (selectedData && selectedData.length > 0) {\n      csvObj = csvObj.filter(function (d) {\n        return selectedData.indexOf(d.isolate_name) !== -1;\n      });\n    }\n\n    if (csvObj) {\n      var options = {\n        fieldSeparator: \",\",\n        filename: \"IsolateData_HAIviz\",\n        quoteStrings: '\"',\n        decimalSeparator: \".\",\n        showLabels: true,\n        showTitle: false,\n        useTextFile: false,\n        useBom: true,\n        useKeysAsHeaders: true\n      };\n      var csvExporter = new ExportToCsv(options);\n      csvExporter.generateCsv(csvObj);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Table settings\",\n    placement: \"right\",\n    closable: true,\n    onClose: props.closeDrawerHandler,\n    visible: props.isDrawerVisible,\n    getContainer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Table format \"), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: downloadFormat,\n    onChange: changeTableFormatHandler,\n    value: downloadFormat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"HAIviz\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"HAIviz\"))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: downloadTableHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Download table (.csv)\")))));\n};\n\nexport default DataTableSettings;","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_DataTable/comp_DataTable_Settings.js"],"names":["React","useState","color","ExportToCsv","Button","Select","Drawer","Row","Col","dateToStringIS08601","Option","DataTableSettings","props","downloadFormat","setdownloadFormat","downloadTableHandler","createCSVObject","isolateData","selectedData","changeTableFormatHandler","val","csvObj","map","d","isolate_name","isolate_species","isolate_sourceType","isolate_sourceName","isolate_colDate","isolate_colLocation","profile_1","profile_2","profile_3","colorScale","bySpecies","get","formatHex","bySourceType","byLocation","byProfile1","byProfile2","byProfile3","length","filter","indexOf","options","fieldSeparator","filename","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","useKeysAsHeaders","csvExporter","generateCsv","closeDrawerHandler","isDrawerVisible","width"],"mappings":"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","sourcesContent":["/* ============================================================================\n============================================================================ */\nimport React, { useState } from \"react\";\nimport { color } from \"d3-color\";\nimport { ExportToCsv } from \"export-to-csv\";\nimport { Button, Select, Drawer, Row, Col } from \"antd\";\nimport { dateToStringIS08601 } from \"../utils/utils\";\nconst { Option } = Select;\n\nconst DataTableSettings = (props) => {\n  const [downloadFormat, setdownloadFormat] = useState(\"HAIviz\");\n\n  //HANDLERS\n  const downloadTableHandler = () => {\n    createCSVObject(props.isolateData, props.selectedData);\n  };\n\n  const changeTableFormatHandler = (val) => {\n    setdownloadFormat(val);\n  };\n\n  function createCSVObject(isolateData, selectedData) {\n    let csvObj = isolateData.map((d) => {\n      return {\n        isolate_name: d.isolate_name,\n        isolate_species: d.isolate_species,\n        isolate_sourceType: d.isolate_sourceType,\n        isolate_sourceName: d.isolate_sourceName,\n        isolate_colDate: dateToStringIS08601(d.isolate_colDate),\n        isolate_colLocation: d.isolate_colLocation,\n        profile_1: d.profile_1,\n        profile_2: d.profile_2,\n        profile_3: d.profile_3,\n        \"isolate_species:color\": color(\n          props.colorScale.bySpecies.get(d.isolate_species)\n        ).formatHex(),\n        \"isolate_sourceType:color\": color(\n          props.colorScale.bySourceType.get(d.isolate_sourceType)\n        ).formatHex(),\n        \"isolate_colLocation:color\": color(\n          props.colorScale.byLocation.get(d.isolate_colLocation)\n        ).formatHex(),\n        \"profile_1:color\": color(\n          props.colorScale.byProfile1.get(d.profile_1)\n        ).formatHex(),\n        \"profile_2:color\": color(\n          props.colorScale.byProfile2.get(d.profile_2)\n        ).formatHex(),\n        \"profile_3:color\": color(\n          props.colorScale.byProfile3.get(d.profile_3)\n        ).formatHex(),\n      };\n    });\n    //filter by selected data\n    if (selectedData && selectedData.length > 0) {\n      csvObj = csvObj.filter(\n        (d) => selectedData.indexOf(d.isolate_name) !== -1\n      );\n    }\n\n    if (csvObj) {\n      const options = {\n        fieldSeparator: \",\",\n        filename: \"IsolateData_HAIviz\",\n        quoteStrings: '\"',\n        decimalSeparator: \".\",\n        showLabels: true,\n        showTitle: false,\n        useTextFile: false,\n        useBom: true,\n        useKeysAsHeaders: true,\n      };\n      const csvExporter = new ExportToCsv(options);\n      csvExporter.generateCsv(csvObj);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Drawer\n        title=\"Table settings\"\n        placement=\"right\"\n        closable={true}\n        onClose={props.closeDrawerHandler}\n        visible={props.isDrawerVisible}\n        getContainer={true}\n      >\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <p>Table format </p>\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder={downloadFormat}\n              onChange={changeTableFormatHandler}\n              value={downloadFormat}\n            >\n              <Option value=\"HAIviz\">HAIviz</Option>\n            </Select>\n          </Col>\n          <Col span={24}>\n            <Button onClick={downloadTableHandler}>\n              Download table (.csv)\n            </Button>\n          </Col>\n        </Row>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default DataTableSettings;\n"]},"metadata":{},"sourceType":"module"}