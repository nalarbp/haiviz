{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_Summary/chart_Summary.js\";\n\n/* ============================================================================\n============================================================================ */\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { getIsolateCompositionByCategory, getColorScale, getColorTypeTitle } from \"../utils/utils\";\nimport PieChart from \"./chart_Pie\";\nimport \"./style_summary.css\";\n\nvar SummaryChart = function SummaryChart(props) {\n  //states\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var totalIsolates = props.data.size;\n  var observedHeight = props.height - 80;\n  var desc_cont_h = observedHeight * 0.2;\n  var chart_cont_h = observedHeight * 0.8;\n  var currentColorScale = getColorScale(props.colorScale);\n  useEffect(function () {\n    if (props.colorScale.colorType) {\n      var _data = getIsolateCompositionByCategory(props.colorScale.colorType, props.data);\n\n      setData(_data);\n    }\n  }, [props.data, props.colorScale]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      backgroundColor: \"none\"\n    },\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: chart_cont_h,\n      backgroundColor: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    chart_h: chart_cont_h,\n    data: data,\n    marginLeft: 20,\n    marginRight: 20,\n    legendsXOffset: 0,\n    colorScale: currentColorScale,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"none\",\n      fontSize: \"16px\",\n      marginTop: \"5px\",\n      padding: \"5px\",\n      textAlign: \"center\",\n      lineHeight: \"7px\",\n      height: desc_cont_h\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Total isolates: \", totalIsolates), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Color index: \", getColorTypeTitle(props.colorScale.colorType))))));\n};\n\nexport default SummaryChart;\n/*\n<Col\n  style={{\n    padding: \"10px\",\n    backgroundColor: \"orange\"\n  }}\n  xs={24}\n  md={8}\n>\n  <Text\n    ellipsis={true}\n    style={{\n      fontWeight: \"bold\",\n      color: \"#1eb776\"\n    }}\n  >\n    {totalIsolates} isolates\n  </Text>\n  <p id=\"color-index-text\">Color index:</p>\n  <span style={{ lineHeight: \"12px\" }} />\n  <p id=\"color-index-desc\">\n    {getColorTypeTitle(props.colorScale.colorType)}\n  </p>\n</Col>\n */","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_Summary/chart_Summary.js"],"names":["React","useEffect","useState","Row","Col","getIsolateCompositionByCategory","getColorScale","getColorTypeTitle","PieChart","SummaryChart","props","data","setData","totalIsolates","size","observedHeight","height","desc_cont_h","chart_cont_h","currentColorScale","colorScale","colorType","backgroundColor","fontSize","marginTop","padding","textAlign","lineHeight"],"mappings":";;;;;AAAA;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,SACEC,+BADF,EAEEC,aAFF,EAGEC,iBAHF,QAIO,gBAJP;AAKA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,qBAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B;AAD8B,kBAENR,QAAQ,CAAC,IAAD,CAFF;AAAA;AAAA,MAEvBS,IAFuB;AAAA,MAEjBC,OAFiB;;AAG9B,MAAMC,aAAa,GAAGH,KAAK,CAACC,IAAN,CAAWG,IAAjC;AACA,MAAMC,cAAc,GAAGL,KAAK,CAACM,MAAN,GAAe,EAAtC;AACA,MAAMC,WAAW,GAAGF,cAAc,GAAG,GAArC;AACA,MAAMG,YAAY,GAAGH,cAAc,GAAG,GAAtC;AACA,MAAMI,iBAAiB,GAAGb,aAAa,CAACI,KAAK,CAACU,UAAP,CAAvC;AAEAnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,KAAK,CAACU,UAAN,CAAiBC,SAArB,EAAgC;AAC9B,UAAMV,KAAI,GAAGN,+BAA+B,CAC1CK,KAAK,CAACU,UAAN,CAAiBC,SADyB,EAE1CX,KAAK,CAACC,IAFoC,CAA5C;;AAIAC,MAAAA,OAAO,CAACD,KAAD,CAAP;AACD;AACF,GARQ,EAQN,CAACD,KAAK,CAACC,IAAP,EAAaD,KAAK,CAACU,UAAnB,CARM,CAAT;AAUA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,eAAe,EAAE;AAAnB,KAAZ;AAAyC,IAAA,EAAE,EAAE,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAM,EAAEE,YAAV;AAAwBI,MAAAA,eAAe,EAAE;AAAzC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEJ,YADX;AAEE,IAAA,IAAI,EAAEP,IAFR;AAGE,IAAA,UAAU,EAAE,EAHd;AAIE,IAAA,WAAW,EAAE,EAJf;AAKE,IAAA,cAAc,EAAE,CALlB;AAME,IAAA,UAAU,EAAEQ,iBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAWE;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,eAAe,EAAE,MADZ;AAELC,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,SAAS,EAAE,KAHN;AAILC,MAAAA,OAAO,EAAE,KAJJ;AAKLC,MAAAA,SAAS,EAAE,QALN;AAMLC,MAAAA,UAAU,EAAE,KANP;AAOLX,MAAAA,MAAM,EAAEC;AAPH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBJ,aAApB,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBN,iBAAiB,CAACG,KAAK,CAACU,UAAN,CAAiBC,SAAlB,CAAlC,CAZF,CAXF,CADF,CADF,CADF;AAgCD,CAnDD;;AAqDA,eAAeZ,YAAf;AAEA","sourcesContent":["/* ============================================================================\n============================================================================ */\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport {\n  getIsolateCompositionByCategory,\n  getColorScale,\n  getColorTypeTitle,\n} from \"../utils/utils\";\nimport PieChart from \"./chart_Pie\";\nimport \"./style_summary.css\";\n\nconst SummaryChart = (props) => {\n  //states\n  const [data, setData] = useState(null);\n  const totalIsolates = props.data.size;\n  const observedHeight = props.height - 80;\n  const desc_cont_h = observedHeight * 0.2;\n  const chart_cont_h = observedHeight * 0.8;\n  const currentColorScale = getColorScale(props.colorScale);\n\n  useEffect(() => {\n    if (props.colorScale.colorType) {\n      const data = getIsolateCompositionByCategory(\n        props.colorScale.colorType,\n        props.data\n      );\n      setData(data);\n    }\n  }, [props.data, props.colorScale]);\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Col style={{ backgroundColor: \"none\" }} xs={24}>\n          <div style={{ height: chart_cont_h, backgroundColor: \"none\" }}>\n            <PieChart\n              chart_h={chart_cont_h}\n              data={data}\n              marginLeft={20}\n              marginRight={20}\n              legendsXOffset={0}\n              colorScale={currentColorScale}\n            />\n          </div>\n          <div\n            style={{\n              backgroundColor: \"none\",\n              fontSize: \"16px\",\n              marginTop: \"5px\",\n              padding: \"5px\",\n              textAlign: \"center\",\n              lineHeight: \"7px\",\n              height: desc_cont_h,\n            }}\n          >\n            <p>Total isolates: {totalIsolates}</p>\n            <p>Color index: {getColorTypeTitle(props.colorScale.colorType)}</p>\n          </div>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default SummaryChart;\n\n/*\n<Col\n  style={{\n    padding: \"10px\",\n    backgroundColor: \"orange\"\n  }}\n  xs={24}\n  md={8}\n>\n  <Text\n    ellipsis={true}\n    style={{\n      fontWeight: \"bold\",\n      color: \"#1eb776\"\n    }}\n  >\n    {totalIsolates} isolates\n  </Text>\n  <p id=\"color-index-text\">Color index:</p>\n  <span style={{ lineHeight: \"12px\" }} />\n  <p id=\"color-index-desc\">\n    {getColorTypeTitle(props.colorScale.colorType)}\n  </p>\n</Col>\n */\n"]},"metadata":{},"sourceType":"module"}