{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_Movement/chart_Movement_gantt.js\";\n\n/* ============================================================================\nGantt chart :\n- when dataset for chart is available, render temporal barchart viewer\nlet viwer_data_dummy = [\n  { id: val, start_date: \"2020-01-1\", end_date: \"2020-01-1\", locationType: Ward, location_name: W1},\n  {...}]\n============================================================================ */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { extent } from \"d3-array\";\nimport { timeFormat } from \"d3-time-format\";\nimport { select } from \"d3-selection\";\nimport { scaleBand, scaleTime } from \"d3-scale\";\nimport { axisBottom, axisLeft } from \"d3-axis\";\nimport { line, curveNatural } from \"d3-shape\";\nimport { zoom } from \"d3-zoom\";\nimport { event as currentEvent } from \"d3\";\nimport { Empty, Button } from \"antd\";\nimport { ZoomInOutlined, ZoomOutOutlined } from \"@ant-design/icons\";\nimport { filterUnique, getColorScaleByObject, computeQuadraticCurve } from \"../utils/utils\";\nimport Moment from \"moment\";\nimport { extendMoment } from \"moment-range\";\nimport { isInteger } from \"lodash\";\nvar moment = extendMoment(Moment);\n\nvar PatientMovement = function PatientMovement(props) {\n  //INTERNAL STATES/REFS\n  var zoomStateRef = useRef(null);\n  var ganttChartSVGRef = useRef();\n  var ganttChartContainerRef = useRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedLocation = _useState2[0],\n      setselectedLocation = _useState2[1]; //DRAWING CONSTRUCTOR\n\n\n  var container = select(ganttChartContainerRef.current);\n  var svg = select(ganttChartSVGRef.current);\n  var observedWidth = props.width - 10; //observedWidth\n\n  var observedHeight = props.height - 80; // observedHeight\n\n  var margin = {\n    top: 10,\n    right: 20,\n    bottom: 40,\n    left: 60\n  };\n  var ganttChart_w = observedWidth - margin.left - margin.right;\n  var ganttChart_h = observedHeight - margin.top - margin.bottom - 10;\n  var curve = line().curve(curveNatural); //SETTINGS\n\n  var isUserStartResize = props.movementSettings.isUserStartResize;\n  var nodeSize = props.movementSettings.nodeSize;\n  var isLineShown = props.movementSettings.isOverlappingLineShown;\n  var isLineScaled = props.movementSettings.isOverlappingLineScaled;\n  var lineScaleFactor = props.movementSettings.overlappingLineScaleFactor;\n  var isSortedBySuffix = props.movementSettings.isSortedBySuffix;\n  var suffixSeparator = props.movementSettings.suffixSeparator;\n  var doesUserResort = props.movementSettings.isResort; //USE EFFECTS\n\n  useEffect(function () {\n    if (observedWidth && observedHeight && !isUserStartResize && !props.isUserRedraw) {\n      //when initial draw\n      draw();\n    } else if (observedWidth && observedHeight && !isUserStartResize && props.isUserRedraw) {\n      //when user click redraw\n      draw();\n    } else {\n      select(\"#ganttChart-svgGroup\").remove();\n      select(\"#movement-buttons-container\").style(\"display\", \"none\");\n      select(\"#movement-no-drawing\").style(\"display\", \"block\");\n      minimizeSVG();\n    }\n  }, [observedWidth, observedHeight, isUserStartResize, props.isUserRedraw]);\n  useEffect(function () {\n    if (props.selectedData && props.selectedData.length > 0) {\n      updateBySelectedData();\n    } else if (props.selectedData && props.selectedData.length === 0) {\n      clearSelectedData();\n    }\n  }, [props.selectedData]);\n  useEffect(function () {\n    if (props.colorScale.colorType) {\n      svg.selectAll(\".gantt-chart-rectangle\").attr(\"fill\", function (d) {\n        var col = props.colorScale.byLocation.get(d.location_name);\n\n        if (col) {\n          return col;\n        } else {\n          if (d.location_color) {\n            return d.location_color;\n          } else {\n            return \"gray\";\n          }\n        }\n      });\n      svg.selectAll(\".gantt-colDate-marker\").attr(\"fill\", function (d) {\n        return getColorScaleByObject(d, props.colorScale);\n      });\n    }\n  }, [props.colorScale]);\n  useEffect(function () {\n    if (selectedLocation && isLineShown) {\n      //console.log(selectedLocation);\n      svg.selectAll(\".gantt-overlapping-path\").style(\"display\", function (d) {\n        //console.log(d.source.location_name, selectedLocation);\n        if (d.source.location_name === selectedLocation) {\n          return \"block\";\n        } else {\n          return \"none\";\n        }\n      });\n    } else if (!selectedLocation && isLineShown) {\n      svg.selectAll(\".gantt-overlapping-path\").style(\"display\", \"block\");\n    } else {\n      svg.selectAll(\".gantt-overlapping-path\").style(\"display\", \"none\");\n    }\n  }, [selectedLocation, isLineShown]);\n  useEffect(function () {\n    if (isLineScaled && lineScaleFactor) {\n      svg.selectAll(\".gantt-overlapping-path\").attr(\"stroke-width\", function (d) {\n        return lineScaleFactor * d.overlapDay;\n      });\n    } else {\n      svg.selectAll(\".gantt-overlapping-path\").attr(\"stroke-width\", 1);\n    }\n  }, [isLineScaled, lineScaleFactor]);\n  useEffect(function () {\n    draw();\n  }, [doesUserResort]); //DRAWING\n\n  function draw() {\n    //CLEANING  UP\n    select(\"#movement-no-drawing\").style(\"display\", \"none\");\n    select(\"#movement-buttons-container\").style(\"display\", \"block\");\n    select(\"#ganttChart-svgGroup\").remove(); //DATA PREPS\n\n    var dateRange = extent(props.data.flatMap(function (d) {\n      return [d.start_date, d.end_date];\n    }));\n    var hostList = props.data.map(function (d) {\n      return d.source_name;\n    }).filter(filterUnique);\n    var separator = suffixSeparator; //sort hostlist\n\n    if (isSortedBySuffix) {\n      hostList.sort(function (a, b) {\n        var splitted_a = a.split(separator);\n        var splitted_b = b.split(separator);\n        var suffix_a = parseInt(splitted_a[splitted_a.length - 1]) ? parseInt(splitted_a[splitted_a.length - 1]) : splitted_a[splitted_a.length - 1];\n        var suffix_b = parseInt(splitted_b[splitted_b.length - 1]) ? parseInt(splitted_b[splitted_b.length - 1]) : splitted_b[splitted_b.length - 1];\n\n        if (suffix_a < suffix_b) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n\n    var locationList = props.data.map(function (d) {\n      return d.location_name;\n    }).filter(filterUnique);\n    var rectHeight = ganttChart_h / (hostList.length + 1);\n    var overlapData = [];\n    props.data.forEach(function (d, i) {\n      var sourceLoc = d;\n      d.start_date.startOf(\"day\");\n      var sourceRange = moment.range(d.start_date.startOf(\"day\"), d.end_date.endOf(\"day\"));\n\n      for (var j = i + 1; j < props.data.length; j++) {\n        var targetLoc = props.data[j];\n\n        if (sourceLoc.location_name === targetLoc.location_name && sourceLoc.source_name !== targetLoc.source_name) {\n          var targetRange = moment.range(targetLoc.start_date.startOf(\"day\"), targetLoc.end_date.endOf(\"day\"));\n\n          if (sourceRange.overlaps(targetRange)) {\n            var overlapRange = sourceRange.intersect(targetRange);\n            var overlapDur = overlapRange.diff(\"days\");\n            var fixed_overlapDur = overlapDur === 0 ? 1 : overlapDur;\n            overlapData.push({\n              source: sourceLoc,\n              target: targetLoc,\n              overlapDay: fixed_overlapDur\n            });\n          }\n        }\n      }\n    }); //get subset of isolate data from location\n\n    var isolateData_loc = [];\n    Array.from(props.isolateData.values()).forEach(function (d) {\n      //get records from isolate data and push it\n      if (locationList.indexOf(d.isolate_colLocation) !== -1 && hostList.indexOf(d.isolate_sourceName) !== -1) {\n        isolateData_loc.push(d);\n      }\n    });\n    var svg = select(ganttChartSVGRef.current);\n    svg.attr(\"width\", ganttChart_w + margin.left + margin.right).attr(\"height\", ganttChart_h + margin.top + margin.bottom); //scale\n\n    var scale_x = scaleTime().domain([moment(dateRange[0]).subtract(1, \"days\"), moment(dateRange[1]).add(1, \"days\")]).range([0, ganttChart_w]);\n    var scale_y = scaleBand().domain(hostList).range([0, ganttChart_h]).paddingInner(0.1).paddingOuter(0.1); //axis\n\n    var axis_x = axisBottom().scale(scale_x).tickSize([5]).tickFormat(timeFormat(\"%b-%d\"));\n    var axis_y = axisLeft().scale(scale_y).tickSize([5]); //make group root of svg for transformation purpose\n\n    var svgGroup = svg.append(\"g\").attr(\"id\", \"ganttChart-svgGroup\").attr(\"transform\", \"translate(\" + margin.left + \",\" + 5 + \")\"); //axis group\n\n    svgGroup.append(\"g\").attr(\"transform\", \"translate(\" + 0 + \",\" + ganttChart_h + \")\").call(axis_x);\n    svgGroup.append(\"g\").call(axis_y); //make background lane\n\n    var backgroundLaneGroup = svgGroup.append(\"g\").attr(\"id\", \"gantt-backgroundLane-group\");\n    backgroundLaneGroup.selectAll(\".gantt-backgroundLane\").data(hostList).enter().append(\"rect\").attr(\"class\", \"gantt-backgroundLane\").attr(\"stroke\", \"gray\").attr(\"stroke-width\", \"0.5px\").attr(\"fill\", \"none\").attr(\"x\", function () {\n      return scale_x(dateRange[0]);\n    }).attr(\"y\", function (d) {\n      return parseInt(scale_y(d));\n    }).attr(\"width\", function () {\n      return scale_x(dateRange[1]) - scale_x(dateRange[0]);\n    }).attr(\"height\", rectHeight).style(\"opacity\", 0.3); //make bar chart group and draw chart on it\n\n    svgGroup.append(\"g\").attr(\"id\", \"barchartGroup\").selectAll(\".gantt-chart-rectangle\").data(props.data).enter().append(\"rect\").attr(\"class\", \"gantt-chart-rectangle\").attr(\"height\", function (d) {\n      if (d.is_admDisc) {\n        return rectHeight / 4;\n      }\n\n      return rectHeight;\n    }).attr(\"stroke\", \"none\").attr(\"fill\", function (d) {\n      var col = props.colorScale.byLocation.get(d.location_name);\n\n      if (col) {\n        return col;\n      } else {\n        if (d.location_color) {\n          return d.location_color;\n        } else {\n          return \"gray\";\n        }\n      }\n    }).attr(\"x\", function (d) {\n      return scale_x(d.start_date);\n    }).attr(\"y\", function (d) {\n      if (d.is_admDisc) {\n        return parseInt(scale_y(d.source_name)) + rectHeight / 4 + rectHeight / 4 / 2;\n      } else {\n        return parseInt(scale_y(d.source_name));\n      }\n    }).attr(\"width\", function (d) {\n      var diffRange = moment.range(d.start_date, d.end_date).diff(\"days\");\n\n      if (diffRange === 0) {\n        return scale_x(d.end_date.endOf(\"day\")) - scale_x(d.start_date.startOf(\"day\"));\n      } else {\n        return scale_x(d.end_date) - scale_x(d.start_date);\n      }\n    }).on(\"click\", function (d) {\n      setselectedLocation(d.location_name);\n    }).append(\"title\").text(function (d) {\n      var dateStart = moment(d.start_date).format(\"D-MMM-YYYY\");\n      var dateEnd = moment(d.end_date).format(\"D-MMM-YYYY\");\n      return d.location_name + \": \" + dateStart + \" to \" + dateEnd;\n    }); //make path group\n\n    var pathGroup = svgGroup.append(\"g\").attr(\"id\", \"gantt-path-group\");\n    pathGroup.selectAll(\".gantt-overlapping-path\").data(overlapData).enter().append(\"path\").attr(\"class\", \"gantt-overlapping-path\").attr(\"d\", function (d) {\n      var qPoint = computeQuadraticCurve(scale_x(d.source.start_date), parseInt(scale_y(d.source.source_name) + rectHeight / 2), scale_x(d.target.start_date), parseInt(scale_y(d.target.source_name) + rectHeight / 2), 10);\n      return curve([[scale_x(d.source.start_date), parseInt(scale_y(d.source.source_name) + rectHeight / 2)], qPoint, [scale_x(d.target.start_date), parseInt(scale_y(d.target.source_name) + rectHeight / 2)]]);\n    }).attr(\"fill\", \"none\").attr(\"cursor\", \"pointer\").attr(\"stroke-width\", function (d) {\n      return isLineScaled ? lineScaleFactor * d.overlapDay : 1;\n    }).attr(\"stroke\", \"black\").style(\"display\", function (d) {\n      if (isLineShown) {\n        if (selectedLocation) {\n          if (d.source.location_name === selectedLocation) {\n            return \"block\";\n          } else {\n            return \"none\";\n          }\n        } else {\n          return \"block\";\n        }\n      } else {\n        return \"none\";\n      }\n    }).append(\"title\").text(function (d) {\n      return d.source.source_name + \"-\" + d.target.source_name + \" at \" + d.source.location_name + \": \" + d.overlapDay + \" days\";\n    }); //make isolate collection marker\n\n    var colDateMarker = svgGroup.append(\"g\").attr(\"id\", \"gantt-colDate-group\");\n    colDateMarker.selectAll(\".gantt-colDate-marker\").data(isolateData_loc).enter().append(\"circle\").attr(\"class\", \"gantt-colDate-marker\").attr(\"fill\", function (d) {\n      return getColorScaleByObject(d, props.colorScale);\n    }).attr(\"stroke\", \"white\").attr(\"stroke-width\", \"2px\").attr(\"r\", nodeSize).attr(\"cx\", function (d) {\n      return scale_x(d.isolate_colDate);\n    }).attr(\"cy\", function (d) {\n      return parseInt(scale_y(d.isolate_sourceName)) + rectHeight / 2;\n    }).on(\"click\", function (d) {\n      return props.setSelectedData([d.uid]);\n    }).style(\"cursor\", \"pointer\").append(\"title\").text(function (d) {\n      return \"isolate \".concat(d.isolate_name, \" from \").concat(d.isolate_sourceName);\n    });\n    svg.selectAll(\"#ganttChart-svgGroup g\").attr(\"font-family\", \"Verdana\"); //zoom functionality\n\n    if (props.selectedData && props.selectedData.length > 0) {\n      updateBySelectedData();\n    } //zoom functionality\n\n\n    var zoomHandler = zoom().scaleExtent([0.1, 6]).on(\"zoom\", function () {\n      zoomStateRef.current = currentEvent.transform;\n      select(\"#ganttChart-svgGroup\").attr(\"transform\", currentEvent.transform);\n    }).filter(function () {\n      return !currentEvent.button && currentEvent.type !== \"wheel\";\n    }); //Zoom in button\n\n    container.select(\"#movement-zoomIn\").on(\"click\", function () {\n      zoomHandler.scaleBy(svg.transition().duration(500), 1.5);\n    }); //Zoom out button\n\n    container.select(\"#movement-zoomOut\").on(\"click\", function () {\n      zoomHandler.scaleBy(svg.transition().duration(500), 0.5);\n    });\n    svg.call(zoomHandler);\n  }\n\n  function minimizeSVG() {\n    var svg = select(ganttChartSVGRef.current);\n    svg.attr(\"width\", 0).attr(\"height\", 0);\n  }\n\n  function updateBySelectedData() {\n    svg.selectAll(\".gantt-colDate-marker\").attr(\"r\", function (d) {\n      if (props.selectedData.indexOf(d.uid) !== -1) {\n        return nodeSize * 1.5;\n      } else {\n        return nodeSize;\n      }\n    }).style(\"opacity\", function (d) {\n      if (props.selectedData.indexOf(d.uid) !== -1) {\n        return 0.9;\n      } else {\n        return 0.2;\n      }\n    });\n  }\n\n  function clearSelectedData() {\n    svg.selectAll(\".gantt-colDate-marker\").attr(\"r\", function () {\n      return nodeSize;\n    }).style(\"opacity\", function () {\n      return 0.9;\n    });\n  } //HELPER FUNCTIONS\n  //console.log(selectedLocation);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"ganttChartContainer\",\n    ref: ganttChartContainerRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"movement-no-drawing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Empty, {\n    description: \"No chart: please click redraw button\",\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"movement-buttons-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"movement-zoom-buttons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    title: \"Zoom in\",\n    shape: \"circle\",\n    id: \"movement-zoomIn\",\n    size: \"medium\",\n    icon: /*#__PURE__*/React.createElement(ZoomInOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    title: \"Zoom out\",\n    shape: \"circle\",\n    id: \"movement-zoomOut\",\n    size: \"medium\",\n    icon: /*#__PURE__*/React.createElement(ZoomOutOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"ganttChart-svg\",\n    className: \"ganttChart-svg_class\",\n    ref: ganttChartSVGRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PatientMovement;\n/*\n */","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_Movement/chart_Movement_gantt.js"],"names":["React","useState","useEffect","useRef","extent","timeFormat","select","scaleBand","scaleTime","axisBottom","axisLeft","line","curveNatural","zoom","event","currentEvent","Empty","Button","ZoomInOutlined","ZoomOutOutlined","filterUnique","getColorScaleByObject","computeQuadraticCurve","Moment","extendMoment","isInteger","moment","PatientMovement","props","zoomStateRef","ganttChartSVGRef","ganttChartContainerRef","selectedLocation","setselectedLocation","container","current","svg","observedWidth","width","observedHeight","height","margin","top","right","bottom","left","ganttChart_w","ganttChart_h","curve","isUserStartResize","movementSettings","nodeSize","isLineShown","isOverlappingLineShown","isLineScaled","isOverlappingLineScaled","lineScaleFactor","overlappingLineScaleFactor","isSortedBySuffix","suffixSeparator","doesUserResort","isResort","isUserRedraw","draw","remove","style","minimizeSVG","selectedData","length","updateBySelectedData","clearSelectedData","colorScale","colorType","selectAll","attr","d","col","byLocation","get","location_name","location_color","source","overlapDay","dateRange","data","flatMap","start_date","end_date","hostList","map","source_name","filter","separator","sort","a","b","splitted_a","split","splitted_b","suffix_a","parseInt","suffix_b","locationList","rectHeight","overlapData","forEach","i","sourceLoc","startOf","sourceRange","range","endOf","j","targetLoc","targetRange","overlaps","overlapRange","intersect","overlapDur","diff","fixed_overlapDur","push","target","isolateData_loc","Array","from","isolateData","values","indexOf","isolate_colLocation","isolate_sourceName","scale_x","domain","subtract","add","scale_y","paddingInner","paddingOuter","axis_x","scale","tickSize","tickFormat","axis_y","svgGroup","append","call","backgroundLaneGroup","enter","is_admDisc","diffRange","on","text","dateStart","format","dateEnd","pathGroup","qPoint","colDateMarker","isolate_colDate","setSelectedData","uid","isolate_name","zoomHandler","scaleExtent","transform","button","type","scaleBy","transition","duration","PRESENTED_IMAGE_SIMPLE"],"mappings":"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","sourcesContent":["/* ============================================================================\nGantt chart :\n- when dataset for chart is available, render temporal barchart viewer\nlet viwer_data_dummy = [\n  { id: val, start_date: \"2020-01-1\", end_date: \"2020-01-1\", locationType: Ward, location_name: W1},\n  {...}]\n============================================================================ */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { extent } from \"d3-array\";\nimport { timeFormat } from \"d3-time-format\";\nimport { select } from \"d3-selection\";\nimport { scaleBand, scaleTime } from \"d3-scale\";\nimport { axisBottom, axisLeft } from \"d3-axis\";\nimport { line, curveNatural } from \"d3-shape\";\nimport { zoom } from \"d3-zoom\";\nimport { event as currentEvent } from \"d3\";\nimport { Empty, Button } from \"antd\";\nimport { ZoomInOutlined, ZoomOutOutlined } from \"@ant-design/icons\";\nimport {\n  filterUnique,\n  getColorScaleByObject,\n  computeQuadraticCurve,\n} from \"../utils/utils\";\n\nimport Moment from \"moment\";\nimport { extendMoment } from \"moment-range\";\nimport { isInteger } from \"lodash\";\n\nconst moment = extendMoment(Moment);\n\nconst PatientMovement = (props) => {\n  //INTERNAL STATES/REFS\n  const zoomStateRef = useRef(null);\n  const ganttChartSVGRef = useRef();\n  const ganttChartContainerRef = useRef();\n  const [selectedLocation, setselectedLocation] = useState(null);\n\n  //DRAWING CONSTRUCTOR\n  const container = select(ganttChartContainerRef.current);\n  const svg = select(ganttChartSVGRef.current);\n  const observedWidth = props.width - 10; //observedWidth\n  const observedHeight = props.height - 80; // observedHeight\n  const margin = { top: 10, right: 20, bottom: 40, left: 60 };\n  const ganttChart_w = observedWidth - margin.left - margin.right;\n  const ganttChart_h = observedHeight - margin.top - margin.bottom - 10;\n  const curve = line().curve(curveNatural);\n\n  //SETTINGS\n  const isUserStartResize = props.movementSettings.isUserStartResize;\n  const nodeSize = props.movementSettings.nodeSize;\n  const isLineShown = props.movementSettings.isOverlappingLineShown;\n  const isLineScaled = props.movementSettings.isOverlappingLineScaled;\n  const lineScaleFactor = props.movementSettings.overlappingLineScaleFactor;\n  const isSortedBySuffix = props.movementSettings.isSortedBySuffix;\n  const suffixSeparator = props.movementSettings.suffixSeparator;\n  const doesUserResort = props.movementSettings.isResort;\n\n  //USE EFFECTS\n  useEffect(() => {\n    if (\n      observedWidth &&\n      observedHeight &&\n      !isUserStartResize &&\n      !props.isUserRedraw\n    ) {\n      //when initial draw\n      draw();\n    } else if (\n      observedWidth &&\n      observedHeight &&\n      !isUserStartResize &&\n      props.isUserRedraw\n    ) {\n      //when user click redraw\n      draw();\n    } else {\n      select(\"#ganttChart-svgGroup\").remove();\n      select(\"#movement-buttons-container\").style(\"display\", \"none\");\n      select(\"#movement-no-drawing\").style(\"display\", \"block\");\n      minimizeSVG();\n    }\n  }, [observedWidth, observedHeight, isUserStartResize, props.isUserRedraw]);\n  useEffect(() => {\n    if (props.selectedData && props.selectedData.length > 0) {\n      updateBySelectedData();\n    } else if (props.selectedData && props.selectedData.length === 0) {\n      clearSelectedData();\n    }\n  }, [props.selectedData]);\n  useEffect(() => {\n    if (props.colorScale.colorType) {\n      svg.selectAll(\".gantt-chart-rectangle\").attr(\"fill\", (d) => {\n        let col = props.colorScale.byLocation.get(d.location_name);\n        if (col) {\n          return col;\n        } else {\n          if (d.location_color) {\n            return d.location_color;\n          } else {\n            return \"gray\";\n          }\n        }\n      });\n      svg.selectAll(\".gantt-colDate-marker\").attr(\"fill\", (d) => {\n        return getColorScaleByObject(d, props.colorScale);\n      });\n    }\n  }, [props.colorScale]);\n\n  useEffect(() => {\n    if (selectedLocation && isLineShown) {\n      //console.log(selectedLocation);\n      svg.selectAll(\".gantt-overlapping-path\").style(\"display\", (d) => {\n        //console.log(d.source.location_name, selectedLocation);\n        if (d.source.location_name === selectedLocation) {\n          return \"block\";\n        } else {\n          return \"none\";\n        }\n      });\n    } else if (!selectedLocation && isLineShown) {\n      svg.selectAll(\".gantt-overlapping-path\").style(\"display\", \"block\");\n    } else {\n      svg.selectAll(\".gantt-overlapping-path\").style(\"display\", \"none\");\n    }\n  }, [selectedLocation, isLineShown]);\n\n  useEffect(() => {\n    if (isLineScaled && lineScaleFactor) {\n      svg\n        .selectAll(\".gantt-overlapping-path\")\n        .attr(\"stroke-width\", (d) => lineScaleFactor * d.overlapDay);\n    } else {\n      svg.selectAll(\".gantt-overlapping-path\").attr(\"stroke-width\", 1);\n    }\n  }, [isLineScaled, lineScaleFactor]);\n\n  useEffect(() => {\n    draw();\n  }, [doesUserResort]);\n\n  //DRAWING\n  function draw() {\n    //CLEANING  UP\n    select(\"#movement-no-drawing\").style(\"display\", \"none\");\n    select(\"#movement-buttons-container\").style(\"display\", \"block\");\n    select(\"#ganttChart-svgGroup\").remove();\n\n    //DATA PREPS\n    const dateRange = extent(\n      props.data.flatMap((d) => [d.start_date, d.end_date])\n    );\n    const hostList = props.data.map((d) => d.source_name).filter(filterUnique);\n    let separator = suffixSeparator;\n\n    //sort hostlist\n    if (isSortedBySuffix) {\n      hostList.sort((a, b) => {\n        let splitted_a = a.split(separator);\n        let splitted_b = b.split(separator);\n\n        let suffix_a = parseInt(splitted_a[splitted_a.length - 1])\n          ? parseInt(splitted_a[splitted_a.length - 1])\n          : splitted_a[splitted_a.length - 1];\n        let suffix_b = parseInt(splitted_b[splitted_b.length - 1])\n          ? parseInt(splitted_b[splitted_b.length - 1])\n          : splitted_b[splitted_b.length - 1];\n\n        if (suffix_a < suffix_b) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n    const locationList = props.data\n      .map((d) => d.location_name)\n      .filter(filterUnique);\n    const rectHeight = ganttChart_h / (hostList.length + 1);\n    let overlapData = [];\n    props.data.forEach((d, i) => {\n      let sourceLoc = d;\n      d.start_date.startOf(\"day\");\n      let sourceRange = moment.range(\n        d.start_date.startOf(\"day\"),\n        d.end_date.endOf(\"day\")\n      );\n      for (var j = i + 1; j < props.data.length; j++) {\n        const targetLoc = props.data[j];\n        if (\n          sourceLoc.location_name === targetLoc.location_name &&\n          sourceLoc.source_name !== targetLoc.source_name\n        ) {\n          let targetRange = moment.range(\n            targetLoc.start_date.startOf(\"day\"),\n            targetLoc.end_date.endOf(\"day\")\n          );\n          if (sourceRange.overlaps(targetRange)) {\n            let overlapRange = sourceRange.intersect(targetRange);\n            let overlapDur = overlapRange.diff(\"days\");\n            let fixed_overlapDur = overlapDur === 0 ? 1 : overlapDur;\n            overlapData.push({\n              source: sourceLoc,\n              target: targetLoc,\n              overlapDay: fixed_overlapDur,\n            });\n          }\n        }\n      }\n    });\n\n    //get subset of isolate data from location\n    let isolateData_loc = [];\n    Array.from(props.isolateData.values()).forEach((d) => {\n      //get records from isolate data and push it\n      if (\n        locationList.indexOf(d.isolate_colLocation) !== -1 &&\n        hostList.indexOf(d.isolate_sourceName) !== -1\n      ) {\n        isolateData_loc.push(d);\n      }\n    });\n\n    const svg = select(ganttChartSVGRef.current);\n    svg\n      .attr(\"width\", ganttChart_w + margin.left + margin.right)\n      .attr(\"height\", ganttChart_h + margin.top + margin.bottom);\n\n    //scale\n    const scale_x = scaleTime()\n      .domain([\n        moment(dateRange[0]).subtract(1, \"days\"),\n        moment(dateRange[1]).add(1, \"days\"),\n      ])\n      .range([0, ganttChart_w]);\n    const scale_y = scaleBand()\n      .domain(hostList)\n      .range([0, ganttChart_h])\n      .paddingInner(0.1)\n      .paddingOuter(0.1);\n\n    //axis\n    const axis_x = axisBottom()\n      .scale(scale_x)\n      .tickSize([5])\n      .tickFormat(timeFormat(\"%b-%d\"));\n    const axis_y = axisLeft()\n      .scale(scale_y)\n      .tickSize([5]);\n\n    //make group root of svg for transformation purpose\n    let svgGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"ganttChart-svgGroup\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + 5 + \")\");\n\n    //axis group\n    svgGroup\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + 0 + \",\" + ganttChart_h + \")\")\n      .call(axis_x);\n    svgGroup.append(\"g\").call(axis_y);\n\n    //make background lane\n    let backgroundLaneGroup = svgGroup\n      .append(\"g\")\n      .attr(\"id\", \"gantt-backgroundLane-group\");\n    backgroundLaneGroup\n      .selectAll(\".gantt-backgroundLane\")\n      .data(hostList)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"gantt-backgroundLane\")\n      .attr(\"stroke\", \"gray\")\n      .attr(\"stroke-width\", \"0.5px\")\n      .attr(\"fill\", \"none\")\n      .attr(\"x\", () => scale_x(dateRange[0]))\n      .attr(\"y\", (d) => parseInt(scale_y(d)))\n      .attr(\"width\", () => scale_x(dateRange[1]) - scale_x(dateRange[0]))\n      .attr(\"height\", rectHeight)\n      .style(\"opacity\", 0.3);\n\n    //make bar chart group and draw chart on it\n    svgGroup\n      .append(\"g\")\n      .attr(\"id\", \"barchartGroup\")\n      .selectAll(\".gantt-chart-rectangle\")\n      .data(props.data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"gantt-chart-rectangle\")\n      .attr(\"height\", (d) => {\n        if (d.is_admDisc) {\n          return rectHeight / 4;\n        }\n        return rectHeight;\n      })\n      .attr(\"stroke\", \"none\")\n      .attr(\"fill\", (d) => {\n        let col = props.colorScale.byLocation.get(d.location_name);\n        if (col) {\n          return col;\n        } else {\n          if (d.location_color) {\n            return d.location_color;\n          } else {\n            return \"gray\";\n          }\n        }\n      })\n      .attr(\"x\", (d) => {\n        return scale_x(d.start_date);\n      })\n      .attr(\"y\", (d) => {\n        if (d.is_admDisc) {\n          return (\n            parseInt(scale_y(d.source_name)) +\n            rectHeight / 4 +\n            rectHeight / 4 / 2\n          );\n        } else {\n          return parseInt(scale_y(d.source_name));\n        }\n      })\n      .attr(\"width\", (d) => {\n        let diffRange = moment.range(d.start_date, d.end_date).diff(\"days\");\n        if (diffRange === 0) {\n          return (\n            scale_x(d.end_date.endOf(\"day\")) -\n            scale_x(d.start_date.startOf(\"day\"))\n          );\n        } else {\n          return scale_x(d.end_date) - scale_x(d.start_date);\n        }\n      })\n      .on(\"click\", (d) => {\n        setselectedLocation(d.location_name);\n      })\n      .append(\"title\")\n      .text((d) => {\n        let dateStart = moment(d.start_date).format(\"D-MMM-YYYY\");\n        let dateEnd = moment(d.end_date).format(\"D-MMM-YYYY\");\n        return d.location_name + \": \" + dateStart + \" to \" + dateEnd;\n      });\n\n    //make path group\n    let pathGroup = svgGroup.append(\"g\").attr(\"id\", \"gantt-path-group\");\n    pathGroup\n      .selectAll(\".gantt-overlapping-path\")\n      .data(overlapData)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"gantt-overlapping-path\")\n      .attr(\"d\", (d) => {\n        let qPoint = computeQuadraticCurve(\n          scale_x(d.source.start_date),\n          parseInt(scale_y(d.source.source_name) + rectHeight / 2),\n          scale_x(d.target.start_date),\n          parseInt(scale_y(d.target.source_name) + rectHeight / 2),\n          10\n        );\n        return curve([\n          [\n            scale_x(d.source.start_date),\n            parseInt(scale_y(d.source.source_name) + rectHeight / 2),\n          ],\n          qPoint,\n          [\n            scale_x(d.target.start_date),\n            parseInt(scale_y(d.target.source_name) + rectHeight / 2),\n          ],\n        ]);\n      })\n      .attr(\"fill\", \"none\")\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"stroke-width\", (d) =>\n        isLineScaled ? lineScaleFactor * d.overlapDay : 1\n      )\n      .attr(\"stroke\", \"black\")\n      .style(\"display\", (d) => {\n        if (isLineShown) {\n          if (selectedLocation) {\n            if (d.source.location_name === selectedLocation) {\n              return \"block\";\n            } else {\n              return \"none\";\n            }\n          } else {\n            return \"block\";\n          }\n        } else {\n          return \"none\";\n        }\n      })\n      .append(\"title\")\n      .text((d) => {\n        return (\n          d.source.source_name +\n          \"-\" +\n          d.target.source_name +\n          \" at \" +\n          d.source.location_name +\n          \": \" +\n          d.overlapDay +\n          \" days\"\n        );\n      });\n    //make isolate collection marker\n    let colDateMarker = svgGroup.append(\"g\").attr(\"id\", \"gantt-colDate-group\");\n    colDateMarker\n      .selectAll(\".gantt-colDate-marker\")\n      .data(isolateData_loc)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"gantt-colDate-marker\")\n      .attr(\"fill\", (d) => getColorScaleByObject(d, props.colorScale))\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", \"2px\")\n      .attr(\"r\", nodeSize)\n      .attr(\"cx\", (d) => scale_x(d.isolate_colDate))\n      .attr(\n        \"cy\",\n        (d) => parseInt(scale_y(d.isolate_sourceName)) + rectHeight / 2\n      )\n      .on(\"click\", (d) => props.setSelectedData([d.uid]))\n      .style(\"cursor\", \"pointer\")\n      .append(\"title\")\n      .text((d) => `isolate ${d.isolate_name} from ${d.isolate_sourceName}`);\n\n    svg.selectAll(\"#ganttChart-svgGroup g\").attr(\"font-family\", \"Verdana\");\n    //zoom functionality\n\n    if (props.selectedData && props.selectedData.length > 0) {\n      updateBySelectedData();\n    }\n    //zoom functionality\n    const zoomHandler = zoom()\n      .scaleExtent([0.1, 6])\n      .on(\"zoom\", () => {\n        zoomStateRef.current = currentEvent.transform;\n        select(\"#ganttChart-svgGroup\").attr(\n          \"transform\",\n          currentEvent.transform\n        );\n      })\n      .filter(function() {\n        return !currentEvent.button && currentEvent.type !== \"wheel\";\n      });\n\n    //Zoom in button\n    container.select(\"#movement-zoomIn\").on(\"click\", () => {\n      zoomHandler.scaleBy(svg.transition().duration(500), 1.5);\n    });\n    //Zoom out button\n    container.select(\"#movement-zoomOut\").on(\"click\", () => {\n      zoomHandler.scaleBy(svg.transition().duration(500), 0.5);\n    });\n\n    svg.call(zoomHandler);\n  }\n  function minimizeSVG() {\n    const svg = select(ganttChartSVGRef.current);\n    svg.attr(\"width\", 0).attr(\"height\", 0);\n  }\n  function updateBySelectedData() {\n    svg\n      .selectAll(\".gantt-colDate-marker\")\n      .attr(\"r\", (d) => {\n        if (props.selectedData.indexOf(d.uid) !== -1) {\n          return nodeSize * 1.5;\n        } else {\n          return nodeSize;\n        }\n      })\n      .style(\"opacity\", (d) => {\n        if (props.selectedData.indexOf(d.uid) !== -1) {\n          return 0.9;\n        } else {\n          return 0.2;\n        }\n      });\n  }\n  function clearSelectedData() {\n    svg\n      .selectAll(\".gantt-colDate-marker\")\n      .attr(\"r\", () => nodeSize)\n      .style(\"opacity\", () => 0.9);\n  }\n\n  //HELPER FUNCTIONS\n\n  //console.log(selectedLocation);\n  return (\n    <React.Fragment>\n      <div id=\"ganttChartContainer\" ref={ganttChartContainerRef}>\n        <div id=\"movement-no-drawing\">\n          <Empty\n            description={\"No chart: please click redraw button\"}\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </div>\n        <div id=\"movement-buttons-container\">\n          <div id=\"movement-zoom-buttons\">\n            <Button\n              title={\"Zoom in\"}\n              shape={\"circle\"}\n              id={\"movement-zoomIn\"}\n              size={\"medium\"}\n              icon={<ZoomInOutlined />}\n            ></Button>\n            <Button\n              title={\"Zoom out\"}\n              shape={\"circle\"}\n              id={\"movement-zoomOut\"}\n              size={\"medium\"}\n              icon={<ZoomOutOutlined />}\n            ></Button>\n          </div>\n        </div>\n        <svg\n          id=\"ganttChart-svg\"\n          className=\"ganttChart-svg_class\"\n          ref={ganttChartSVGRef}\n        ></svg>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default PatientMovement;\n\n/*\n */\n"]},"metadata":{},"sourceType":"module"}