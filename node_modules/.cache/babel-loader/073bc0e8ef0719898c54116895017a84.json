{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_Movement/comp_Movement_Settings.js\";\n\n/* ============================================================================\n============================================================================ */\nimport React from \"react\";\nimport { Button, Drawer, Checkbox, Row, Col, InputNumber, Input } from \"antd\";\nimport { downloadSVG } from \"../utils/utils\";\n\nvar MovementSettings = function MovementSettings(props) {\n  //SETTINGS/STATE\n  //HANDLERS\n  var downloadSVGHandler = function downloadSVGHandler() {\n    downloadSVG(\"ganttChart-svg\");\n  }; //-LAYOUT\n\n\n  var showOverlappingLineHandler = function showOverlappingLineHandler(e) {\n    var isChecked = e.target.checked;\n    props.changeIsOverlappingLineShown(isChecked);\n  };\n\n  var scaleOverlappingLineHandler = function scaleOverlappingLineHandler(e) {\n    var isChecked = e.target.checked;\n    props.changeIsOverlappingLineScaled(isChecked);\n  };\n\n  var changeLineScaleFactorHandler = function changeLineScaleFactorHandler(val) {\n    props.changeOverlappingLineScaleFactor(val);\n  };\n\n  var changeSortedBySuffix = function changeSortedBySuffix(e) {\n    var isChecked = e.target.checked;\n    props.changeIsSortedBySuffix(isChecked);\n  };\n\n  var changeSuffixSeparator = function changeSuffixSeparator(e) {\n    var val = e.target.value;\n    props.changeSuffixSeparator(val);\n  };\n\n  var resortHandler = function resortHandler() {\n    var separator = props.movementSettings.suffixSeparator;\n    var resortCode = \"resort\";\n\n    if (separator.length > 0) {\n      props.changeIsResort(resortCode.concat(separator));\n    } else {\n      alert(\"Invalid suffix after splitting source_name. Please change the separator.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Movement settings\",\n    placement: \"right\",\n    closable: true,\n    onClose: props.closeDrawerHandler,\n    visible: props.isDrawerVisible,\n    getContainer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: showOverlappingLineHandler,\n    checked: props.movementSettings.isOverlappingLineShown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Show overlapping lines\")), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: scaleOverlappingLineHandler,\n    checked: props.movementSettings.isOverlappingLineScaled,\n    disabled: !props.movementSettings.isOverlappingLineShown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Scale the lines\")), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: changeSortedBySuffix,\n    checked: props.movementSettings.isSortedBySuffix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Sort Y-axis by suffix\")), /*#__PURE__*/React.createElement(Col, {\n    span: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Separator\")), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    maxLength: 2,\n    value: props.movementSettings.suffixSeparator,\n    onChange: changeSuffixSeparator,\n    disabled: !props.movementSettings.isSortedBySuffix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: resortHandler,\n    disabled: !props.movementSettings.isSortedBySuffix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Sort\")), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Scale factor\")), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    min: 0.1,\n    max: 5,\n    step: 0.01,\n    value: props.movementSettings.overlappingLineScaleFactor,\n    onChange: changeLineScaleFactorHandler,\n    disabled: !props.movementSettings.isOverlappingLineScaled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: downloadSVGHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Download SVG\")))));\n};\n\nexport default MovementSettings;\n/*\n<Col span={24}>\n            <p>Layout</p>\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder={layoutKeyText}\n              onChange={movementChartLayoutHandler}\n              value={layoutKey}\n            >\n              <Option value=\"gantt\">Gantt</Option>\n            </Select>\n          </Col>\n\nconst nodeSizeHandler = val => {\n  props.changeMovementNodeSize(val);\n};\nconst textSizeHandler = val => {\n  props.changeMovementTextSize(val);\n};\nconst textOffsetHandler = val => {\n  props.changeMovementTextOffset(val);\n};\n<Col span={24}>\n  <p>Node size </p>\n  <Slider\n    id={\"movement-change-nodeSize\"}\n    min={0}\n    max={15}\n    step={1}\n    onChange={nodeSizeHandler}\n    defaultValue={props.movementSettings.nodeSize}\n  ></Slider>\n</Col>\n<Col span={24}>\n  <p>Text size </p>\n  <Slider\n    id={\"movement-change-textSize\"}\n    min={0}\n    max={15}\n    step={1}\n    onChange={textSizeHandler}\n    defaultValue={props.movementSettings.textSize}\n  ></Slider>\n</Col>\n<Col span={24}>\n  <p>Text offset </p>\n  <Slider\n    id={\"movement-change-textOffset\"}\n    min={-25}\n    max={25}\n    step={5}\n    onChange={textOffsetHandler}\n    defaultValue={props.movementSettings.textOffset}\n  ></Slider>\n</Col>\n*/","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_Movement/comp_Movement_Settings.js"],"names":["React","Button","Drawer","Checkbox","Row","Col","InputNumber","Input","downloadSVG","MovementSettings","props","downloadSVGHandler","showOverlappingLineHandler","e","isChecked","target","checked","changeIsOverlappingLineShown","scaleOverlappingLineHandler","changeIsOverlappingLineScaled","changeLineScaleFactorHandler","val","changeOverlappingLineScaleFactor","changeSortedBySuffix","changeIsSortedBySuffix","changeSuffixSeparator","value","resortHandler","separator","movementSettings","suffixSeparator","resortCode","length","changeIsResort","concat","alert","closeDrawerHandler","isDrawerVisible","isOverlappingLineShown","isOverlappingLineScaled","isSortedBySuffix","overlappingLineScaleFactor"],"mappings":"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","sourcesContent":["/* ============================================================================\n============================================================================ */\nimport React from \"react\";\nimport { Button, Drawer, Checkbox, Row, Col, InputNumber, Input } from \"antd\";\nimport { downloadSVG } from \"../utils/utils\";\n\nconst MovementSettings = (props) => {\n  //SETTINGS/STATE\n\n  //HANDLERS\n\n  const downloadSVGHandler = () => {\n    downloadSVG(\"ganttChart-svg\");\n  };\n  //-LAYOUT\n  const showOverlappingLineHandler = (e) => {\n    let isChecked = e.target.checked;\n    props.changeIsOverlappingLineShown(isChecked);\n  };\n  const scaleOverlappingLineHandler = (e) => {\n    let isChecked = e.target.checked;\n    props.changeIsOverlappingLineScaled(isChecked);\n  };\n  const changeLineScaleFactorHandler = (val) => {\n    props.changeOverlappingLineScaleFactor(val);\n  };\n  const changeSortedBySuffix = (e) => {\n    let isChecked = e.target.checked;\n    props.changeIsSortedBySuffix(isChecked);\n  };\n  const changeSuffixSeparator = (e) => {\n    let val = e.target.value;\n    props.changeSuffixSeparator(val);\n  };\n  const resortHandler = () => {\n    let separator = props.movementSettings.suffixSeparator;\n    let resortCode = \"resort\";\n    if (separator.length > 0) {\n      props.changeIsResort(resortCode.concat(separator));\n    } else {\n      alert(\n        \"Invalid suffix after splitting source_name. Please change the separator.\"\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Drawer\n        title=\"Movement settings\"\n        placement=\"right\"\n        closable={true}\n        onClose={props.closeDrawerHandler}\n        visible={props.isDrawerVisible}\n        getContainer={true}\n      >\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Checkbox\n              onChange={showOverlappingLineHandler}\n              checked={props.movementSettings.isOverlappingLineShown}\n            >\n              Show overlapping lines\n            </Checkbox>\n          </Col>\n          <Col span={24}>\n            <Checkbox\n              onChange={scaleOverlappingLineHandler}\n              checked={props.movementSettings.isOverlappingLineScaled}\n              disabled={!props.movementSettings.isOverlappingLineShown}\n            >\n              Scale the lines\n            </Checkbox>\n          </Col>\n          <Col span={24}>\n            <Checkbox\n              onChange={changeSortedBySuffix}\n              checked={props.movementSettings.isSortedBySuffix}\n            >\n              Sort Y-axis by suffix\n            </Checkbox>\n          </Col>\n          <Col span={10}>\n            <p>Separator</p>\n          </Col>\n          <Col span={6}>\n            <Input\n              maxLength={2}\n              value={props.movementSettings.suffixSeparator}\n              onChange={changeSuffixSeparator}\n              disabled={!props.movementSettings.isSortedBySuffix}\n            />\n          </Col>\n          <Col span={8}>\n            <Button\n              onClick={resortHandler}\n              disabled={!props.movementSettings.isSortedBySuffix}\n            >\n              Sort\n            </Button>\n          </Col>\n          <Col span={12}>\n            <p>Scale factor</p>\n          </Col>\n          <Col span={12}>\n            <InputNumber\n              min={0.1}\n              max={5}\n              step={0.01}\n              value={props.movementSettings.overlappingLineScaleFactor}\n              onChange={changeLineScaleFactorHandler}\n              disabled={!props.movementSettings.isOverlappingLineScaled}\n            />\n          </Col>\n\n          <Col span={24}>\n            <Button onClick={downloadSVGHandler}>Download SVG</Button>\n          </Col>\n        </Row>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default MovementSettings;\n/*\n<Col span={24}>\n            <p>Layout</p>\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder={layoutKeyText}\n              onChange={movementChartLayoutHandler}\n              value={layoutKey}\n            >\n              <Option value=\"gantt\">Gantt</Option>\n            </Select>\n          </Col>\n\nconst nodeSizeHandler = val => {\n  props.changeMovementNodeSize(val);\n};\nconst textSizeHandler = val => {\n  props.changeMovementTextSize(val);\n};\nconst textOffsetHandler = val => {\n  props.changeMovementTextOffset(val);\n};\n<Col span={24}>\n  <p>Node size </p>\n  <Slider\n    id={\"movement-change-nodeSize\"}\n    min={0}\n    max={15}\n    step={1}\n    onChange={nodeSizeHandler}\n    defaultValue={props.movementSettings.nodeSize}\n  ></Slider>\n</Col>\n<Col span={24}>\n  <p>Text size </p>\n  <Slider\n    id={\"movement-change-textSize\"}\n    min={0}\n    max={15}\n    step={1}\n    onChange={textSizeHandler}\n    defaultValue={props.movementSettings.textSize}\n  ></Slider>\n</Col>\n<Col span={24}>\n  <p>Text offset </p>\n  <Slider\n    id={\"movement-change-textOffset\"}\n    min={-25}\n    max={25}\n    step={5}\n    onChange={textOffsetHandler}\n    defaultValue={props.movementSettings.textOffset}\n  ></Slider>\n</Col>\n*/\n"]},"metadata":{},"sourceType":"module"}