{"ast":null,"code":"import * as constant from \"../utils/constants\";\nimport { initialState } from \"../reducers\";\n\nvar transgraphSettingsReducer = function transgraphSettingsReducer(prevState, action) {\n  switch (action.type) {\n    case constant.IS_DOWNLOADING_TRANS:\n      var newState_transgraphIsDownloading = Object.assign({}, prevState);\n\n      if (action.payload !== prevState.transgraphIsDownloading) {\n        newState_transgraphIsDownloading.transgraphIsDownloading = action.payload;\n      }\n\n      return newState_transgraphIsDownloading;\n    // if no change return same state with before\n    // case constant.NODE_SIZE_TRANS:\n    //   let newState_nodeSize = Object.assign({}, prevState);\n    //   if (action.payload && action.payload !== prevState.nodeSize) {\n    //     newState_nodeSize.nodeSize = action.payload;\n    //   }\n    //   return newState_nodeSize; // if no change return same state with before\n    // case constant.TEXT_SIZE_TRANS:\n    //   let newState_textSize = Object.assign({}, prevState);\n    //   if (action.payload && action.payload !== prevState.textSize) {\n    //     newState_textSize.textSize = action.payload;\n    //   }\n    //   return newState_textSize;\n    // case constant.LINK_LABEL_SIZE_TRANS:\n    //   let newState_linkLabelSize = Object.assign({}, prevState);\n    //   if (action.payload !== prevState.linkLabelSize) {\n    //     newState_linkLabelSize.linkLabelSize = action.payload;\n    //   }\n    //   return newState_linkLabelSize;\n\n    case constant.KEY_TRANS:\n      var newState_layoutKey = Object.assign({}, prevState);\n\n      if (action.payload !== prevState.layoutKey) {\n        newState_layoutKey.layoutKey = action.payload;\n      }\n\n      return newState_layoutKey;\n\n    case constant.RESIZE_SIGNAL_TRANS:\n      var newState_resizeSignal = Object.assign({}, prevState);\n\n      if (action.payload !== prevState.isUserStartResize) {\n        newState_resizeSignal.isUserStartResize = action.payload;\n      }\n\n      return newState_resizeSignal;\n\n    case constant.IS_LINK_LABEL_SHOWN_TRANS:\n      var newState_isLinkLabelShown = Object.assign({}, prevState);\n\n      if (action.payload !== prevState.isLinkLabelShown) {\n        newState_isLinkLabelShown.isLinkLabelShown = action.payload;\n      }\n\n      return newState_isLinkLabelShown;\n\n    case constant.IS_LINK_FILTER_ON_TRANS:\n      var newState_isUserStyleApplied = Object.assign({}, prevState);\n\n      if (action.payload !== prevState.isUserStyleApplied) {\n        newState_isUserStyleApplied.isUserStyleApplied = action.payload;\n      }\n\n      return newState_isUserStyleApplied;\n\n    case constant.IS_LINK_WEIGHT_APPLIED_TRANS:\n      var newState_isLinkWeightApplied = Object.assign({}, prevState);\n\n      if (action.payload !== prevState.isLinkWeightApplied) {\n        newState_isLinkWeightApplied.isLinkWeightApplied = action.payload;\n      }\n\n      return newState_isLinkWeightApplied;\n\n    case constant.LINK_FACTOR_TRANS:\n      var newState_linkFactor = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.linkFactor) {\n        newState_linkFactor.linkFactor = action.payload;\n      }\n\n      return newState_linkFactor;\n\n    default:\n      if (prevState) {\n        return prevState;\n      } else {\n        return initialState.transgraphSettings;\n      }\n\n  }\n};\n\nexport default transgraphSettingsReducer;","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/reducers/reducer-transgraphSettings.js"],"names":["constant","initialState","transgraphSettingsReducer","prevState","action","type","IS_DOWNLOADING_TRANS","newState_transgraphIsDownloading","Object","assign","payload","transgraphIsDownloading","KEY_TRANS","newState_layoutKey","layoutKey","RESIZE_SIGNAL_TRANS","newState_resizeSignal","isUserStartResize","IS_LINK_LABEL_SHOWN_TRANS","newState_isLinkLabelShown","isLinkLabelShown","IS_LINK_FILTER_ON_TRANS","newState_isUserStyleApplied","isUserStyleApplied","IS_LINK_WEIGHT_APPLIED_TRANS","newState_isLinkWeightApplied","isLinkWeightApplied","LINK_FACTOR_TRANS","newState_linkFactor","linkFactor","transgraphSettings"],"mappings":"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","sourcesContent":["import * as constant from \"../utils/constants\";\nimport { initialState } from \"../reducers\";\n\nconst transgraphSettingsReducer = (prevState, action) => {\n  switch (action.type) {\n    case constant.IS_DOWNLOADING_TRANS:\n      let newState_transgraphIsDownloading = Object.assign({}, prevState);\n      if (action.payload !== prevState.transgraphIsDownloading) {\n        newState_transgraphIsDownloading.transgraphIsDownloading =\n          action.payload;\n      }\n      return newState_transgraphIsDownloading; // if no change return same state with before\n\n    // case constant.NODE_SIZE_TRANS:\n    //   let newState_nodeSize = Object.assign({}, prevState);\n    //   if (action.payload && action.payload !== prevState.nodeSize) {\n    //     newState_nodeSize.nodeSize = action.payload;\n    //   }\n    //   return newState_nodeSize; // if no change return same state with before\n\n    // case constant.TEXT_SIZE_TRANS:\n    //   let newState_textSize = Object.assign({}, prevState);\n    //   if (action.payload && action.payload !== prevState.textSize) {\n    //     newState_textSize.textSize = action.payload;\n    //   }\n    //   return newState_textSize;\n\n    // case constant.LINK_LABEL_SIZE_TRANS:\n    //   let newState_linkLabelSize = Object.assign({}, prevState);\n    //   if (action.payload !== prevState.linkLabelSize) {\n    //     newState_linkLabelSize.linkLabelSize = action.payload;\n    //   }\n    //   return newState_linkLabelSize;\n\n    case constant.KEY_TRANS:\n      let newState_layoutKey = Object.assign({}, prevState);\n      if (action.payload !== prevState.layoutKey) {\n        newState_layoutKey.layoutKey = action.payload;\n      }\n      return newState_layoutKey;\n\n    case constant.RESIZE_SIGNAL_TRANS:\n      let newState_resizeSignal = Object.assign({}, prevState);\n      if (action.payload !== prevState.isUserStartResize) {\n        newState_resizeSignal.isUserStartResize = action.payload;\n      }\n      return newState_resizeSignal;\n\n    case constant.IS_LINK_LABEL_SHOWN_TRANS:\n      let newState_isLinkLabelShown = Object.assign({}, prevState);\n      if (action.payload !== prevState.isLinkLabelShown) {\n        newState_isLinkLabelShown.isLinkLabelShown = action.payload;\n      }\n      return newState_isLinkLabelShown;\n\n    case constant.IS_LINK_FILTER_ON_TRANS:\n      let newState_isUserStyleApplied = Object.assign({}, prevState);\n      if (action.payload !== prevState.isUserStyleApplied) {\n        newState_isUserStyleApplied.isUserStyleApplied = action.payload;\n      }\n      return newState_isUserStyleApplied;\n\n    case constant.IS_LINK_WEIGHT_APPLIED_TRANS:\n      let newState_isLinkWeightApplied = Object.assign({}, prevState);\n      if (action.payload !== prevState.isLinkWeightApplied) {\n        newState_isLinkWeightApplied.isLinkWeightApplied = action.payload;\n      }\n      return newState_isLinkWeightApplied;\n\n    case constant.LINK_FACTOR_TRANS:\n      let newState_linkFactor = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.linkFactor) {\n        newState_linkFactor.linkFactor = action.payload;\n      }\n      return newState_linkFactor;\n\n    default:\n      if (prevState) {\n        return prevState;\n      } else {\n        return initialState.transgraphSettings;\n      }\n  }\n};\n\nexport default transgraphSettingsReducer;\n"]},"metadata":{},"sourceType":"module"}