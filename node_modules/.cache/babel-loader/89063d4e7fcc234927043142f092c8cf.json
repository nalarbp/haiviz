{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_ColorScale/comp_ColorScale.js\";\n\n/* ============================================================================\n\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport ColorScaleChart from \"./chart_ColorScale\";\nimport ColorScaleSettings from \"./comp_ColorScale_Settings\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport \"./style_ColorScale.css\";\nimport * as constant from \"../utils/constants\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport { deactivateChart, changeColorResizeSignal, changeIsColorScaleDownloading, setColorScaleType, setColorBySpecies, setColorByLocation, setColorBySourceType, setColorByProfile1, setColorByProfile2, setColorByProfile3 } from \"../action/index\";\nimport { DragOutlined, CloseOutlined, RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nvar dimensions = [\"width\", \"height\"];\n\nvar _ = require(\"lodash\");\n\nvar ColorScale = function ColorScale(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUserRedraw = _useState2[0],\n      setisUserRedraw = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDrawerVisible = _useState4[0],\n      setisDrawerVisible = _useState4[1];\n\n  var init_colorScaleType = props.colorScale.colorType ? props.colorScale.colorType : \"location\";\n\n  var _useState5 = useState(init_colorScaleType),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedCategory = _useState6[0],\n      setselectedCategory = _useState6[1]; //Functions\n\n\n  useEffect(function () {\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]);\n  useEffect(function () {\n    if (selectedCategory) {\n      props.setColorScaleType(selectedCategory);\n    }\n  }, [selectedCategory]); //HANDLERS\n\n  var closeCardHandler = function closeCardHandler() {\n    props.deactivateChart(props.id);\n    props.changeColorResizeSignal(false);\n  };\n\n  var userRedrawHandler = function userRedrawHandler() {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeColorResizeSignal(false);\n    }\n  };\n\n  var openDrawerHandler = function openDrawerHandler() {\n    setisDrawerVisible(true);\n  };\n\n  var closeDrawerHandler = function closeDrawerHandler() {\n    setisDrawerVisible(false);\n  };\n\n  var grayColorScaleStateHandler = function grayColorScaleStateHandler() {\n    grayColorScaleState(props.colorScale);\n  };\n\n  var resetColorScaleStateHandler = function resetColorScaleStateHandler() {\n    resetColorScaleState(props.colorScale);\n  }; //FUNCTIONS\n\n\n  function grayColorScaleState(scaleColor) {\n    switch (scaleColor.colorType) {\n      case \"species\":\n        var species_col = _.cloneDeep(scaleColor.bySpecies);\n\n        species_col.forEach(function (value, key, d) {\n          d.set(key, \"#808080\");\n        });\n        props.setColorBySpecies(species_col);\n        break;\n\n      case \"location\":\n        var location_col = _.cloneDeep(scaleColor.byLocation);\n\n        location_col.forEach(function (value, key, d) {\n          d.set(key, \"#808080\");\n        });\n        props.setColorByLocation(location_col);\n        break;\n\n      case \"sourceType\":\n        var sourceType_col = _.cloneDeep(scaleColor.bySourceType);\n\n        sourceType_col.forEach(function (value, key, d) {\n          d.set(key, \"#808080\");\n        });\n        props.setColorBySourceType(sourceType_col);\n        break;\n\n      case \"profile1\":\n        var profile1_col = _.cloneDeep(scaleColor.byProfile1);\n\n        profile1_col.forEach(function (value, key, d) {\n          d.set(key, \"#808080\");\n        });\n        props.setColorByProfile1(profile1_col);\n        break;\n\n      case \"profile2\":\n        var profile2_col = _.cloneDeep(scaleColor.byProfile2);\n\n        profile2_col.forEach(function (value, key, d) {\n          d.set(key, \"#808080\");\n        });\n        props.setColorByProfile2(profile2_col);\n        break;\n\n      case \"profile3\":\n        var profile3_col = _.cloneDeep(scaleColor.byProfile3);\n\n        profile3_col.forEach(function (value, key, d) {\n          d.set(key, \"#808080\");\n        });\n        props.setColorByProfile3(profile3_col);\n        break;\n\n      default:\n    }\n  }\n\n  function resetColorScaleState(scaleColor) {\n    switch (scaleColor.colorType) {\n      case \"species\":\n        var species_col = _.cloneDeep(scaleColor.bySpecies_ori);\n\n        props.setColorBySpecies(species_col);\n        break;\n\n      case \"location\":\n        var location_col = _.cloneDeep(scaleColor.byLocation_ori);\n\n        props.setColorByLocation(location_col);\n        break;\n\n      case \"sourceType\":\n        var sourceType_col = _.cloneDeep(scaleColor.bySourceType_ori);\n\n        props.setColorBySourceType(sourceType_col);\n        break;\n\n      case \"profile1\":\n        var profile1_col = _.cloneDeep(scaleColor.byProfile1_ori);\n\n        props.setColorByProfile1(profile1_col);\n        break;\n\n      case \"profile2\":\n        var profile2_col = _.cloneDeep(scaleColor.byProfile2_ori);\n\n        props.setColorByProfile2(profile2_col);\n        break;\n\n      case \"profile3\":\n        var profile3_col = _.cloneDeep(scaleColor.byProfile3_ori);\n\n        props.setColorByProfile3(profile3_col);\n        break;\n\n      default:\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Color key\",\n    bordered: true,\n    headStyle: {\n      height: \"50px\",\n      padding: \"0 20px\"\n    },\n    style: {\n      height: \"100%\"\n    },\n    bodyStyle: {\n      margin: \"0px\",\n      padding: \"5px\"\n    },\n    extra: /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: constant.dragButtonTitle,\n      className: \"panelHeader\",\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(DragOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: constant.redrawButtonTitle,\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(RetweetOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }),\n      onClick: userRedrawHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: constant.settingsButtonTitle,\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(SettingOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }),\n      onClick: openDrawerHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: constant.closeButtonTitle,\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(CloseOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }),\n      onClick: closeCardHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"colorscale-drawer-settings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ColorScaleSettings, {\n    isDrawerVisible: isDrawerVisible,\n    closeDrawerHandler: closeDrawerHandler,\n    selectedCategory: selectedCategory,\n    setselectedCategory: setselectedCategory,\n    grayColorScaleStateHandler: grayColorScaleStateHandler,\n    resetColorScaleStateHandler: resetColorScaleStateHandler,\n    changeIsColorScaleDownloading: props.changeIsColorScaleDownloading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  })), props.isolateData && /*#__PURE__*/React.createElement(ColorScaleChart, {\n    width: props.width,\n    height: props.height,\n    isolateData: props.isolateData,\n    isUserRedraw: isUserRedraw,\n    colorScale: props.colorScale,\n    colorscaleSettings: props.colorscaleSettings,\n    setColorScaleType: props.setColorScaleType,\n    setColorBySpecies: props.setColorBySpecies,\n    setColorByLocation: props.setColorByLocation,\n    setColorBySourceType: props.setColorBySourceType,\n    setColorByProfile1: props.setColorByProfile1,\n    setColorByProfile2: props.setColorByProfile2,\n    setColorByProfile3: props.setColorByProfile3,\n    changeIsColorScaleDownloading: props.changeIsColorScaleDownloading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isolateData: state.isolateData,\n    colorscaleSettings: state.colorscaleSettings,\n    colorScale: state.colorScale\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    deactivateChart: deactivateChart,\n    changeColorResizeSignal: changeColorResizeSignal,\n    changeIsColorScaleDownloading: changeIsColorScaleDownloading,\n    setColorScaleType: setColorScaleType,\n    setColorBySpecies: setColorBySpecies,\n    setColorByLocation: setColorByLocation,\n    setColorBySourceType: setColorBySourceType,\n    setColorByProfile1: setColorByProfile1,\n    setColorByProfile2: setColorByProfile2,\n    setColorByProfile3: setColorByProfile3\n  }, dispatch);\n}\n\nvar MeasuredColorScale = withMeasure(dimensions)(ColorScale);\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasuredColorScale);\n/*\n<Button\n  size={\"small\"}\n  style={{ margin: \"0 5px\", border: \"none\" }}\n  icon={<SettingOutlined />}\n  onClick={openDrawerHandler}\n></Button>\n<Button\n  size={\"small\"}\n  style={{ margin: \"0 5px\", border: \"none\" }}\n  icon={<DownloadOutlined />}\n></Button>\n*/","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_ColorScale/comp_ColorScale.js"],"names":["React","useState","useEffect","ColorScaleChart","ColorScaleSettings","connect","bindActionCreators","withMeasure","constant","Row","Col","Card","Button","deactivateChart","changeColorResizeSignal","changeIsColorScaleDownloading","setColorScaleType","setColorBySpecies","setColorByLocation","setColorBySourceType","setColorByProfile1","setColorByProfile2","setColorByProfile3","DragOutlined","CloseOutlined","RetweetOutlined","SettingOutlined","dimensions","_","require","ColorScale","props","isUserRedraw","setisUserRedraw","isDrawerVisible","setisDrawerVisible","init_colorScaleType","colorScale","colorType","selectedCategory","setselectedCategory","closeCardHandler","id","userRedrawHandler","openDrawerHandler","closeDrawerHandler","grayColorScaleStateHandler","grayColorScaleState","resetColorScaleStateHandler","resetColorScaleState","scaleColor","species_col","cloneDeep","bySpecies","forEach","value","key","d","set","location_col","byLocation","sourceType_col","bySourceType","profile1_col","byProfile1","profile2_col","byProfile2","profile3_col","byProfile3","bySpecies_ori","byLocation_ori","bySourceType_ori","byProfile1_ori","byProfile2_ori","byProfile3_ori","height","padding","margin","dragButtonTitle","border","redrawButtonTitle","settingsButtonTitle","closeButtonTitle","isolateData","width","colorscaleSettings","mapStateToProps","state","mapDispatchToProps","dispatch","MeasuredColorScale"],"mappings":"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","sourcesContent":["/* ============================================================================\n\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport ColorScaleChart from \"./chart_ColorScale\";\nimport ColorScaleSettings from \"./comp_ColorScale_Settings\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport \"./style_ColorScale.css\";\nimport * as constant from \"../utils/constants\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport {\n  deactivateChart,\n  changeColorResizeSignal,\n  changeIsColorScaleDownloading,\n  setColorScaleType,\n  setColorBySpecies,\n  setColorByLocation,\n  setColorBySourceType,\n  setColorByProfile1,\n  setColorByProfile2,\n  setColorByProfile3,\n} from \"../action/index\";\nimport {\n  DragOutlined,\n  CloseOutlined,\n  RetweetOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\nconst dimensions = [\"width\", \"height\"];\nconst _ = require(\"lodash\");\n\nconst ColorScale = (props) => {\n  const [isUserRedraw, setisUserRedraw] = useState(false);\n  const [isDrawerVisible, setisDrawerVisible] = useState(false);\n  const init_colorScaleType = props.colorScale.colorType\n    ? props.colorScale.colorType\n    : \"location\";\n  const [selectedCategory, setselectedCategory] = useState(init_colorScaleType);\n\n  //Functions\n  useEffect(() => {\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]);\n\n  useEffect(() => {\n    if (selectedCategory) {\n      props.setColorScaleType(selectedCategory);\n    }\n  }, [selectedCategory]);\n\n  //HANDLERS\n  const closeCardHandler = () => {\n    props.deactivateChart(props.id);\n    props.changeColorResizeSignal(false);\n  };\n  const userRedrawHandler = () => {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeColorResizeSignal(false);\n    }\n  };\n  const openDrawerHandler = () => {\n    setisDrawerVisible(true);\n  };\n  const closeDrawerHandler = () => {\n    setisDrawerVisible(false);\n  };\n\n  const grayColorScaleStateHandler = () => {\n    grayColorScaleState(props.colorScale);\n  };\n\n  const resetColorScaleStateHandler = () => {\n    resetColorScaleState(props.colorScale);\n  };\n\n  //FUNCTIONS\n  function grayColorScaleState(scaleColor) {\n    switch (scaleColor.colorType) {\n      case \"species\":\n        let species_col = _.cloneDeep(scaleColor.bySpecies);\n        species_col.forEach((value, key, d) => {\n          d.set(key, \"#808080\");\n        });\n        props.setColorBySpecies(species_col);\n        break;\n      case \"location\":\n        let location_col = _.cloneDeep(scaleColor.byLocation);\n        location_col.forEach((value, key, d) => {\n          d.set(key, \"#808080\");\n        });\n        props.setColorByLocation(location_col);\n        break;\n      case \"sourceType\":\n        let sourceType_col = _.cloneDeep(scaleColor.bySourceType);\n        sourceType_col.forEach((value, key, d) => {\n          d.set(key, \"#808080\");\n        });\n        props.setColorBySourceType(sourceType_col);\n        break;\n      case \"profile1\":\n        let profile1_col = _.cloneDeep(scaleColor.byProfile1);\n        profile1_col.forEach((value, key, d) => {\n          d.set(key, \"#808080\");\n        });\n        props.setColorByProfile1(profile1_col);\n        break;\n      case \"profile2\":\n        let profile2_col = _.cloneDeep(scaleColor.byProfile2);\n        profile2_col.forEach((value, key, d) => {\n          d.set(key, \"#808080\");\n        });\n        props.setColorByProfile2(profile2_col);\n        break;\n      case \"profile3\":\n        let profile3_col = _.cloneDeep(scaleColor.byProfile3);\n        profile3_col.forEach((value, key, d) => {\n          d.set(key, \"#808080\");\n        });\n        props.setColorByProfile3(profile3_col);\n        break;\n      default:\n    }\n  }\n  function resetColorScaleState(scaleColor) {\n    switch (scaleColor.colorType) {\n      case \"species\":\n        let species_col = _.cloneDeep(scaleColor.bySpecies_ori);\n        props.setColorBySpecies(species_col);\n        break;\n      case \"location\":\n        let location_col = _.cloneDeep(scaleColor.byLocation_ori);\n        props.setColorByLocation(location_col);\n        break;\n      case \"sourceType\":\n        let sourceType_col = _.cloneDeep(scaleColor.bySourceType_ori);\n        props.setColorBySourceType(sourceType_col);\n        break;\n      case \"profile1\":\n        let profile1_col = _.cloneDeep(scaleColor.byProfile1_ori);\n        props.setColorByProfile1(profile1_col);\n        break;\n      case \"profile2\":\n        let profile2_col = _.cloneDeep(scaleColor.byProfile2_ori);\n        props.setColorByProfile2(profile2_col);\n        break;\n      case \"profile3\":\n        let profile3_col = _.cloneDeep(scaleColor.byProfile3_ori);\n        props.setColorByProfile3(profile3_col);\n        break;\n      default:\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div style={{ height: \"100%\" }}>\n        <Card\n          title={\"Color key\"}\n          bordered={true}\n          headStyle={{ height: \"50px\", padding: \"0 20px\" }}\n          style={{ height: \"100%\" }}\n          bodyStyle={{ margin: \"0px\", padding: \"5px\" }}\n          extra={\n            <Row>\n              <Col span={6}>\n                <Button\n                  title={constant.dragButtonTitle}\n                  className=\"panelHeader\"\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<DragOutlined />}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  title={constant.redrawButtonTitle}\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<RetweetOutlined />}\n                  onClick={userRedrawHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  title={constant.settingsButtonTitle}\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<SettingOutlined />}\n                  onClick={openDrawerHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  title={constant.closeButtonTitle}\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<CloseOutlined />}\n                  onClick={closeCardHandler}\n                ></Button>\n              </Col>\n            </Row>\n          }\n        >\n          <React.Fragment>\n            <div id=\"colorscale-drawer-settings\">\n              <ColorScaleSettings\n                isDrawerVisible={isDrawerVisible}\n                closeDrawerHandler={closeDrawerHandler}\n                selectedCategory={selectedCategory}\n                setselectedCategory={setselectedCategory}\n                grayColorScaleStateHandler={grayColorScaleStateHandler}\n                resetColorScaleStateHandler={resetColorScaleStateHandler}\n                changeIsColorScaleDownloading={\n                  props.changeIsColorScaleDownloading\n                }\n              />\n            </div>\n            {props.isolateData && (\n              <ColorScaleChart\n                width={props.width}\n                height={props.height}\n                isolateData={props.isolateData}\n                isUserRedraw={isUserRedraw}\n                colorScale={props.colorScale}\n                colorscaleSettings={props.colorscaleSettings}\n                setColorScaleType={props.setColorScaleType}\n                setColorBySpecies={props.setColorBySpecies}\n                setColorByLocation={props.setColorByLocation}\n                setColorBySourceType={props.setColorBySourceType}\n                setColorByProfile1={props.setColorByProfile1}\n                setColorByProfile2={props.setColorByProfile2}\n                setColorByProfile3={props.setColorByProfile3}\n                changeIsColorScaleDownloading={\n                  props.changeIsColorScaleDownloading\n                }\n              />\n            )}\n          </React.Fragment>\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isolateData: state.isolateData,\n    colorscaleSettings: state.colorscaleSettings,\n    colorScale: state.colorScale,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      deactivateChart: deactivateChart,\n      changeColorResizeSignal: changeColorResizeSignal,\n      changeIsColorScaleDownloading: changeIsColorScaleDownloading,\n      setColorScaleType: setColorScaleType,\n      setColorBySpecies: setColorBySpecies,\n      setColorByLocation: setColorByLocation,\n      setColorBySourceType: setColorBySourceType,\n      setColorByProfile1: setColorByProfile1,\n      setColorByProfile2: setColorByProfile2,\n      setColorByProfile3: setColorByProfile3,\n    },\n    dispatch\n  );\n}\n\nconst MeasuredColorScale = withMeasure(dimensions)(ColorScale);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasuredColorScale);\n\n/*\n<Button\n  size={\"small\"}\n  style={{ margin: \"0 5px\", border: \"none\" }}\n  icon={<SettingOutlined />}\n  onClick={openDrawerHandler}\n></Button>\n<Button\n  size={\"small\"}\n  style={{ margin: \"0 5px\", border: \"none\" }}\n  icon={<DownloadOutlined />}\n></Button>\n*/\n"]},"metadata":{},"sourceType":"module"}