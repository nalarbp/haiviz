{"ast":null,"code":"var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === 'object') module.exports = factory(require(\"react-dom\"), require(\"react\"));else if (typeof define === 'function' && define.amd) define([\"react-dom\", \"react\"], factory);else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') exports[\"ReactDraggable\"] = factory(require(\"react-dom\"), require(\"react\"));else root[\"ReactDraggable\"] = factory(root[\"ReactDOM\"], root[\"React\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 12);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.findInArray = findInArray;\n      exports.isFunction = isFunction;\n      exports.isNum = isNum;\n      exports.int = int;\n      exports.dontSetMe = dontSetMe; // @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\n\n      function findInArray(array\n      /*: Array<any> | TouchList*/\n      , callback\n      /*: Function*/\n      )\n      /*: any*/\n      {\n        for (var i = 0, length = array.length; i < length; i++) {\n          if (callback.apply(callback, [array[i], i, array])) return array[i];\n        }\n      }\n\n      function isFunction(func\n      /*: any*/\n      )\n      /*: boolean*/\n      {\n        return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n      }\n\n      function isNum(num\n      /*: any*/\n      )\n      /*: boolean*/\n      {\n        return typeof num === 'number' && !isNaN(num);\n      }\n\n      function int(a\n      /*: string*/\n      )\n      /*: number*/\n      {\n        return parseInt(a, 10);\n      }\n\n      function dontSetMe(props\n      /*: Object*/\n      , propName\n      /*: string*/\n      , componentName\n      /*: string*/\n      ) {\n        if (props[propName]) {\n          return new Error('Invalid prop ' + propName + ' passed to ' + componentName + ' - do not set this, set it on the child.');\n        }\n      }\n      /***/\n\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       *\n       * \n       */\n\n      function makeEmptyFunction(arg) {\n        return function () {\n          return arg;\n        };\n      }\n      /**\n       * This function accepts and discards inputs; it has no side effects. This is\n       * primarily useful idiomatically for overridable function endpoints which\n       * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n       */\n\n\n      var emptyFunction = function emptyFunction() {};\n\n      emptyFunction.thatReturns = makeEmptyFunction;\n      emptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n      emptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n      emptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\n      emptyFunction.thatReturnsThis = function () {\n        return this;\n      };\n\n      emptyFunction.thatReturnsArgument = function (arg) {\n        return arg;\n      };\n\n      module.exports = emptyFunction;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       *\n       */\n\n      /**\n       * Use invariant() to assert state which your program assumes to be true.\n       *\n       * Provide sprintf-style format (only %s is supported) and arguments\n       * to provide information about what broke and what you were\n       * expecting.\n       *\n       * The invariant message will be stripped in production, but the invariant\n       * will remain to ensure logic does not differ in production.\n       */\n\n      var validateFormat = function validateFormat(format) {};\n\n      if (Object({\n        \"DRAGGABLE_DEBUG\": undefined\n      }).NODE_ENV !== 'production') {\n        validateFormat = function validateFormat(format) {\n          if (format === undefined) {\n            throw new Error('invariant requires an error message argument');\n          }\n        };\n      }\n\n      function invariant(condition, format, a, b, c, d, e, f) {\n        validateFormat(format);\n\n        if (!condition) {\n          var error;\n\n          if (format === undefined) {\n            error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n          } else {\n            var args = [a, b, c, d, e, f];\n            var argIndex = 0;\n            error = new Error(format.replace(/%s/g, function () {\n              return args[argIndex++];\n            }));\n            error.name = 'Invariant Violation';\n          }\n\n          error.framesToPop = 1; // we don't care about invariant's own frame\n\n          throw error;\n        }\n      }\n\n      module.exports = invariant;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       */\n\n      var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n      module.exports = ReactPropTypesSecret;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      exports.matchesSelector = matchesSelector;\n      exports.matchesSelectorAndParentsTo = matchesSelectorAndParentsTo;\n      exports.addEvent = addEvent;\n      exports.removeEvent = removeEvent;\n      exports.outerHeight = outerHeight;\n      exports.outerWidth = outerWidth;\n      exports.innerHeight = innerHeight;\n      exports.innerWidth = innerWidth;\n      exports.offsetXYFromParent = offsetXYFromParent;\n      exports.createCSSTransform = createCSSTransform;\n      exports.createSVGTransform = createSVGTransform;\n      exports.getTouch = getTouch;\n      exports.getTouchIdentifier = getTouchIdentifier;\n      exports.addUserSelectStyles = addUserSelectStyles;\n      exports.removeUserSelectStyles = removeUserSelectStyles;\n      exports.styleHacks = styleHacks;\n      exports.addClassName = addClassName;\n      exports.removeClassName = removeClassName;\n\n      var _shims = __webpack_require__(0);\n\n      var _getPrefix = __webpack_require__(19);\n\n      var _getPrefix2 = _interopRequireDefault(_getPrefix);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _defineProperty(obj, key, value) {\n        if (key in obj) {\n          Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n          });\n        } else {\n          obj[key] = value;\n        }\n\n        return obj;\n      }\n      /*:: import type {ControlPosition, MouseTouchEvent} from './types';*/\n\n\n      var matchesSelectorFunc = '';\n\n      function matchesSelector(el\n      /*: Node*/\n      , selector\n      /*: string*/\n      )\n      /*: boolean*/\n      {\n        if (!matchesSelectorFunc) {\n          matchesSelectorFunc = (0, _shims.findInArray)(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n            // $FlowIgnore: Doesn't think elements are indexable\n            return (0, _shims.isFunction)(el[method]);\n          });\n        } // Might not be found entirely (not an Element?) - in that case, bail\n        // $FlowIgnore: Doesn't think elements are indexable\n\n\n        if (!(0, _shims.isFunction)(el[matchesSelectorFunc])) return false; // $FlowIgnore: Doesn't think elements are indexable\n\n        return el[matchesSelectorFunc](selector);\n      } // Works up the tree to the draggable itself attempting to match selector.\n\n\n      function matchesSelectorAndParentsTo(el\n      /*: Node*/\n      , selector\n      /*: string*/\n      , baseNode\n      /*: Node*/\n      )\n      /*: boolean*/\n      {\n        var node = el;\n\n        do {\n          if (matchesSelector(node, selector)) return true;\n          if (node === baseNode) return false;\n          node = node.parentNode;\n        } while (node);\n\n        return false;\n      }\n\n      function addEvent(el\n      /*: ?Node*/\n      , event\n      /*: string*/\n      , handler\n      /*: Function*/\n      )\n      /*: void*/\n      {\n        if (!el) {\n          return;\n        }\n\n        if (el.attachEvent) {\n          el.attachEvent('on' + event, handler);\n        } else if (el.addEventListener) {\n          el.addEventListener(event, handler, true);\n        } else {\n          // $FlowIgnore: Doesn't think elements are indexable\n          el['on' + event] = handler;\n        }\n      }\n\n      function removeEvent(el\n      /*: ?Node*/\n      , event\n      /*: string*/\n      , handler\n      /*: Function*/\n      )\n      /*: void*/\n      {\n        if (!el) {\n          return;\n        }\n\n        if (el.detachEvent) {\n          el.detachEvent('on' + event, handler);\n        } else if (el.removeEventListener) {\n          el.removeEventListener(event, handler, true);\n        } else {\n          // $FlowIgnore: Doesn't think elements are indexable\n          el['on' + event] = null;\n        }\n      }\n\n      function outerHeight(node\n      /*: HTMLElement*/\n      )\n      /*: number*/\n      {\n        // This is deliberately excluding margin for our calculations, since we are using\n        // offsetTop which is including margin. See getBoundPosition\n        var height = node.clientHeight;\n        var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n        height += (0, _shims.int)(computedStyle.borderTopWidth);\n        height += (0, _shims.int)(computedStyle.borderBottomWidth);\n        return height;\n      }\n\n      function outerWidth(node\n      /*: HTMLElement*/\n      )\n      /*: number*/\n      {\n        // This is deliberately excluding margin for our calculations, since we are using\n        // offsetLeft which is including margin. See getBoundPosition\n        var width = node.clientWidth;\n        var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n        width += (0, _shims.int)(computedStyle.borderLeftWidth);\n        width += (0, _shims.int)(computedStyle.borderRightWidth);\n        return width;\n      }\n\n      function innerHeight(node\n      /*: HTMLElement*/\n      )\n      /*: number*/\n      {\n        var height = node.clientHeight;\n        var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n        height -= (0, _shims.int)(computedStyle.paddingTop);\n        height -= (0, _shims.int)(computedStyle.paddingBottom);\n        return height;\n      }\n\n      function innerWidth(node\n      /*: HTMLElement*/\n      )\n      /*: number*/\n      {\n        var width = node.clientWidth;\n        var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n        width -= (0, _shims.int)(computedStyle.paddingLeft);\n        width -= (0, _shims.int)(computedStyle.paddingRight);\n        return width;\n      } // Get from offsetParent\n\n\n      function offsetXYFromParent(evt\n      /*: {clientX: number, clientY: number}*/\n      , offsetParent\n      /*: HTMLElement*/\n      )\n      /*: ControlPosition*/\n      {\n        var isBody = offsetParent === offsetParent.ownerDocument.body;\n        var offsetParentRect = isBody ? {\n          left: 0,\n          top: 0\n        } : offsetParent.getBoundingClientRect();\n        var x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;\n        var y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;\n        return {\n          x: x,\n          y: y\n        };\n      }\n\n      function createCSSTransform(_ref)\n      /*: Object*/\n      {\n        var x = _ref.x,\n            y = _ref.y; // Replace unitless items with px\n\n        return _defineProperty({}, (0, _getPrefix.browserPrefixToKey)('transform', _getPrefix2.default), 'translate(' + x + 'px,' + y + 'px)');\n      }\n\n      function createSVGTransform(_ref3)\n      /*: string*/\n      {\n        var x = _ref3.x,\n            y = _ref3.y;\n        return 'translate(' + x + ',' + y + ')';\n      }\n\n      function getTouch(e\n      /*: MouseTouchEvent*/\n      , identifier\n      /*: number*/\n      )\n      /*: ?{clientX: number, clientY: number}*/\n      {\n        return e.targetTouches && (0, _shims.findInArray)(e.targetTouches, function (t) {\n          return identifier === t.identifier;\n        }) || e.changedTouches && (0, _shims.findInArray)(e.changedTouches, function (t) {\n          return identifier === t.identifier;\n        });\n      }\n\n      function getTouchIdentifier(e\n      /*: MouseTouchEvent*/\n      )\n      /*: ?number*/\n      {\n        if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n        if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n      } // User-select Hacks:\n      //\n      // Useful for preventing blue highlights all over everything when dragging.\n      // Note we're passing `document` b/c we could be iframed\n\n\n      function addUserSelectStyles(doc\n      /*: ?Document*/\n      ) {\n        if (!doc) return;\n        var styleEl = doc.getElementById('react-draggable-style-el');\n\n        if (!styleEl) {\n          styleEl = doc.createElement('style');\n          styleEl.type = 'text/css';\n          styleEl.id = 'react-draggable-style-el';\n          styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {background: transparent;}\\n';\n          styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {background: transparent;}\\n';\n          doc.getElementsByTagName('head')[0].appendChild(styleEl);\n        }\n\n        if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n      }\n\n      function removeUserSelectStyles(doc\n      /*: ?Document*/\n      ) {\n        try {\n          if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n          window.getSelection().removeAllRanges(); // remove selection caused by scroll\n        } catch (e) {// probably IE\n        }\n      }\n\n      function styleHacks()\n      /*: Object*/\n      {\n        var childStyle\n        /*: Object*/\n        = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Workaround IE pointer events; see #51\n        // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n\n        return _extends({\n          touchAction: 'none'\n        }, childStyle);\n      }\n\n      function addClassName(el\n      /*: HTMLElement*/\n      , className\n      /*: string*/\n      ) {\n        if (el.classList) {\n          el.classList.add(className);\n        } else {\n          if (!el.className.match(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)'))) {\n            el.className += ' ' + className;\n          }\n        }\n      }\n\n      function removeClassName(el\n      /*: HTMLElement*/\n      , className\n      /*: string*/\n      ) {\n        if (el.classList) {\n          el.classList.remove(className);\n        } else {\n          el.className = el.className.replace(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)', 'g'), '');\n        }\n      }\n      /***/\n\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       */\n      if (Object({\n        \"DRAGGABLE_DEBUG\": undefined\n      }).NODE_ENV !== 'production') {\n        var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\n        var isValidElement = function isValidElement(object) {\n          return _typeof(object) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }; // By explicitly using `prop-types` you are opting into new development behavior.\n        // http://fb.me/prop-types-in-prod\n\n\n        var throwOnDirectAccess = true;\n        module.exports = __webpack_require__(14)(isValidElement, throwOnDirectAccess);\n      } else {\n        // By explicitly using `prop-types` you are opting into new production behavior.\n        // http://fb.me/prop-types-in-prod\n        module.exports = __webpack_require__(17)();\n      }\n      /***/\n\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * Copyright (c) 2014-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       *\n       */\n\n      var emptyFunction = __webpack_require__(1);\n      /**\n       * Similar to invariant but only logs a warning if the condition is not met.\n       * This can be used to log issues in development environments in critical\n       * paths. Removing the logging code for production environments will keep the\n       * same logic and follow the same code paths.\n       */\n\n\n      var warning = emptyFunction;\n\n      if (Object({\n        \"DRAGGABLE_DEBUG\": undefined\n      }).NODE_ENV !== 'production') {\n        var printWarning = function printWarning(format) {\n          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          var argIndex = 0;\n          var message = 'Warning: ' + format.replace(/%s/g, function () {\n            return args[argIndex++];\n          });\n\n          if (typeof console !== 'undefined') {\n            console.error(message);\n          }\n\n          try {\n            // --- Welcome to debugging React ---\n            // This error was thrown as a convenience so that you can use this stack\n            // to find the callsite that caused this warning to fire.\n            throw new Error(message);\n          } catch (x) {}\n        };\n\n        warning = function warning(condition, format) {\n          if (format === undefined) {\n            throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n          }\n\n          if (format.indexOf('Failed Composite propType: ') === 0) {\n            return; // Ignore CompositeComponent proptype check.\n          }\n\n          if (!condition) {\n            for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n              args[_key2 - 2] = arguments[_key2];\n            }\n\n            printWarning.apply(undefined, [format].concat(args));\n          }\n        };\n      }\n\n      module.exports = warning;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getBoundPosition = getBoundPosition;\n      exports.snapToGrid = snapToGrid;\n      exports.canDragX = canDragX;\n      exports.canDragY = canDragY;\n      exports.getControlPosition = getControlPosition;\n      exports.createCoreData = createCoreData;\n      exports.createDraggableData = createDraggableData;\n\n      var _shims = __webpack_require__(0);\n\n      var _reactDom = __webpack_require__(4);\n\n      var _reactDom2 = _interopRequireDefault(_reactDom);\n\n      var _domFns = __webpack_require__(5);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /*:: import type Draggable from '../Draggable';*/\n\n      /*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n\n      /*:: import type DraggableCore from '../DraggableCore';*/\n\n\n      function getBoundPosition(draggable\n      /*: Draggable*/\n      , x\n      /*: number*/\n      , y\n      /*: number*/\n      )\n      /*: [number, number]*/\n      {\n        // If no bounds, short-circuit and move on\n        if (!draggable.props.bounds) return [x, y]; // Clone new bounds\n\n        var bounds = draggable.props.bounds;\n        bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n        var node = findDOMNode(draggable);\n\n        if (typeof bounds === 'string') {\n          var ownerDocument = node.ownerDocument;\n          var ownerWindow = ownerDocument.defaultView;\n          var boundNode = void 0;\n\n          if (bounds === 'parent') {\n            boundNode = node.parentNode;\n          } else {\n            boundNode = ownerDocument.querySelector(bounds);\n          }\n\n          if (!(boundNode instanceof HTMLElement)) {\n            throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n          }\n\n          var nodeStyle = ownerWindow.getComputedStyle(node);\n          var boundNodeStyle = ownerWindow.getComputedStyle(boundNode); // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\n          bounds = {\n            left: -node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingLeft) + (0, _shims.int)(nodeStyle.marginLeft),\n            top: -node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingTop) + (0, _shims.int)(nodeStyle.marginTop),\n            right: (0, _domFns.innerWidth)(boundNode) - (0, _domFns.outerWidth)(node) - node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingRight) - (0, _shims.int)(nodeStyle.marginRight),\n            bottom: (0, _domFns.innerHeight)(boundNode) - (0, _domFns.outerHeight)(node) - node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingBottom) - (0, _shims.int)(nodeStyle.marginBottom)\n          };\n        } // Keep x and y below right and bottom limits...\n\n\n        if ((0, _shims.isNum)(bounds.right)) x = Math.min(x, bounds.right);\n        if ((0, _shims.isNum)(bounds.bottom)) y = Math.min(y, bounds.bottom); // But above left and top limits.\n\n        if ((0, _shims.isNum)(bounds.left)) x = Math.max(x, bounds.left);\n        if ((0, _shims.isNum)(bounds.top)) y = Math.max(y, bounds.top);\n        return [x, y];\n      }\n\n      function snapToGrid(grid\n      /*: [number, number]*/\n      , pendingX\n      /*: number*/\n      , pendingY\n      /*: number*/\n      )\n      /*: [number, number]*/\n      {\n        var x = Math.round(pendingX / grid[0]) * grid[0];\n        var y = Math.round(pendingY / grid[1]) * grid[1];\n        return [x, y];\n      }\n\n      function canDragX(draggable\n      /*: Draggable*/\n      )\n      /*: boolean*/\n      {\n        return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n      }\n\n      function canDragY(draggable\n      /*: Draggable*/\n      )\n      /*: boolean*/\n      {\n        return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n      } // Get {x, y} positions from event.\n\n\n      function getControlPosition(e\n      /*: MouseTouchEvent*/\n      , touchIdentifier\n      /*: ?number*/\n      , draggableCore\n      /*: DraggableCore*/\n      )\n      /*: ?ControlPosition*/\n      {\n        var touchObj = typeof touchIdentifier === 'number' ? (0, _domFns.getTouch)(e, touchIdentifier) : null;\n        if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\n        var node = findDOMNode(draggableCore); // User can provide an offsetParent if desired.\n\n        var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n        return (0, _domFns.offsetXYFromParent)(touchObj || e, offsetParent);\n      } // Create an data object exposed by <DraggableCore>'s events\n\n\n      function createCoreData(draggable\n      /*: DraggableCore*/\n      , x\n      /*: number*/\n      , y\n      /*: number*/\n      )\n      /*: DraggableData*/\n      {\n        var state = draggable.state;\n        var isStart = !(0, _shims.isNum)(state.lastX);\n        var node = findDOMNode(draggable);\n\n        if (isStart) {\n          // If this is our first move, use the x and y as last coords.\n          return {\n            node: node,\n            deltaX: 0,\n            deltaY: 0,\n            lastX: x,\n            lastY: y,\n            x: x,\n            y: y\n          };\n        } else {\n          // Otherwise calculate proper values.\n          return {\n            node: node,\n            deltaX: x - state.lastX,\n            deltaY: y - state.lastY,\n            lastX: state.lastX,\n            lastY: state.lastY,\n            x: x,\n            y: y\n          };\n        }\n      } // Create an data exposed by <Draggable>'s events\n\n\n      function createDraggableData(draggable\n      /*: Draggable*/\n      , coreData\n      /*: DraggableData*/\n      )\n      /*: DraggableData*/\n      {\n        return {\n          node: coreData.node,\n          x: draggable.state.x + coreData.deltaX,\n          y: draggable.state.y + coreData.deltaY,\n          deltaX: coreData.deltaX,\n          deltaY: coreData.deltaY,\n          lastX: draggable.state.x,\n          lastY: draggable.state.y\n        };\n      } // A lot faster than stringify/parse\n\n\n      function cloneBounds(bounds\n      /*: Bounds*/\n      )\n      /*: Bounds*/\n      {\n        return {\n          left: bounds.left,\n          top: bounds.top,\n          right: bounds.right,\n          bottom: bounds.bottom\n        };\n      }\n\n      function findDOMNode(draggable\n      /*: Draggable | DraggableCore*/\n      )\n      /*: HTMLElement*/\n      {\n        var node = _reactDom2.default.findDOMNode(draggable);\n\n        if (!node) {\n          throw new Error('<DraggableCore>: Unmounted during event!');\n        } // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\n\n        return node;\n      }\n      /***/\n\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /* WEBPACK VAR INJECTION */\n\n      (function (process) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n\n        var _slicedToArray = function () {\n          function sliceIterator(arr, i) {\n            var _arr = [];\n            var _n = true;\n            var _d = false;\n            var _e = undefined;\n\n            try {\n              for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                _arr.push(_s.value);\n\n                if (i && _arr.length === i) break;\n              }\n            } catch (err) {\n              _d = true;\n              _e = err;\n            } finally {\n              try {\n                if (!_n && _i[\"return\"]) _i[\"return\"]();\n              } finally {\n                if (_d) throw _e;\n              }\n            }\n\n            return _arr;\n          }\n\n          return function (arr, i) {\n            if (Array.isArray(arr)) {\n              return arr;\n            } else if (Symbol.iterator in Object(arr)) {\n              return sliceIterator(arr, i);\n            } else {\n              throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n            }\n          };\n        }();\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        var _react = __webpack_require__(6);\n\n        var _react2 = _interopRequireDefault(_react);\n\n        var _propTypes = __webpack_require__(7);\n\n        var _propTypes2 = _interopRequireDefault(_propTypes);\n\n        var _reactDom = __webpack_require__(4);\n\n        var _reactDom2 = _interopRequireDefault(_reactDom);\n\n        var _domFns = __webpack_require__(5);\n\n        var _positionFns = __webpack_require__(9);\n\n        var _shims = __webpack_require__(0);\n\n        var _log = __webpack_require__(11);\n\n        var _log2 = _interopRequireDefault(_log);\n\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _possibleConstructorReturn(self, call) {\n          if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n\n          return call && (_typeof(call) === \"object\" || typeof call === \"function\") ? call : self;\n        }\n\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(superClass));\n          }\n\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n        }\n        /*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n        // Simple abstraction for dragging events names.\n\n        /*:: import type {Element as ReactElement} from 'react';*/\n\n\n        var eventsFor = {\n          touch: {\n            start: 'touchstart',\n            move: 'touchmove',\n            stop: 'touchend'\n          },\n          mouse: {\n            start: 'mousedown',\n            move: 'mousemove',\n            stop: 'mouseup'\n          }\n        }; // Default to mouse events.\n\n        var dragEventFor = eventsFor.mouse;\n        /*:: type DraggableCoreState = {\n          dragging: boolean,\n          lastX: number,\n          lastY: number,\n          touchIdentifier: ?number\n        };*/\n\n        /*:: export type DraggableBounds = {\n          left: number,\n          right: number,\n          top: number,\n          bottom: number,\n        };*/\n\n        /*:: export type DraggableData = {\n          node: HTMLElement,\n          x: number, y: number,\n          deltaX: number, deltaY: number,\n          lastX: number, lastY: number,\n        };*/\n\n        /*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;*/\n\n        /*:: export type ControlPosition = {x: number, y: number};*/\n        //\n        // Define <DraggableCore>.\n        //\n        // <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n        // work well with libraries that require more control over the element.\n        //\n\n        /*:: export type DraggableCoreProps = {\n          allowAnyClick: boolean,\n          cancel: string,\n          children: ReactElement<any>,\n          disabled: boolean,\n          enableUserSelectHack: boolean,\n          offsetParent: HTMLElement,\n          grid: [number, number],\n          handle: string,\n          onStart: DraggableEventHandler,\n          onDrag: DraggableEventHandler,\n          onStop: DraggableEventHandler,\n          onMouseDown: (e: MouseEvent) => void,\n        };*/\n\n        var DraggableCore = function (_React$Component) {\n          _inherits(DraggableCore, _React$Component);\n\n          function DraggableCore() {\n            var _ref;\n\n            var _temp, _this, _ret;\n\n            _classCallCheck(this, DraggableCore);\n\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DraggableCore.__proto__ || Object.getPrototypeOf(DraggableCore)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n              dragging: false,\n              // Used while dragging to determine deltas.\n              lastX: NaN,\n              lastY: NaN,\n              touchIdentifier: null\n            }, _this.handleDragStart = function (e) {\n              // Make it possible to attach event handlers on top of this one.\n              _this.props.onMouseDown(e); // Only accept left-clicks.\n\n\n              if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false; // Get nodes. Be sure to grab relative document (could be iframed)\n\n              var thisNode = _reactDom2.default.findDOMNode(_this);\n\n              if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n                throw new Error('<DraggableCore> not mounted on DragStart!');\n              }\n\n              var ownerDocument = thisNode.ownerDocument; // Short circuit if handle or cancel prop was provided and selector doesn't match.\n\n              if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !(0, _domFns.matchesSelectorAndParentsTo)(e.target, _this.props.handle, thisNode) || _this.props.cancel && (0, _domFns.matchesSelectorAndParentsTo)(e.target, _this.props.cancel, thisNode)) {\n                return;\n              } // Set touch identifier in component state if this is a touch event. This allows us to\n              // distinguish between individual touches on multitouch screens by identifying which\n              // touchpoint was set to this element.\n\n\n              var touchIdentifier = (0, _domFns.getTouchIdentifier)(e);\n\n              _this.setState({\n                touchIdentifier: touchIdentifier\n              }); // Get the current drag point from the event. This is used as the offset.\n\n\n              var position = (0, _positionFns.getControlPosition)(e, touchIdentifier, _this);\n              if (position == null) return; // not possible but satisfies flow\n\n              var x = position.x,\n                  y = position.y; // Create an event object with all the data parents need to make a decision here.\n\n              var coreEvent = (0, _positionFns.createCoreData)(_this, x, y);\n              (0, _log2.default)('DraggableCore: handleDragStart: %j', coreEvent); // Call event handler. If it returns explicit false, cancel.\n\n              (0, _log2.default)('calling', _this.props.onStart);\n\n              var shouldUpdate = _this.props.onStart(e, coreEvent);\n\n              if (shouldUpdate === false) return; // Add a style to the body to disable user-select. This prevents text from\n              // being selected all over the page.\n\n              if (_this.props.enableUserSelectHack) (0, _domFns.addUserSelectStyles)(ownerDocument); // Initiate dragging. Set the current x and y as offsets\n              // so we know how much we've moved during the drag. This allows us\n              // to drag elements around even if they have been moved, without issue.\n\n              _this.setState({\n                dragging: true,\n                lastX: x,\n                lastY: y\n              }); // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n              // this element. We use different events depending on whether or not we have detected that this\n              // is a touch-capable device.\n\n\n              (0, _domFns.addEvent)(ownerDocument, dragEventFor.move, _this.handleDrag);\n              (0, _domFns.addEvent)(ownerDocument, dragEventFor.stop, _this.handleDragStop);\n            }, _this.handleDrag = function (e) {\n              // Prevent scrolling on mobile devices, like ipad/iphone.\n              if (e.type === 'touchmove') e.preventDefault(); // Get the current drag point from the event. This is used as the offset.\n\n              var position = (0, _positionFns.getControlPosition)(e, _this.state.touchIdentifier, _this);\n              if (position == null) return;\n              var x = position.x,\n                  y = position.y; // Snap to grid if prop has been provided\n\n              if (Array.isArray(_this.props.grid)) {\n                var _deltaX = x - _this.state.lastX,\n                    _deltaY = y - _this.state.lastY;\n\n                var _snapToGrid = (0, _positionFns.snapToGrid)(_this.props.grid, _deltaX, _deltaY);\n\n                var _snapToGrid2 = _slicedToArray(_snapToGrid, 2);\n\n                _deltaX = _snapToGrid2[0];\n                _deltaY = _snapToGrid2[1];\n                if (!_deltaX && !_deltaY) return; // skip useless drag\n\n                x = _this.state.lastX + _deltaX, y = _this.state.lastY + _deltaY;\n              }\n\n              var coreEvent = (0, _positionFns.createCoreData)(_this, x, y);\n              (0, _log2.default)('DraggableCore: handleDrag: %j', coreEvent); // Call event handler. If it returns explicit false, trigger end.\n\n              var shouldUpdate = _this.props.onDrag(e, coreEvent);\n\n              if (shouldUpdate === false) {\n                try {\n                  // $FlowIgnore\n                  _this.handleDragStop(new MouseEvent('mouseup'));\n                } catch (err) {\n                  // Old browsers\n                  var event = document.createEvent('MouseEvents')\n                  /*: any*/\n                  ; // I see why this insanity was deprecated\n                  // $FlowIgnore\n\n                  event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n                  _this.handleDragStop(event);\n                }\n\n                return;\n              }\n\n              _this.setState({\n                lastX: x,\n                lastY: y\n              });\n            }, _this.handleDragStop = function (e) {\n              if (!_this.state.dragging) return;\n              var position = (0, _positionFns.getControlPosition)(e, _this.state.touchIdentifier, _this);\n              if (position == null) return;\n              var x = position.x,\n                  y = position.y;\n              var coreEvent = (0, _positionFns.createCoreData)(_this, x, y);\n\n              var thisNode = _reactDom2.default.findDOMNode(_this);\n\n              if (thisNode) {\n                // Remove user-select hack\n                if (_this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(thisNode.ownerDocument);\n              }\n\n              (0, _log2.default)('DraggableCore: handleDragStop: %j', coreEvent); // Reset the el.\n\n              _this.setState({\n                dragging: false,\n                lastX: NaN,\n                lastY: NaN\n              }); // Call event handler\n\n\n              _this.props.onStop(e, coreEvent);\n\n              if (thisNode) {\n                // Remove event handlers\n                (0, _log2.default)('DraggableCore: Removing handlers');\n                (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.move, _this.handleDrag);\n                (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.stop, _this.handleDragStop);\n              }\n            }, _this.onMouseDown = function (e) {\n              dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n              return _this.handleDragStart(e);\n            }, _this.onMouseUp = function (e) {\n              dragEventFor = eventsFor.mouse;\n              return _this.handleDragStop(e);\n            }, _this.onTouchStart = function (e) {\n              // We're on a touch device now, so change the event handlers\n              dragEventFor = eventsFor.touch;\n              return _this.handleDragStart(e);\n            }, _this.onTouchEnd = function (e) {\n              // We're on a touch device now, so change the event handlers\n              dragEventFor = eventsFor.touch;\n              return _this.handleDragStop(e);\n            }, _temp), _possibleConstructorReturn(_this, _ret);\n          }\n\n          _createClass(DraggableCore, [{\n            key: 'componentWillUnmount',\n            value: function componentWillUnmount() {\n              // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n              // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n              var thisNode = _reactDom2.default.findDOMNode(this);\n\n              if (thisNode) {\n                var ownerDocument = thisNode.ownerDocument;\n                (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n                (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.move, this.handleDrag);\n                (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n                (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n                if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(ownerDocument);\n              }\n            } // Same as onMouseDown (start drag), but now consider this a touch device.\n\n          }, {\n            key: 'render',\n            value: function render() {\n              // Reuse the child provided\n              // This makes it flexible to use whatever element is wanted (div, ul, etc)\n              return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), {\n                style: (0, _domFns.styleHacks)(this.props.children.props.style),\n                // Note: mouseMove handler is attached to document so it will still function\n                // when the user drags quickly and leaves the bounds of the element.\n                onMouseDown: this.onMouseDown,\n                onTouchStart: this.onTouchStart,\n                onMouseUp: this.onMouseUp,\n                onTouchEnd: this.onTouchEnd\n              });\n            }\n          }]);\n\n          return DraggableCore;\n        }(_react2.default.Component);\n\n        DraggableCore.displayName = 'DraggableCore';\n        DraggableCore.propTypes = {\n          /**\n           * `allowAnyClick` allows dragging using any mouse button.\n           * By default, we only accept the left button.\n           *\n           * Defaults to `false`.\n           */\n          allowAnyClick: _propTypes2.default.bool,\n\n          /**\n           * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n           * with the exception of `onMouseDown`, will not fire.\n           */\n          disabled: _propTypes2.default.bool,\n\n          /**\n           * By default, we add 'user-select:none' attributes to the document body\n           * to prevent ugly text selection during drag. If this is causing problems\n           * for your app, set this to `false`.\n           */\n          enableUserSelectHack: _propTypes2.default.bool,\n\n          /**\n           * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n           * instead of using the parent node.\n           */\n          offsetParent: function offsetParent(props\n          /*: DraggableCoreProps*/\n          , propName\n          /*: $Keys<DraggableCoreProps>*/\n          ) {\n            if (process.browser === true && props[propName] && props[propName].nodeType !== 1) {\n              throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n            }\n          },\n\n          /**\n           * `grid` specifies the x and y that dragging should snap to.\n           */\n          grid: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\n          /**\n           * `handle` specifies a selector to be used as the handle that initiates drag.\n           *\n           * Example:\n           *\n           * ```jsx\n           *   let App = React.createClass({\n           *       render: function () {\n           *         return (\n           *            <Draggable handle=\".handle\">\n           *              <div>\n           *                  <div className=\"handle\">Click me to drag</div>\n           *                  <div>This is some other content</div>\n           *              </div>\n           *           </Draggable>\n           *         );\n           *       }\n           *   });\n           * ```\n           */\n          handle: _propTypes2.default.string,\n\n          /**\n           * `cancel` specifies a selector to be used to prevent drag initialization.\n           *\n           * Example:\n           *\n           * ```jsx\n           *   let App = React.createClass({\n           *       render: function () {\n           *           return(\n           *               <Draggable cancel=\".cancel\">\n           *                   <div>\n           *                     <div className=\"cancel\">You can't drag from here</div>\n           *                     <div>Dragging here works fine</div>\n           *                   </div>\n           *               </Draggable>\n           *           );\n           *       }\n           *   });\n           * ```\n           */\n          cancel: _propTypes2.default.string,\n\n          /**\n           * Called when dragging starts.\n           * If this function returns the boolean false, dragging will be canceled.\n           */\n          onStart: _propTypes2.default.func,\n\n          /**\n           * Called while dragging.\n           * If this function returns the boolean false, dragging will be canceled.\n           */\n          onDrag: _propTypes2.default.func,\n\n          /**\n           * Called when dragging stops.\n           * If this function returns the boolean false, the drag will remain active.\n           */\n          onStop: _propTypes2.default.func,\n\n          /**\n           * A workaround option which can be passed if onMouseDown needs to be accessed,\n           * since it'll always be blocked (as there is internal use of onMouseDown)\n           */\n          onMouseDown: _propTypes2.default.func,\n\n          /**\n           * These properties should be defined on the child, not here.\n           */\n          className: _shims.dontSetMe,\n          style: _shims.dontSetMe,\n          transform: _shims.dontSetMe\n        };\n        DraggableCore.defaultProps = {\n          allowAnyClick: false,\n          // by default only accept left click\n          cancel: null,\n          disabled: false,\n          enableUserSelectHack: true,\n          offsetParent: null,\n          handle: null,\n          grid: null,\n          transform: null,\n          onStart: function onStart() {},\n          onDrag: function onDrag() {},\n          onStop: function onStop() {},\n          onMouseDown: function onMouseDown() {}\n        };\n        exports.default = DraggableCore;\n        /* WEBPACK VAR INJECTION */\n      }).call(exports, __webpack_require__(20));\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = log;\n      /*eslint no-console:0*/\n\n      function log() {\n        var _console;\n\n        if (undefined) (_console = console).log.apply(_console, arguments);\n      }\n      /***/\n\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var Draggable = __webpack_require__(13).default; // Previous versions of this lib exported <Draggable> as the root export. As to not break\n      // them, or TypeScript, we export *both* as the root and as 'default'.\n      // See https://github.com/mzabriskie/react-draggable/pull/254\n      // and https://github.com/mzabriskie/react-draggable/issues/266\n\n\n      module.exports = Draggable;\n      module.exports.default = Draggable;\n      module.exports.DraggableCore = __webpack_require__(10).default;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n          var _arr = [];\n          var _n = true;\n          var _d = false;\n          var _e = undefined;\n\n          try {\n            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n              _arr.push(_s.value);\n\n              if (i && _arr.length === i) break;\n            }\n          } catch (err) {\n            _d = true;\n            _e = err;\n          } finally {\n            try {\n              if (!_n && _i[\"return\"]) _i[\"return\"]();\n            } finally {\n              if (_d) throw _e;\n            }\n          }\n\n          return _arr;\n        }\n\n        return function (arr, i) {\n          if (Array.isArray(arr)) {\n            return arr;\n          } else if (Symbol.iterator in Object(arr)) {\n            return sliceIterator(arr, i);\n          } else {\n            throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n          }\n        };\n      }();\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(6);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes = __webpack_require__(7);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _reactDom = __webpack_require__(4);\n\n      var _reactDom2 = _interopRequireDefault(_reactDom);\n\n      var _classnames = __webpack_require__(18);\n\n      var _classnames2 = _interopRequireDefault(_classnames);\n\n      var _domFns = __webpack_require__(5);\n\n      var _positionFns = __webpack_require__(9);\n\n      var _shims = __webpack_require__(0);\n\n      var _DraggableCore = __webpack_require__(10);\n\n      var _DraggableCore2 = _interopRequireDefault(_DraggableCore);\n\n      var _log = __webpack_require__(11);\n\n      var _log2 = _interopRequireDefault(_log);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _defineProperty(obj, key, value) {\n        if (key in obj) {\n          Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n          });\n        } else {\n          obj[key] = value;\n        }\n\n        return obj;\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (_typeof(call) === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(superClass));\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n      /*:: import type {ControlPosition, DraggableBounds, DraggableCoreProps} from './DraggableCore';*/\n\n      /*:: import type {DraggableEventHandler} from './utils/types';*/\n\n      /*:: import type {Element as ReactElement} from 'react';*/\n\n      /*:: type DraggableState = {\n        dragging: boolean,\n        dragged: boolean,\n        x: number, y: number,\n        slackX: number, slackY: number,\n        isElementSVG: boolean\n      };*/\n      //\n      // Define <Draggable>\n      //\n\n      /*:: export type DraggableProps = {\n        ...$Exact<DraggableCoreProps>,\n        axis: 'both' | 'x' | 'y' | 'none',\n        bounds: DraggableBounds | string | false,\n        defaultClassName: string,\n        defaultClassNameDragging: string,\n        defaultClassNameDragged: string,\n        defaultPosition: ControlPosition,\n        position: ControlPosition,\n      };*/\n\n\n      var Draggable = function (_React$Component) {\n        _inherits(Draggable, _React$Component);\n\n        function Draggable(props\n        /*: DraggableProps*/\n        ) {\n          _classCallCheck(this, Draggable);\n\n          var _this = _possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this, props));\n\n          _this.onDragStart = function (e, coreData) {\n            (0, _log2.default)('Draggable: onDragStart: %j', coreData); // Short-circuit if user's callback killed it.\n\n            var shouldStart = _this.props.onStart(e, (0, _positionFns.createDraggableData)(_this, coreData)); // Kills start event on core as well, so move handlers are never bound.\n\n\n            if (shouldStart === false) return false;\n\n            _this.setState({\n              dragging: true,\n              dragged: true\n            });\n          };\n\n          _this.onDrag = function (e, coreData) {\n            if (!_this.state.dragging) return false;\n            (0, _log2.default)('Draggable: onDrag: %j', coreData);\n            var uiData = (0, _positionFns.createDraggableData)(_this, coreData);\n            var newState\n            /*: $Shape<DraggableState>*/\n            = {\n              x: uiData.x,\n              y: uiData.y\n            }; // Keep within bounds.\n\n            if (_this.props.bounds) {\n              // Save original x and y.\n              var _x = newState.x,\n                  _y = newState.y; // Add slack to the values used to calculate bound position. This will ensure that if\n              // we start removing slack, the element won't react to it right away until it's been\n              // completely removed.\n\n              newState.x += _this.state.slackX;\n              newState.y += _this.state.slackY; // Get bound position. This will ceil/floor the x and y within the boundaries.\n\n              var _getBoundPosition = (0, _positionFns.getBoundPosition)(_this, newState.x, newState.y),\n                  _getBoundPosition2 = _slicedToArray(_getBoundPosition, 2),\n                  newStateX = _getBoundPosition2[0],\n                  newStateY = _getBoundPosition2[1];\n\n              newState.x = newStateX;\n              newState.y = newStateY; // Recalculate slack by noting how much was shaved by the boundPosition handler.\n\n              newState.slackX = _this.state.slackX + (_x - newState.x);\n              newState.slackY = _this.state.slackY + (_y - newState.y); // Update the event we fire to reflect what really happened after bounds took effect.\n\n              uiData.x = newState.x;\n              uiData.y = newState.y;\n              uiData.deltaX = newState.x - _this.state.x;\n              uiData.deltaY = newState.y - _this.state.y;\n            } // Short-circuit if user's callback killed it.\n\n\n            var shouldUpdate = _this.props.onDrag(e, uiData);\n\n            if (shouldUpdate === false) return false;\n\n            _this.setState(newState);\n          };\n\n          _this.onDragStop = function (e, coreData) {\n            if (!_this.state.dragging) return false; // Short-circuit if user's callback killed it.\n\n            var shouldStop = _this.props.onStop(e, (0, _positionFns.createDraggableData)(_this, coreData));\n\n            if (shouldStop === false) return false;\n            (0, _log2.default)('Draggable: onDragStop: %j', coreData);\n            var newState\n            /*: $Shape<DraggableState>*/\n            = {\n              dragging: false,\n              slackX: 0,\n              slackY: 0\n            }; // If this is a controlled component, the result of this operation will be to\n            // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n\n            var controlled = Boolean(_this.props.position);\n\n            if (controlled) {\n              var _this$props$position = _this.props.position,\n                  _x2 = _this$props$position.x,\n                  _y2 = _this$props$position.y;\n              newState.x = _x2;\n              newState.y = _y2;\n            }\n\n            _this.setState(newState);\n          };\n\n          _this.state = {\n            // Whether or not we are currently dragging.\n            dragging: false,\n            // Whether or not we have been dragged before.\n            dragged: false,\n            // Current transform x and y.\n            x: props.position ? props.position.x : props.defaultPosition.x,\n            y: props.position ? props.position.y : props.defaultPosition.y,\n            // Used for compensating for out-of-bounds drags\n            slackX: 0,\n            slackY: 0,\n            // Can only determine if SVG after mounting\n            isElementSVG: false\n          };\n          return _this;\n        }\n\n        _createClass(Draggable, [{\n          key: 'componentWillMount',\n          value: function componentWillMount() {\n            if (this.props.position && !(this.props.onDrag || this.props.onStop)) {\n              // eslint-disable-next-line\n              console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n            }\n          }\n        }, {\n          key: 'componentDidMount',\n          value: function componentDidMount() {\n            // Check to see if the element passed is an instanceof SVGElement\n            if (typeof window.SVGElement !== 'undefined' && _reactDom2.default.findDOMNode(this) instanceof window.SVGElement) {\n              this.setState({\n                isElementSVG: true\n              });\n            }\n          }\n        }, {\n          key: 'componentWillReceiveProps',\n          value: function componentWillReceiveProps(nextProps\n          /*: Object*/\n          ) {\n            // Set x/y if position has changed\n            if (nextProps.position && (!this.props.position || nextProps.position.x !== this.props.position.x || nextProps.position.y !== this.props.position.y)) {\n              this.setState({\n                x: nextProps.position.x,\n                y: nextProps.position.y\n              });\n            }\n          }\n        }, {\n          key: 'componentWillUnmount',\n          value: function componentWillUnmount() {\n            this.setState({\n              dragging: false\n            }); // prevents invariant if unmounted while dragging\n          }\n        }, {\n          key: 'render',\n          value: function render()\n          /*: ReactElement<any>*/\n          {\n            var _classNames;\n\n            var style = {},\n                svgTransform = null; // If this is controlled, we don't want to move it - unless it's dragging.\n\n            var controlled = Boolean(this.props.position);\n            var draggable = !controlled || this.state.dragging;\n            var position = this.props.position || this.props.defaultPosition;\n            var transformOpts = {\n              // Set left if horizontal drag is enabled\n              x: (0, _positionFns.canDragX)(this) && draggable ? this.state.x : position.x,\n              // Set top if vertical drag is enabled\n              y: (0, _positionFns.canDragY)(this) && draggable ? this.state.y : position.y\n            }; // If this element was SVG, we use the `transform` attribute.\n\n            if (this.state.isElementSVG) {\n              svgTransform = (0, _domFns.createSVGTransform)(transformOpts);\n            } else {\n              // Add a CSS transform to move the element around. This allows us to move the element around\n              // without worrying about whether or not it is relatively or absolutely positioned.\n              // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n              // has a clean slate.\n              style = (0, _domFns.createCSSTransform)(transformOpts);\n            }\n\n            var _props = this.props,\n                defaultClassName = _props.defaultClassName,\n                defaultClassNameDragging = _props.defaultClassNameDragging,\n                defaultClassNameDragged = _props.defaultClassNameDragged;\n\n            var children = _react2.default.Children.only(this.props.children); // Mark with class while dragging\n\n\n            var className = (0, _classnames2.default)(children.props.className || '', defaultClassName, (_classNames = {}, _defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), _defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames)); // Reuse the child provided\n            // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\n            return _react2.default.createElement(_DraggableCore2.default, _extends({}, this.props, {\n              onStart: this.onDragStart,\n              onDrag: this.onDrag,\n              onStop: this.onDragStop\n            }), _react2.default.cloneElement(children, {\n              className: className,\n              style: _extends({}, children.props.style, style),\n              transform: svgTransform\n            }));\n          }\n        }]);\n\n        return Draggable;\n      }(_react2.default.Component);\n\n      Draggable.displayName = 'Draggable';\n      Draggable.propTypes = _extends({}, _DraggableCore2.default.propTypes, {\n        /**\n         * `axis` determines which axis the draggable can move.\n         *\n         *  Note that all callbacks will still return data as normal. This only\n         *  controls flushing to the DOM.\n         *\n         * 'both' allows movement horizontally and vertically.\n         * 'x' limits movement to horizontal axis.\n         * 'y' limits movement to vertical axis.\n         * 'none' limits all movement.\n         *\n         * Defaults to 'both'.\n         */\n        axis: _propTypes2.default.oneOf(['both', 'x', 'y', 'none']),\n\n        /**\n         * `bounds` determines the range of movement available to the element.\n         * Available values are:\n         *\n         * 'parent' restricts movement within the Draggable's parent node.\n         *\n         * Alternatively, pass an object with the following properties, all of which are optional:\n         *\n         * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n         *\n         * All values are in px.\n         *\n         * Example:\n         *\n         * ```jsx\n         *   let App = React.createClass({\n         *       render: function () {\n         *         return (\n         *            <Draggable bounds={{right: 300, bottom: 300}}>\n         *              <div>Content</div>\n         *           </Draggable>\n         *         );\n         *       }\n         *   });\n         * ```\n         */\n        bounds: _propTypes2.default.oneOfType([_propTypes2.default.shape({\n          left: _propTypes2.default.number,\n          right: _propTypes2.default.number,\n          top: _propTypes2.default.number,\n          bottom: _propTypes2.default.number\n        }), _propTypes2.default.string, _propTypes2.default.oneOf([false])]),\n        defaultClassName: _propTypes2.default.string,\n        defaultClassNameDragging: _propTypes2.default.string,\n        defaultClassNameDragged: _propTypes2.default.string,\n\n        /**\n         * `defaultPosition` specifies the x and y that the dragged item should start at\n         *\n         * Example:\n         *\n         * ```jsx\n         *      let App = React.createClass({\n         *          render: function () {\n         *              return (\n         *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n         *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n         *                  </Draggable>\n         *              );\n         *          }\n         *      });\n         * ```\n         */\n        defaultPosition: _propTypes2.default.shape({\n          x: _propTypes2.default.number,\n          y: _propTypes2.default.number\n        }),\n\n        /**\n         * `position`, if present, defines the current position of the element.\n         *\n         *  This is similar to how form elements in React work - if no `position` is supplied, the component\n         *  is uncontrolled.\n         *\n         * Example:\n         *\n         * ```jsx\n         *      let App = React.createClass({\n         *          render: function () {\n         *              return (\n         *                  <Draggable position={{x: 25, y: 25}}>\n         *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n         *                  </Draggable>\n         *              );\n         *          }\n         *      });\n         * ```\n         */\n        position: _propTypes2.default.shape({\n          x: _propTypes2.default.number,\n          y: _propTypes2.default.number\n        }),\n\n        /**\n         * These properties should be defined on the child, not here.\n         */\n        className: _shims.dontSetMe,\n        style: _shims.dontSetMe,\n        transform: _shims.dontSetMe\n      });\n      Draggable.defaultProps = _extends({}, _DraggableCore2.default.defaultProps, {\n        axis: 'both',\n        bounds: false,\n        defaultClassName: 'react-draggable',\n        defaultClassNameDragging: 'react-draggable-dragging',\n        defaultClassNameDragged: 'react-draggable-dragged',\n        defaultPosition: {\n          x: 0,\n          y: 0\n        },\n        position: null\n      });\n      exports.default = Draggable;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       */\n\n      var emptyFunction = __webpack_require__(1);\n\n      var invariant = __webpack_require__(2);\n\n      var warning = __webpack_require__(8);\n\n      var assign = __webpack_require__(15);\n\n      var ReactPropTypesSecret = __webpack_require__(3);\n\n      var checkPropTypes = __webpack_require__(16);\n\n      module.exports = function (isValidElement, throwOnDirectAccess) {\n        /* global Symbol */\n        var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n        /**\n         * Returns the iterator method function contained on the iterable object.\n         *\n         * Be sure to invoke the function with the iterable as context:\n         *\n         *     var iteratorFn = getIteratorFn(myIterable);\n         *     if (iteratorFn) {\n         *       var iterator = iteratorFn.call(myIterable);\n         *       ...\n         *     }\n         *\n         * @param {?object} maybeIterable\n         * @return {?function}\n         */\n\n        function getIteratorFn(maybeIterable) {\n          var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n          if (typeof iteratorFn === 'function') {\n            return iteratorFn;\n          }\n        }\n        /**\n         * Collection of methods that allow declaration and validation of props that are\n         * supplied to React components. Example usage:\n         *\n         *   var Props = require('ReactPropTypes');\n         *   var MyArticle = React.createClass({\n         *     propTypes: {\n         *       // An optional string prop named \"description\".\n         *       description: Props.string,\n         *\n         *       // A required enum prop named \"category\".\n         *       category: Props.oneOf(['News','Photos']).isRequired,\n         *\n         *       // A prop named \"dialog\" that requires an instance of Dialog.\n         *       dialog: Props.instanceOf(Dialog).isRequired\n         *     },\n         *     render: function() { ... }\n         *   });\n         *\n         * A more formal specification of how these methods are used:\n         *\n         *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n         *   decl := ReactPropTypes.{type}(.isRequired)?\n         *\n         * Each and every declaration produces a function with the same signature. This\n         * allows the creation of custom validation functions. For example:\n         *\n         *  var MyLink = React.createClass({\n         *    propTypes: {\n         *      // An optional string or URI prop named \"href\".\n         *      href: function(props, propName, componentName) {\n         *        var propValue = props[propName];\n         *        if (propValue != null && typeof propValue !== 'string' &&\n         *            !(propValue instanceof URI)) {\n         *          return new Error(\n         *            'Expected a string or an URI for ' + propName + ' in ' +\n         *            componentName\n         *          );\n         *        }\n         *      }\n         *    },\n         *    render: function() {...}\n         *  });\n         *\n         * @internal\n         */\n\n\n        var ANONYMOUS = '<<anonymous>>'; // Important!\n        // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n        var ReactPropTypes = {\n          array: createPrimitiveTypeChecker('array'),\n          bool: createPrimitiveTypeChecker('boolean'),\n          func: createPrimitiveTypeChecker('function'),\n          number: createPrimitiveTypeChecker('number'),\n          object: createPrimitiveTypeChecker('object'),\n          string: createPrimitiveTypeChecker('string'),\n          symbol: createPrimitiveTypeChecker('symbol'),\n          any: createAnyTypeChecker(),\n          arrayOf: createArrayOfTypeChecker,\n          element: createElementTypeChecker(),\n          instanceOf: createInstanceTypeChecker,\n          node: createNodeChecker(),\n          objectOf: createObjectOfTypeChecker,\n          oneOf: createEnumTypeChecker,\n          oneOfType: createUnionTypeChecker,\n          shape: createShapeTypeChecker,\n          exact: createStrictShapeTypeChecker\n        };\n        /**\n         * inlined Object.is polyfill to avoid requiring consumers ship their own\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n         */\n\n        /*eslint-disable no-self-compare*/\n\n        function is(x, y) {\n          // SameValue algorithm\n          if (x === y) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return x !== 0 || 1 / x === 1 / y;\n          } else {\n            // Step 6.a: NaN == NaN\n            return x !== x && y !== y;\n          }\n        }\n        /*eslint-enable no-self-compare*/\n\n        /**\n         * We use an Error-like object for backward compatibility as people may call\n         * PropTypes directly and inspect their output. However, we don't use real\n         * Errors anymore. We don't inspect their stack anyway, and creating them\n         * is prohibitively expensive if they are created too often, such as what\n         * happens in oneOfType() for any type before the one that matched.\n         */\n\n\n        function PropTypeError(message) {\n          this.message = message;\n          this.stack = '';\n        } // Make `instanceof Error` still work for returned errors.\n\n\n        PropTypeError.prototype = Error.prototype;\n\n        function createChainableTypeChecker(validate) {\n          if (Object({\n            \"DRAGGABLE_DEBUG\": undefined\n          }).NODE_ENV !== 'production') {\n            var manualPropTypeCallCache = {};\n            var manualPropTypeWarningCount = 0;\n          }\n\n          function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n            componentName = componentName || ANONYMOUS;\n            propFullName = propFullName || propName;\n\n            if (secret !== ReactPropTypesSecret) {\n              if (throwOnDirectAccess) {\n                // New behavior only for users of `prop-types` package\n                invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n              } else if (Object({\n                \"DRAGGABLE_DEBUG\": undefined\n              }).NODE_ENV !== 'production' && typeof console !== 'undefined') {\n                // Old behavior for people using React.PropTypes\n                var cacheKey = componentName + ':' + propName;\n\n                if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n                manualPropTypeWarningCount < 3) {\n                  warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);\n                  manualPropTypeCallCache[cacheKey] = true;\n                  manualPropTypeWarningCount++;\n                }\n              }\n            }\n\n            if (props[propName] == null) {\n              if (isRequired) {\n                if (props[propName] === null) {\n                  return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n                }\n\n                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n              }\n\n              return null;\n            } else {\n              return validate(props, propName, componentName, location, propFullName);\n            }\n          }\n\n          var chainedCheckType = checkType.bind(null, false);\n          chainedCheckType.isRequired = checkType.bind(null, true);\n          return chainedCheckType;\n        }\n\n        function createPrimitiveTypeChecker(expectedType) {\n          function validate(props, propName, componentName, location, propFullName, secret) {\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n\n            if (propType !== expectedType) {\n              // `propValue` being instance of, say, date/regexp, pass the 'object'\n              // check, but we can offer a more precise error message here rather than\n              // 'of type `object`'.\n              var preciseType = getPreciseType(propValue);\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createAnyTypeChecker() {\n          return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n        }\n\n        function createArrayOfTypeChecker(typeChecker) {\n          function validate(props, propName, componentName, location, propFullName) {\n            if (typeof typeChecker !== 'function') {\n              return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n            }\n\n            var propValue = props[propName];\n\n            if (!Array.isArray(propValue)) {\n              var propType = getPropType(propValue);\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n            }\n\n            for (var i = 0; i < propValue.length; i++) {\n              var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\n              if (error instanceof Error) {\n                return error;\n              }\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createElementTypeChecker() {\n          function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n\n            if (!isValidElement(propValue)) {\n              var propType = getPropType(propValue);\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createInstanceTypeChecker(expectedClass) {\n          function validate(props, propName, componentName, location, propFullName) {\n            if (!(props[propName] instanceof expectedClass)) {\n              var expectedClassName = expectedClass.name || ANONYMOUS;\n              var actualClassName = getClassName(props[propName]);\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createEnumTypeChecker(expectedValues) {\n          if (!Array.isArray(expectedValues)) {\n            Object({\n              \"DRAGGABLE_DEBUG\": undefined\n            }).NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n            return emptyFunction.thatReturnsNull;\n          }\n\n          function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n\n            for (var i = 0; i < expectedValues.length; i++) {\n              if (is(propValue, expectedValues[i])) {\n                return null;\n              }\n            }\n\n            var valuesString = JSON.stringify(expectedValues);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createObjectOfTypeChecker(typeChecker) {\n          function validate(props, propName, componentName, location, propFullName) {\n            if (typeof typeChecker !== 'function') {\n              return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n            }\n\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n\n            if (propType !== 'object') {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n            }\n\n            for (var key in propValue) {\n              if (propValue.hasOwnProperty(key)) {\n                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n                if (error instanceof Error) {\n                  return error;\n                }\n              }\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createUnionTypeChecker(arrayOfTypeCheckers) {\n          if (!Array.isArray(arrayOfTypeCheckers)) {\n            Object({\n              \"DRAGGABLE_DEBUG\": undefined\n            }).NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n            return emptyFunction.thatReturnsNull;\n          }\n\n          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n            var checker = arrayOfTypeCheckers[i];\n\n            if (typeof checker !== 'function') {\n              warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);\n              return emptyFunction.thatReturnsNull;\n            }\n          }\n\n          function validate(props, propName, componentName, location, propFullName) {\n            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n              var checker = arrayOfTypeCheckers[i];\n\n              if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n                return null;\n              }\n            }\n\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createNodeChecker() {\n          function validate(props, propName, componentName, location, propFullName) {\n            if (!isNode(props[propName])) {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createShapeTypeChecker(shapeTypes) {\n          function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n\n            if (propType !== 'object') {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n            }\n\n            for (var key in shapeTypes) {\n              var checker = shapeTypes[key];\n\n              if (!checker) {\n                continue;\n              }\n\n              var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n              if (error) {\n                return error;\n              }\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createStrictShapeTypeChecker(shapeTypes) {\n          function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n\n            if (propType !== 'object') {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n            } // We need to check all keys in case some are required but missing from\n            // props.\n\n\n            var allKeys = assign({}, props[propName], shapeTypes);\n\n            for (var key in allKeys) {\n              var checker = shapeTypes[key];\n\n              if (!checker) {\n                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n              }\n\n              var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n              if (error) {\n                return error;\n              }\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function isNode(propValue) {\n          switch (_typeof(propValue)) {\n            case 'number':\n            case 'string':\n            case 'undefined':\n              return true;\n\n            case 'boolean':\n              return !propValue;\n\n            case 'object':\n              if (Array.isArray(propValue)) {\n                return propValue.every(isNode);\n              }\n\n              if (propValue === null || isValidElement(propValue)) {\n                return true;\n              }\n\n              var iteratorFn = getIteratorFn(propValue);\n\n              if (iteratorFn) {\n                var iterator = iteratorFn.call(propValue);\n                var step;\n\n                if (iteratorFn !== propValue.entries) {\n                  while (!(step = iterator.next()).done) {\n                    if (!isNode(step.value)) {\n                      return false;\n                    }\n                  }\n                } else {\n                  // Iterator will provide entry [k,v] tuples rather than values.\n                  while (!(step = iterator.next()).done) {\n                    var entry = step.value;\n\n                    if (entry) {\n                      if (!isNode(entry[1])) {\n                        return false;\n                      }\n                    }\n                  }\n                }\n              } else {\n                return false;\n              }\n\n              return true;\n\n            default:\n              return false;\n          }\n        }\n\n        function isSymbol(propType, propValue) {\n          // Native Symbol.\n          if (propType === 'symbol') {\n            return true;\n          } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n          if (propValue['@@toStringTag'] === 'Symbol') {\n            return true;\n          } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n          if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n            return true;\n          }\n\n          return false;\n        } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n        function getPropType(propValue) {\n          var propType = _typeof(propValue);\n\n          if (Array.isArray(propValue)) {\n            return 'array';\n          }\n\n          if (propValue instanceof RegExp) {\n            // Old webkits (at least until Android 4.0) return 'function' rather than\n            // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n            // passes PropTypes.object.\n            return 'object';\n          }\n\n          if (isSymbol(propType, propValue)) {\n            return 'symbol';\n          }\n\n          return propType;\n        } // This handles more types than `getPropType`. Only used for error messages.\n        // See `createPrimitiveTypeChecker`.\n\n\n        function getPreciseType(propValue) {\n          if (typeof propValue === 'undefined' || propValue === null) {\n            return '' + propValue;\n          }\n\n          var propType = getPropType(propValue);\n\n          if (propType === 'object') {\n            if (propValue instanceof Date) {\n              return 'date';\n            } else if (propValue instanceof RegExp) {\n              return 'regexp';\n            }\n          }\n\n          return propType;\n        } // Returns a string that is postfixed to a warning about an invalid type.\n        // For example, \"undefined\" or \"of type array\"\n\n\n        function getPostfixForTypeWarning(value) {\n          var type = getPreciseType(value);\n\n          switch (type) {\n            case 'array':\n            case 'object':\n              return 'an ' + type;\n\n            case 'boolean':\n            case 'date':\n            case 'regexp':\n              return 'a ' + type;\n\n            default:\n              return type;\n          }\n        } // Returns class name of the object, if any.\n\n\n        function getClassName(propValue) {\n          if (!propValue.constructor || !propValue.constructor.name) {\n            return ANONYMOUS;\n          }\n\n          return propValue.constructor.name;\n        }\n\n        ReactPropTypes.checkPropTypes = checkPropTypes;\n        ReactPropTypes.PropTypes = ReactPropTypes;\n        return ReactPropTypes;\n      };\n      /***/\n\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /*\n      object-assign\n      (c) Sindre Sorhus\n      @license MIT\n      */\n\n      /* eslint-disable no-unused-vars */\n\n      var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n      var hasOwnProperty = Object.prototype.hasOwnProperty;\n      var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n      function toObject(val) {\n        if (val === null || val === undefined) {\n          throw new TypeError('Object.assign cannot be called with null or undefined');\n        }\n\n        return Object(val);\n      }\n\n      function shouldUseNative() {\n        try {\n          if (!Object.assign) {\n            return false;\n          } // Detect buggy property enumeration order in older V8 versions.\n          // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n          var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n          test1[5] = 'de';\n\n          if (Object.getOwnPropertyNames(test1)[0] === '5') {\n            return false;\n          } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n          var test2 = {};\n\n          for (var i = 0; i < 10; i++) {\n            test2['_' + String.fromCharCode(i)] = i;\n          }\n\n          var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n            return test2[n];\n          });\n\n          if (order2.join('') !== '0123456789') {\n            return false;\n          } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n          var test3 = {};\n          'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n            test3[letter] = letter;\n          });\n\n          if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n            return false;\n          }\n\n          return true;\n        } catch (err) {\n          // We don't expect any of the above to throw, but better to be safe.\n          return false;\n        }\n      }\n\n      module.exports = shouldUseNative() ? Object.assign : function (target, source) {\n        var from;\n        var to = toObject(target);\n        var symbols;\n\n        for (var s = 1; s < arguments.length; s++) {\n          from = Object(arguments[s]);\n\n          for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n              to[key] = from[key];\n            }\n          }\n\n          if (getOwnPropertySymbols) {\n            symbols = getOwnPropertySymbols(from);\n\n            for (var i = 0; i < symbols.length; i++) {\n              if (propIsEnumerable.call(from, symbols[i])) {\n                to[symbols[i]] = from[symbols[i]];\n              }\n            }\n          }\n        }\n\n        return to;\n      };\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       */\n\n      if (Object({\n        \"DRAGGABLE_DEBUG\": undefined\n      }).NODE_ENV !== 'production') {\n        var invariant = __webpack_require__(2);\n\n        var warning = __webpack_require__(8);\n\n        var ReactPropTypesSecret = __webpack_require__(3);\n\n        var loggedTypeFailures = {};\n      }\n      /**\n       * Assert that the values match with the type specs.\n       * Error messages are memorized and will only be shown once.\n       *\n       * @param {object} typeSpecs Map of name to a ReactPropType\n       * @param {object} values Runtime values that need to be type-checked\n       * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n       * @param {string} componentName Name of the component for error messages.\n       * @param {?Function} getStack Returns the component stack.\n       * @private\n       */\n\n\n      function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n        if (Object({\n          \"DRAGGABLE_DEBUG\": undefined\n        }).NODE_ENV !== 'production') {\n          for (var typeSpecName in typeSpecs) {\n            if (typeSpecs.hasOwnProperty(typeSpecName)) {\n              var error; // Prop type validation may throw. In case they do, we don't want to\n              // fail the render phase where it didn't fail before. So we log it.\n              // After these have been cleaned up, we'll let them throw.\n\n              try {\n                // This is intentionally an invariant that gets caught. It's the same\n                // behavior as without this statement except with a better message.\n                invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, _typeof(typeSpecs[typeSpecName]));\n                error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n              } catch (ex) {\n                error = ex;\n              }\n\n              warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, _typeof(error));\n\n              if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n                // Only monitor this failure once because there tends to be a lot of the\n                // same error.\n                loggedTypeFailures[error.message] = true;\n                var stack = getStack ? getStack() : '';\n                warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n              }\n            }\n          }\n        }\n      }\n\n      module.exports = checkPropTypes;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       */\n\n      var emptyFunction = __webpack_require__(1);\n\n      var invariant = __webpack_require__(2);\n\n      var ReactPropTypesSecret = __webpack_require__(3);\n\n      module.exports = function () {\n        function shim(props, propName, componentName, location, propFullName, secret) {\n          if (secret === ReactPropTypesSecret) {\n            // It is still safe when called from React.\n            return;\n          }\n\n          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n        }\n\n        ;\n        shim.isRequired = shim;\n\n        function getShim() {\n          return shim;\n        }\n\n        ; // Important!\n        // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n        var ReactPropTypes = {\n          array: shim,\n          bool: shim,\n          func: shim,\n          number: shim,\n          object: shim,\n          string: shim,\n          symbol: shim,\n          any: shim,\n          arrayOf: getShim,\n          element: shim,\n          instanceOf: getShim,\n          node: shim,\n          objectOf: getShim,\n          oneOf: getShim,\n          oneOfType: getShim,\n          shape: getShim,\n          exact: getShim\n        };\n        ReactPropTypes.checkPropTypes = emptyFunction;\n        ReactPropTypes.PropTypes = ReactPropTypes;\n        return ReactPropTypes;\n      };\n      /***/\n\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n      /*!\n      Copyright (c) 2016 Jed Watson.\n      Licensed under the MIT License (MIT), see\n      http://jedwatson.github.io/classnames\n      */\n\n      /* global define */\n\n\n      (function () {\n        'use strict';\n\n        var hasOwn = {}.hasOwnProperty;\n\n        function classNames() {\n          var classes = [];\n\n          for (var i = 0; i < arguments.length; i++) {\n            var arg = arguments[i];\n            if (!arg) continue;\n\n            var argType = _typeof(arg);\n\n            if (argType === 'string' || argType === 'number') {\n              classes.push(arg);\n            } else if (Array.isArray(arg)) {\n              classes.push(classNames.apply(null, arg));\n            } else if (argType === 'object') {\n              for (var key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                  classes.push(key);\n                }\n              }\n            }\n          }\n\n          return classes.join(' ');\n        }\n\n        if (typeof module !== 'undefined' && module.exports) {\n          module.exports = classNames;\n        } else if (true) {\n          // register as 'classnames', consistent with npm package name\n          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return classNames;\n          }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else {\n          window.classNames = classNames;\n        }\n      })();\n      /***/\n\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getPrefix = getPrefix;\n      exports.browserPrefixToKey = browserPrefixToKey;\n      exports.browserPrefixToStyle = browserPrefixToStyle;\n      var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\n      function getPrefix()\n      /*: string*/\n      {\n        var prop\n        /*: string*/\n        = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform'; // Checking specifically for 'window.document' is for pseudo-browser server-side\n        // environments that define 'window' as the global context.\n        // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n\n        if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n        var style = window.document.documentElement.style;\n        if (prop in style) return '';\n\n        for (var i = 0; i < prefixes.length; i++) {\n          if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n        }\n\n        return '';\n      }\n\n      function browserPrefixToKey(prop\n      /*: string*/\n      , prefix\n      /*: string*/\n      )\n      /*: string*/\n      {\n        return prefix ? '' + prefix + kebabToTitleCase(prop) : prop;\n      }\n\n      function browserPrefixToStyle(prop\n      /*: string*/\n      , prefix\n      /*: string*/\n      )\n      /*: string*/\n      {\n        return prefix ? '-' + prefix.toLowerCase() + '-' + prop : prop;\n      }\n\n      function kebabToTitleCase(str\n      /*: string*/\n      )\n      /*: string*/\n      {\n        var out = '';\n        var shouldCapitalize = true;\n\n        for (var i = 0; i < str.length; i++) {\n          if (shouldCapitalize) {\n            out += str[i].toUpperCase();\n            shouldCapitalize = false;\n          } else if (str[i] === '-') {\n            shouldCapitalize = true;\n          } else {\n            out += str[i];\n          }\n        }\n\n        return out;\n      } // Default export is the prefix itself, like 'Moz', 'Webkit', etc\n      // Note that you may have to re-test for certain things; for instance, Chrome 50\n      // can handle unprefixed `transform`, but not unprefixed `user-select`\n\n\n      exports.default = getPrefix();\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports) {\n      // shim for using process in browser\n      var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n      // don't break things.  But we need to wrap it in a try catch in case it is\n      // wrapped in strict mode code which doesn't define any globals.  It's inside a\n      // function because try/catches deoptimize in certain engines.\n\n      var cachedSetTimeout;\n      var cachedClearTimeout;\n\n      function defaultSetTimout() {\n        throw new Error('setTimeout has not been defined');\n      }\n\n      function defaultClearTimeout() {\n        throw new Error('clearTimeout has not been defined');\n      }\n\n      (function () {\n        try {\n          if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n          } else {\n            cachedSetTimeout = defaultSetTimout;\n          }\n        } catch (e) {\n          cachedSetTimeout = defaultSetTimout;\n        }\n\n        try {\n          if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n          } else {\n            cachedClearTimeout = defaultClearTimeout;\n          }\n        } catch (e) {\n          cachedClearTimeout = defaultClearTimeout;\n        }\n      })();\n\n      function runTimeout(fun) {\n        if (cachedSetTimeout === setTimeout) {\n          //normal enviroments in sane situations\n          return setTimeout(fun, 0);\n        } // if setTimeout wasn't available but was latter defined\n\n\n        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n          cachedSetTimeout = setTimeout;\n          return setTimeout(fun, 0);\n        }\n\n        try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedSetTimeout(fun, 0);\n        } catch (e) {\n          try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n          } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n          }\n        }\n      }\n\n      function runClearTimeout(marker) {\n        if (cachedClearTimeout === clearTimeout) {\n          //normal enviroments in sane situations\n          return clearTimeout(marker);\n        } // if clearTimeout wasn't available but was latter defined\n\n\n        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n          cachedClearTimeout = clearTimeout;\n          return clearTimeout(marker);\n        }\n\n        try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedClearTimeout(marker);\n        } catch (e) {\n          try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n          } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n          }\n        }\n      }\n\n      var queue = [];\n      var draining = false;\n      var currentQueue;\n      var queueIndex = -1;\n\n      function cleanUpNextTick() {\n        if (!draining || !currentQueue) {\n          return;\n        }\n\n        draining = false;\n\n        if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n        } else {\n          queueIndex = -1;\n        }\n\n        if (queue.length) {\n          drainQueue();\n        }\n      }\n\n      function drainQueue() {\n        if (draining) {\n          return;\n        }\n\n        var timeout = runTimeout(cleanUpNextTick);\n        draining = true;\n        var len = queue.length;\n\n        while (len) {\n          currentQueue = queue;\n          queue = [];\n\n          while (++queueIndex < len) {\n            if (currentQueue) {\n              currentQueue[queueIndex].run();\n            }\n          }\n\n          queueIndex = -1;\n          len = queue.length;\n        }\n\n        currentQueue = null;\n        draining = false;\n        runClearTimeout(timeout);\n      }\n\n      process.nextTick = function (fun) {\n        var args = new Array(arguments.length - 1);\n\n        if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n          }\n        }\n\n        queue.push(new Item(fun, args));\n\n        if (queue.length === 1 && !draining) {\n          runTimeout(drainQueue);\n        }\n      }; // v8 likes predictible objects\n\n\n      function Item(fun, array) {\n        this.fun = fun;\n        this.array = array;\n      }\n\n      Item.prototype.run = function () {\n        this.fun.apply(null, this.array);\n      };\n\n      process.title = 'browser';\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n      process.version = ''; // empty string to avoid regexp issues\n\n      process.versions = {};\n\n      function noop() {}\n\n      process.on = noop;\n      process.addListener = noop;\n      process.once = noop;\n      process.off = noop;\n      process.removeListener = noop;\n      process.removeAllListeners = noop;\n      process.emit = noop;\n      process.prependListener = noop;\n      process.prependOnceListener = noop;\n\n      process.listeners = function (name) {\n        return [];\n      };\n\n      process.binding = function (name) {\n        throw new Error('process.binding is not supported');\n      };\n\n      process.cwd = function () {\n        return '/';\n      };\n\n      process.chdir = function (dir) {\n        throw new Error('process.chdir is not supported');\n      };\n\n      process.umask = function () {\n        return 0;\n      };\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});","map":null,"metadata":{},"sourceType":"script"}