{"ast":null,"code":"var DESCRIPTORS = require('../internals/descriptors');\n\nvar UNSUPPORTED_Y = require('../internals/regexp-sticky-helpers').UNSUPPORTED_Y;\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar getInternalState = require('../internals/internal-state').get;\n\nvar RegExpPrototype = RegExp.prototype; // `RegExp.prototype.sticky` getter\n\nif (DESCRIPTORS && UNSUPPORTED_Y) {\n  defineProperty(RegExp.prototype, 'sticky', {\n    configurable: true,\n    get: function get() {\n      if (this === RegExpPrototype) return undefined; // We can't use InternalStateModule.getterFor because\n      // we don't add metadata for regexps created by a literal.\n\n      if (this instanceof RegExp) {\n        return !!getInternalState(this).sticky;\n      }\n\n      throw TypeError('Incompatible receiver, RegExp required');\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}