{"ast":null,"code":"var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\n!function (e, t) {\n  if (\"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"object\" == (typeof module === \"undefined\" ? \"undefined\" : _typeof(module))) module.exports = t(require(\"phylocanvas\"));else if (\"function\" == typeof define && define.amd) define([\"phylocanvas\"], t);else {\n    var r = t(\"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) ? require(\"phylocanvas\") : e.phylocanvas);\n\n    for (var i in r) {\n      (\"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) ? exports : e)[i] = r[i];\n    }\n  }\n}(this, function (e) {\n  return function (e) {\n    function t(i) {\n      if (r[i]) return r[i].exports;\n      var o = r[i] = {\n        exports: {},\n        id: i,\n        loaded: !1\n      };\n      return e[i].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;\n    }\n\n    var r = {};\n    return t.m = e, t.c = r, t.p = \"\", t(0);\n  }([function (e, t, r) {\n    \"use strict\";\n\n    function i(e) {\n      if (Array.isArray(e)) {\n        for (var t = 0, r = Array(e.length); t < e.length; t++) {\n          r[t] = e[t];\n        }\n\n        return r;\n      }\n\n      return Array.from(e);\n    }\n\n    function o() {\n      var e = this.scalebar,\n          t = this.zoom,\n          r = this.branchScalar,\n          i = e.width,\n          o = e.height,\n          n = e.position,\n          a = e.lineWidth,\n          l = this.canvas,\n          s = l.canvas;\n      l.save();\n      var p = 0;\n      \"undefined\" != typeof n.left ? p = e.lineWidth + n.left : \"undefined\" != typeof n.centre ? p = s.width / 2 - i / 2 + n.centre : \"undefined\" != typeof n.right ? p = s.width - i - e.lineWidth - n.right : this.loadError(f);\n      var u = 0;\n      \"undefined\" != typeof n.top ? u = n.top : \"undefined\" != typeof n.middle ? u = s.height / 2 - o + n.middle : \"undefined\" != typeof n.bottom ? u = s.height - o - n.bottom : this.loadError(d), l.clearRect(p, u, i, o), l.font = e.font, l.fillStyle = e.fillStyle, l.strokeStyle = e.strokeStyle, l.lineWidth = a, l.textBaseline = e.textBaseline, l.textAlign = e.textAlign, l.beginPath(), l.moveTo(p, u), l.lineTo(p + i, u), l.stroke(), l.moveTo(p, u), l.lineTo(p, u + o), l.stroke(), l.moveTo(p + i, u), l.lineTo(p + i, u + o), l.stroke(), l.closePath();\n      var h = i / r / t,\n          y = parseInt(Math.abs(Math.log(h) / c), 10),\n          v = h.toFixed(y + e.digits);\n      l.fillText(v, p + i / 2, u + o), l.restore();\n    }\n\n    function n(e) {\n      e(this, \"createTree\", function (e, t) {\n        var r = e.apply(void 0, i(t)),\n            o = a(t, 2),\n            n = o[1],\n            l = void 0 === n ? {} : n;\n        return r.scalebar = Object.assign({}, s, l.scalebar || {}), r;\n      }), e(l.Tree, \"draw\", function (e, t) {\n        e.apply(this, t), this.scalebar.active && o.apply(this);\n      });\n    }\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var a = function () {\n      function e(e, t) {\n        var r = [],\n            i = !0,\n            o = !1,\n            n = void 0;\n\n        try {\n          for (var a, l = e[Symbol.iterator](); !(i = (a = l.next()).done) && (r.push(a.value), !t || r.length !== t); i = !0) {\n            ;\n          }\n        } catch (s) {\n          o = !0, n = s;\n        } finally {\n          try {\n            !i && l[\"return\"] && l[\"return\"]();\n          } finally {\n            if (o) throw n;\n          }\n        }\n\n        return r;\n      }\n\n      return function (t, r) {\n        if (Array.isArray(t)) return t;\n        if (Symbol.iterator in Object(t)) return e(t, r);\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      };\n    }();\n\n    t[\"default\"] = n;\n    var l = r(1),\n        s = {\n      active: !0,\n      width: 100,\n      height: 20,\n      fillStyle: \"black\",\n      strokeStyle: \"black\",\n      lineWidth: 1,\n      font: \"16px Sans-serif\",\n      textBaseline: \"bottom\",\n      textAlign: \"center\",\n      digits: 2,\n      position: {\n        bottom: 10,\n        left: 10\n      }\n    },\n        f = \"Invalid horizontal position specifiedSupported values are `left`, `centre`, or `right`\",\n        d = \"Invalid vertical position specifiedSupported values are `top`, `middle`, or `bottom`\",\n        c = Math.log(10);\n  }, function (t, r) {\n    t.exports = e;\n  }]);\n});","map":null,"metadata":{},"sourceType":"script"}