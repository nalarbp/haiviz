{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_ColorScale/chart_ColorScale.js\";\n\n/* ============================================================================\nprops.loadTreeData(colorscale);//\n============================================================================ */\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { select } from \"d3-selection\";\nimport { ascending } from \"d3-array\";\nimport \"./style_ColorScale.css\";\nimport { Modal, Empty } from \"antd\";\nimport { scaleBand } from \"d3-scale\";\nimport { getColorScale, downloadSVG } from \"../utils/utils\";\nimport { ChromePicker } from \"react-color\";\nimport usePrevious from \"../react_hooks/usePrevious-hook\";\n\nvar _ = require(\"lodash\");\n\nvar ColorScaleChart = function ColorScaleChart(props) {\n  //INTERNAL STATES\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayColorPicker = _useState2[0],\n      setdisplayColorPicker = _useState2[1];\n\n  var _useState3 = useState({\n    name: null,\n    color: \"#ccc\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedColorPicker = _useState4[0],\n      setselectedColorPicker = _useState4[1]; // this constructror will be recalled when props from parent change, so just put it here\n\n\n  var colorscaleSVGRef = useRef();\n  var colorscaleContainerRef = useRef();\n  var svg = select(colorscaleSVGRef.current);\n  var observedWidth = props.width - 10;\n  var observedHeight = props.height - 80;\n  var margin = {\n    top: 20,\n    right: 20,\n    bottom: 20,\n    left: 20\n  };\n  var container_w = observedWidth;\n  var container_h = observedHeight;\n  var colorscale_width = container_w - margin.left - margin.right;\n  var colorscale_height = container_h - margin.top - margin.bottom - 10;\n  var prevDimension = usePrevious(observedWidth + observedHeight);\n  var isInitialDraw = prevDimension && prevDimension < 0 ? true : false; //SETTINGS\n\n  var isUserStartResize = props.colorscaleSettings.isUserStartResize;\n  var isDownloading = props.colorscaleSettings.isDownloading; //USE-EFFECTS\n\n  useEffect(function () {\n    if (isUserStartResize) {\n      select(\"#colorCont\").remove();\n      select(\"#colorscale-svg\").style(\"display\", \"none\");\n      select(\"#colorscale-buttons-container\").style(\"display\", \"none\");\n      select(\"#colorscale-no-drawing\").style(\"display\", \"block\");\n    } else {\n      if (isInitialDraw) {\n        draw();\n      } else {\n        if (props.isUserRedraw) {\n          draw();\n        }\n      }\n    } // if (\n    //   observedWidth &&\n    //   observedHeight &&\n    //   !isUserStartResize &&\n    //   !props.isUserRedraw\n    // ) {\n    //   //when initial draw\n    //   console.log(\"init\");\n    //   draw();\n    // } else if (\n    //   observedWidth &&\n    //   observedHeight &&\n    //   !isUserStartResize &&\n    //   props.isUserRedraw\n    // ) {\n    //   //when user click redraw\n    //   console.log(\"re-draw\");\n    //   draw();\n    //   // reset currentEvent.zoom transform\n    // } else {\n    //   //console.log(\"hide and remove\");\n    // }\n\n  }, [isInitialDraw, isUserStartResize, props.isUserRedraw]);\n  useEffect(function () {\n    if (props.colorScale.colorType) {\n      draw();\n    }\n  }, [props.colorScale]);\n  useEffect(function () {\n    if (selectedColorPicker) {\n      //based on active colorScale.colorType we want to change colorScale so we need a swicth\n      changeColorScaleState(selectedColorPicker, props.colorScale);\n    }\n  }, [selectedColorPicker]);\n  useEffect(function () {\n    if (isDownloading) {\n      //create temp svg\n      var currentColorScale = getColorScale(props.colorScale);\n      var colorData = Array.from(currentColorScale.entries()).filter(function (d) {\n        return d[0] !== null;\n      });\n      var colorObj = colorData.map(function (d) {\n        return {\n          name: d[0],\n          color: d[1]\n        };\n      }).sort(function (x, y) {\n        return ascending(x.name, y.name);\n      });\n      var colorList = colorObj.map(function (d) {\n        return d.name;\n      });\n      var temp_svg_h = colorList.length * 20;\n      var temp_colorCont = svg.append(\"div\").attr(\"id\", \"temp_colorCont\").style(\"display\", \"none\");\n      var temp_colorSVG = temp_colorCont.append(\"svg\").attr(\"id\", \"color-scale-svg\").attr(\"width\", colorscale_width).attr(\"height\", temp_svg_h);\n      var scale_y = scaleBand().domain(colorList).range([0, temp_svg_h]).paddingInner(0.1).paddingOuter(0.1); //col rect\n\n      temp_colorSVG.selectAll(\".tempColScale-rect\").data(colorObj).enter().append(\"rect\").attr(\"class\", \"tempColScale-rect\").attr(\"stroke\", \"white\").attr(\"stroke-width\", \"0.5px\").attr(\"fill\", function (d) {\n        return d.color;\n      }).attr(\"x\", 0).attr(\"y\", function (d) {\n        return scale_y(d.name);\n      }).attr(\"width\", 20).attr(\"height\", 20);\n      temp_colorSVG.selectAll(\".tempColScale-text\").data(colorObj).enter().append(\"text\").attr(\"class\", \"tempColScale-text\").attr(\"text-anchor\", \"start\").attr(\"x\", 25).attr(\"y\", function (d) {\n        return scale_y(d.name) + 12;\n      }).attr(\"fill\", \"black\").text(function (d) {\n        return d.name;\n      }).style(\"font-size\", \"12px\");\n      downloadSVG(\"color-scale-svg\");\n      select(\"#temp_colorCont\").remove();\n      props.changeIsColorScaleDownloading(false);\n    }\n  }, [isDownloading]); //DRAWING\n\n  function draw() {\n    //console.log(\"drawing-colorKey\");\n    //clean previous drawing artifacts\n    select(\"#colorscale-no-drawing\").style(\"display\", \"none\");\n    select(\"#colorscale-buttons-container\").style(\"display\", \"block\"); //select(\"#colorscale_svgGroup\").remove();\n\n    select(\"#colorCont\").remove();\n    select(\"#colorscale-svg\").style(\"display\", \"block\");\n    svg.style(\"height\", colorscale_height + margin.top + margin.bottom + \"px\");\n    var currentColorScale = getColorScale(props.colorScale);\n    var colorData = Array.from(currentColorScale.entries()).filter(function (d) {\n      return d[0] !== null;\n    });\n    var colorObj = colorData.map(function (d) {\n      return {\n        name: d[0],\n        color: d[1]\n      };\n    }).sort(function (x, y) {\n      return ascending(x.name, y.name);\n    });\n    var colorCont = svg.append(\"div\").attr(\"id\", \"colorCont\");\n    var colorList = colorCont.selectAll(\".colColumn\").data(colorObj).enter().append(\"div\").attr(\"class\", \"colColumn\").style(\"width\", colorscale_width + margin.left + \"px\").style(\"height\", \"22px\").style(\"margin\", \"1px auto\").style(\"overflowX\", \"auto\"); //add color rectangle\n\n    colorList.append(\"div\").style(\"width\", \"20px\").style(\"height\", \"20px\").style(\"display\", \"inline-block\").style(\"float\", \"left\").style(\"margin-right\", \"3px\").append(\"svg\").attr(\"class\", \"colorRect\").attr(\"width\", \"20px\").attr(\"height\", \"20px\").append(\"rect\").attr(\"width\", \"20px\").attr(\"height\", \"20px\").attr(\"fill\", function (d) {\n      return d.color;\n    }).style(\"cursor\", \"pointer\").on(\"click\", function (d) {\n      setselectedColorPicker(d);\n      setdisplayColorPicker(true);\n    }); //add color text\n\n    colorList.append(\"div\").style(\"height\", \"20px\").style(\"float\", \"left\").style(\"display\", \"inline-block\").append(\"p\").text(function (d) {\n      return d.name;\n    }).style(\"font-size\", \"12px\");\n  } //FUNCTIONS\n\n\n  function changeColorScaleState(pickedCol, scaleColor) {\n    switch (scaleColor.colorType) {\n      case \"species\":\n        var species_col = _.cloneDeep(scaleColor.bySpecies);\n\n        species_col.set(pickedCol.name, pickedCol.color);\n        props.setColorBySpecies(species_col);\n        break;\n\n      case \"location\":\n        var location_col = _.cloneDeep(scaleColor.byLocation);\n\n        location_col.set(pickedCol.name, pickedCol.color);\n        props.setColorByLocation(location_col);\n        break;\n\n      case \"sourceType\":\n        var sourceType_col = _.cloneDeep(scaleColor.bySourceType);\n\n        sourceType_col.set(pickedCol.name, pickedCol.color);\n        props.setColorBySourceType(sourceType_col);\n        break;\n\n      case \"profile1\":\n        var profile1_col = _.cloneDeep(scaleColor.byProfile1);\n\n        profile1_col.set(pickedCol.name, pickedCol.color);\n        props.setColorByProfile1(profile1_col);\n        break;\n\n      case \"profile2\":\n        var profile2_col = _.cloneDeep(scaleColor.byProfile2);\n\n        profile2_col.set(pickedCol.name, pickedCol.color);\n        props.setColorByProfile2(profile2_col);\n        break;\n\n      case \"profile3\":\n        var profile3_col = _.cloneDeep(scaleColor.byProfile3);\n\n        profile3_col.set(pickedCol.name, pickedCol.color);\n        props.setColorByProfile3(profile3_col);\n        break;\n\n      default:\n    }\n  } //HANDLERS\n\n\n  var closeColorPickerHandler = function closeColorPickerHandler() {\n    setdisplayColorPicker(false);\n  };\n\n  var setColorPickerHandler = function setColorPickerHandler(col) {\n    var newCol = _.cloneDeep(selectedColorPicker);\n\n    newCol.color = col.hex;\n    setselectedColorPicker(newCol);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"colorscaleContainer\",\n    ref: colorscaleContainerRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"colorscale-no-drawing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Empty, {\n    description: \"No chart: please click redraw button\",\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Color picker\",\n    visible: displayColorPicker,\n    onOk: closeColorPickerHandler,\n    onCancel: closeColorPickerHandler,\n    centered: true,\n    footer: null,\n    width: 280,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChromePicker, {\n    disableAlpha: true,\n    color: selectedColorPicker.color,\n    onChangeComplete: setColorPickerHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"colorscale-svg\",\n    ref: colorscaleSVGRef,\n    style: {\n      overflow: \"auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ColorScaleChart; //\n\n/*\n{displayColorPicker ? (\n  <div id=\"color-picker-container\">\n    <div id=\"color-picker-cover\" onClick={closeColorPickerHandler} />\n    <ChromePicker\n      disableAlpha={true}\n      color={selectedColorPicker.color}\n      onChangeComplete={setColorPickerHandler}\n    />\n  </div>\n) : null}\n*/","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_ColorScale/chart_ColorScale.js"],"names":["React","useEffect","useRef","useState","select","ascending","Modal","Empty","scaleBand","getColorScale","downloadSVG","ChromePicker","usePrevious","_","require","ColorScaleChart","props","displayColorPicker","setdisplayColorPicker","name","color","selectedColorPicker","setselectedColorPicker","colorscaleSVGRef","colorscaleContainerRef","svg","current","observedWidth","width","observedHeight","height","margin","top","right","bottom","left","container_w","container_h","colorscale_width","colorscale_height","prevDimension","isInitialDraw","isUserStartResize","colorscaleSettings","isDownloading","remove","style","draw","isUserRedraw","colorScale","colorType","changeColorScaleState","currentColorScale","colorData","Array","from","entries","filter","d","colorObj","map","sort","x","y","colorList","temp_svg_h","length","temp_colorCont","append","attr","temp_colorSVG","scale_y","domain","range","paddingInner","paddingOuter","selectAll","data","enter","text","changeIsColorScaleDownloading","colorCont","on","pickedCol","scaleColor","species_col","cloneDeep","bySpecies","set","setColorBySpecies","location_col","byLocation","setColorByLocation","sourceType_col","bySourceType","setColorBySourceType","profile1_col","byProfile1","setColorByProfile1","profile2_col","byProfile2","setColorByProfile2","profile3_col","byProfile3","setColorByProfile3","closeColorPickerHandler","setColorPickerHandler","col","newCol","hex","PRESENTED_IMAGE_SIMPLE","overflow"],"mappings":"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","sourcesContent":["/* ============================================================================\nprops.loadTreeData(colorscale);//\n============================================================================ */\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { select } from \"d3-selection\";\nimport { ascending } from \"d3-array\";\nimport \"./style_ColorScale.css\";\nimport { Modal, Empty } from \"antd\";\nimport { scaleBand } from \"d3-scale\";\nimport { getColorScale, downloadSVG } from \"../utils/utils\";\nimport { ChromePicker } from \"react-color\";\nimport usePrevious from \"../react_hooks/usePrevious-hook\";\n\nconst _ = require(\"lodash\");\n\nconst ColorScaleChart = (props) => {\n  //INTERNAL STATES\n  const [displayColorPicker, setdisplayColorPicker] = useState(false);\n  const [selectedColorPicker, setselectedColorPicker] = useState({\n    name: null,\n    color: \"#ccc\",\n  });\n\n  // this constructror will be recalled when props from parent change, so just put it here\n  const colorscaleSVGRef = useRef();\n  const colorscaleContainerRef = useRef();\n  const svg = select(colorscaleSVGRef.current);\n  const observedWidth = props.width - 10;\n  const observedHeight = props.height - 80;\n  const margin = { top: 20, right: 20, bottom: 20, left: 20 };\n  const container_w = observedWidth;\n  const container_h = observedHeight;\n  const colorscale_width = container_w - margin.left - margin.right;\n  const colorscale_height = container_h - margin.top - margin.bottom - 10;\n  const prevDimension = usePrevious(observedWidth + observedHeight);\n  const isInitialDraw = prevDimension && prevDimension < 0 ? true : false;\n\n  //SETTINGS\n  const isUserStartResize = props.colorscaleSettings.isUserStartResize;\n  const isDownloading = props.colorscaleSettings.isDownloading;\n\n  //USE-EFFECTS\n  useEffect(() => {\n    if (isUserStartResize) {\n      select(\"#colorCont\").remove();\n      select(\"#colorscale-svg\").style(\"display\", \"none\");\n      select(\"#colorscale-buttons-container\").style(\"display\", \"none\");\n      select(\"#colorscale-no-drawing\").style(\"display\", \"block\");\n    } else {\n      if (isInitialDraw) {\n        draw();\n      } else {\n        if (props.isUserRedraw) {\n          draw();\n        }\n      }\n    }\n    // if (\n    //   observedWidth &&\n    //   observedHeight &&\n    //   !isUserStartResize &&\n    //   !props.isUserRedraw\n    // ) {\n    //   //when initial draw\n    //   console.log(\"init\");\n    //   draw();\n    // } else if (\n    //   observedWidth &&\n    //   observedHeight &&\n    //   !isUserStartResize &&\n    //   props.isUserRedraw\n    // ) {\n    //   //when user click redraw\n    //   console.log(\"re-draw\");\n    //   draw();\n    //   // reset currentEvent.zoom transform\n    // } else {\n    //   //console.log(\"hide and remove\");\n\n    // }\n  }, [isInitialDraw, isUserStartResize, props.isUserRedraw]);\n\n  useEffect(() => {\n    if (props.colorScale.colorType) {\n      draw();\n    }\n  }, [props.colorScale]);\n  useEffect(() => {\n    if (selectedColorPicker) {\n      //based on active colorScale.colorType we want to change colorScale so we need a swicth\n      changeColorScaleState(selectedColorPicker, props.colorScale);\n    }\n  }, [selectedColorPicker]);\n\n  useEffect(() => {\n    if (isDownloading) {\n      //create temp svg\n      const currentColorScale = getColorScale(props.colorScale);\n      const colorData = Array.from(currentColorScale.entries()).filter(\n        (d) => d[0] !== null\n      );\n      const colorObj = colorData\n        .map((d) => {\n          return { name: d[0], color: d[1] };\n        })\n        .sort(function(x, y) {\n          return ascending(x.name, y.name);\n        });\n      const colorList = colorObj.map((d) => d.name);\n      const temp_svg_h = colorList.length * 20;\n\n      const temp_colorCont = svg\n        .append(\"div\")\n        .attr(\"id\", \"temp_colorCont\")\n        .style(\"display\", \"none\");\n      const temp_colorSVG = temp_colorCont\n        .append(\"svg\")\n        .attr(\"id\", \"color-scale-svg\")\n        .attr(\"width\", colorscale_width)\n        .attr(\"height\", temp_svg_h);\n\n      const scale_y = scaleBand()\n        .domain(colorList)\n        .range([0, temp_svg_h])\n        .paddingInner(0.1)\n        .paddingOuter(0.1);\n      //col rect\n      temp_colorSVG\n        .selectAll(\".tempColScale-rect\")\n        .data(colorObj)\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"tempColScale-rect\")\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", \"0.5px\")\n        .attr(\"fill\", (d) => d.color)\n        .attr(\"x\", 0)\n        .attr(\"y\", (d) => scale_y(d.name))\n        .attr(\"width\", 20)\n        .attr(\"height\", 20);\n      temp_colorSVG\n        .selectAll(\".tempColScale-text\")\n        .data(colorObj)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"tempColScale-text\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"x\", 25)\n        .attr(\"y\", (d) => scale_y(d.name) + 12)\n        .attr(\"fill\", \"black\")\n        .text((d) => d.name)\n        .style(\"font-size\", \"12px\");\n\n      downloadSVG(\"color-scale-svg\");\n      select(\"#temp_colorCont\").remove();\n      props.changeIsColorScaleDownloading(false);\n    }\n  }, [isDownloading]);\n\n  //DRAWING\n  function draw() {\n    //console.log(\"drawing-colorKey\");\n    //clean previous drawing artifacts\n\n    select(\"#colorscale-no-drawing\").style(\"display\", \"none\");\n    select(\"#colorscale-buttons-container\").style(\"display\", \"block\");\n    //select(\"#colorscale_svgGroup\").remove();\n    select(\"#colorCont\").remove();\n    select(\"#colorscale-svg\").style(\"display\", \"block\");\n    svg.style(\"height\", colorscale_height + margin.top + margin.bottom + \"px\");\n\n    const currentColorScale = getColorScale(props.colorScale);\n\n    const colorData = Array.from(currentColorScale.entries()).filter(\n      (d) => d[0] !== null\n    );\n\n    const colorObj = colorData\n      .map((d) => {\n        return { name: d[0], color: d[1] };\n      })\n      .sort(function(x, y) {\n        return ascending(x.name, y.name);\n      });\n\n    const colorCont = svg.append(\"div\").attr(\"id\", \"colorCont\");\n    const colorList = colorCont\n      .selectAll(\".colColumn\")\n      .data(colorObj)\n      .enter()\n      .append(\"div\")\n      .attr(\"class\", \"colColumn\")\n      .style(\"width\", colorscale_width + margin.left + \"px\")\n      .style(\"height\", \"22px\")\n      .style(\"margin\", \"1px auto\")\n      .style(\"overflowX\", \"auto\");\n\n    //add color rectangle\n    colorList\n      .append(\"div\")\n      .style(\"width\", \"20px\")\n      .style(\"height\", \"20px\")\n      .style(\"display\", \"inline-block\")\n      .style(\"float\", \"left\")\n      .style(\"margin-right\", \"3px\")\n      .append(\"svg\")\n      .attr(\"class\", \"colorRect\")\n      .attr(\"width\", \"20px\")\n      .attr(\"height\", \"20px\")\n      .append(\"rect\")\n      .attr(\"width\", \"20px\")\n      .attr(\"height\", \"20px\")\n      .attr(\"fill\", (d) => d.color)\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (d) => {\n        setselectedColorPicker(d);\n        setdisplayColorPicker(true);\n      });\n\n    //add color text\n    colorList\n      .append(\"div\")\n      .style(\"height\", \"20px\")\n      .style(\"float\", \"left\")\n      .style(\"display\", \"inline-block\")\n      .append(\"p\")\n      .text((d) => d.name)\n      .style(\"font-size\", \"12px\");\n  }\n\n  //FUNCTIONS\n  function changeColorScaleState(pickedCol, scaleColor) {\n    switch (scaleColor.colorType) {\n      case \"species\":\n        let species_col = _.cloneDeep(scaleColor.bySpecies);\n        species_col.set(pickedCol.name, pickedCol.color);\n        props.setColorBySpecies(species_col);\n        break;\n      case \"location\":\n        let location_col = _.cloneDeep(scaleColor.byLocation);\n        location_col.set(pickedCol.name, pickedCol.color);\n        props.setColorByLocation(location_col);\n        break;\n      case \"sourceType\":\n        let sourceType_col = _.cloneDeep(scaleColor.bySourceType);\n        sourceType_col.set(pickedCol.name, pickedCol.color);\n        props.setColorBySourceType(sourceType_col);\n        break;\n      case \"profile1\":\n        let profile1_col = _.cloneDeep(scaleColor.byProfile1);\n        profile1_col.set(pickedCol.name, pickedCol.color);\n        props.setColorByProfile1(profile1_col);\n        break;\n      case \"profile2\":\n        let profile2_col = _.cloneDeep(scaleColor.byProfile2);\n        profile2_col.set(pickedCol.name, pickedCol.color);\n        props.setColorByProfile2(profile2_col);\n        break;\n      case \"profile3\":\n        let profile3_col = _.cloneDeep(scaleColor.byProfile3);\n        profile3_col.set(pickedCol.name, pickedCol.color);\n        props.setColorByProfile3(profile3_col);\n        break;\n      default:\n    }\n  }\n\n  //HANDLERS\n  const closeColorPickerHandler = () => {\n    setdisplayColorPicker(false);\n  };\n\n  const setColorPickerHandler = (col) => {\n    let newCol = _.cloneDeep(selectedColorPicker);\n    newCol.color = col.hex;\n    setselectedColorPicker(newCol);\n  };\n\n  return (\n    <React.Fragment>\n      <div id=\"colorscaleContainer\" ref={colorscaleContainerRef}>\n        <div id=\"colorscale-no-drawing\">\n          <Empty\n            description={\"No chart: please click redraw button\"}\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </div>\n        <Modal\n          title=\"Color picker\"\n          visible={displayColorPicker}\n          onOk={closeColorPickerHandler}\n          onCancel={closeColorPickerHandler}\n          centered={true}\n          footer={null}\n          width={280}\n        >\n          <ChromePicker\n            disableAlpha={true}\n            color={selectedColorPicker.color}\n            onChangeComplete={setColorPickerHandler}\n          />\n        </Modal>\n        <div\n          id=\"colorscale-svg\"\n          ref={colorscaleSVGRef}\n          style={{\n            overflow: \"auto\",\n          }}\n        ></div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ColorScaleChart;\n//\n/*\n{displayColorPicker ? (\n  <div id=\"color-picker-container\">\n    <div id=\"color-picker-cover\" onClick={closeColorPickerHandler} />\n    <ChromePicker\n      disableAlpha={true}\n      color={selectedColorPicker.color}\n      onChangeComplete={setColorPickerHandler}\n    />\n  </div>\n) : null}\n*/\n"]},"metadata":{},"sourceType":"module"}