{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_PhyloTreeGantt/comp_PhyloTreeGantt.js\";\n\n/* ============================================================================\n\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport PhyloTreeGanttChart from \"./chart_PhyloTreeGantt\";\nimport PhyloTreeGanttSettings from \"./comp_PhyloTreeGantt_Settings\";\nimport { hierarchy } from \"d3-hierarchy\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport { DragOutlined, CloseOutlined, RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { changeTreeGanttResizeSignal, changeTreeGanttTextSize, changeTreeGanttTextOffset } from \"../action/phyloTreeGantt_actions\";\nimport newickParse from \"../utils/newick\";\nvar dimensions = [\"width\", \"height\"];\n\nvar PhyloTreeGantt = function PhyloTreeGantt(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUserRedraw = _useState2[0],\n      setisUserRedraw = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDrawerVisible = _useState4[0],\n      setisDrawerVisible = _useState4[1]; //DATA PREP\n\n\n  var phylotreeNwk = newickParse(props.treeStr);\n  var phylotreeData = hierarchy(phylotreeNwk, function (d) {\n    return d.branchset;\n  }).sum(function (d) {\n    return d.branchset ? 0 : 1;\n  }); // USEEFFECTS\n\n  useEffect(function () {\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]); //HANDLERS\n\n  var closeCardHandler = function closeCardHandler() {\n    props.deactivateChart(props.id);\n    props.changeTreeGanttResizeSignal(false);\n  };\n\n  var openDrawerHandler = function openDrawerHandler() {\n    setisDrawerVisible(true);\n  };\n\n  var closeDrawerHandler = function closeDrawerHandler() {\n    setisDrawerVisible(false);\n  };\n\n  var userRedrawHandler = function userRedrawHandler() {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeTreeGanttResizeSignal(false);\n    }\n  }; //\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Phylogenetic tree and Gantt chart\",\n    bordered: true,\n    headStyle: {\n      height: \"50px\",\n      padding: \"0 20px\"\n    },\n    style: {\n      height: \"100%\"\n    },\n    bodyStyle: {\n      margin: \"0px\",\n      padding: \"5px\"\n    },\n    extra: /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"panelHeader\",\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(DragOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(RetweetOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }),\n      onClick: userRedrawHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(SettingOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }),\n      onClick: openDrawerHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(CloseOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }),\n      onClick: closeCardHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"phylotree-drawer-settings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PhyloTreeGanttSettings, {\n    isDrawerVisible: isDrawerVisible,\n    closeDrawerHandler: closeDrawerHandler,\n    phylotreeGanttSettings: props.phylotreeGanttSettings,\n    changeTreeGanttTextSize: props.changeTreeGanttTextSize,\n    changeTreeGanttTextOffset: props.changeTreeGanttTextOffset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })), phylotreeData && props.movementData && /*#__PURE__*/React.createElement(PhyloTreeGanttChart, {\n    width: props.width,\n    height: props.height,\n    isolateData: props.isolateData,\n    phylotreeData: phylotreeData,\n    movementData: props.movementData,\n    isUserRedraw: isUserRedraw,\n    phylotreeGanttSettings: props.phylotreeGanttSettings,\n    selectedData: props.selectedData,\n    setSelectedData: props.setSelectedData,\n    colorScale: props.colorScale,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isolateData: state.isolateData,\n    treeStr: state.tree,\n    movementData: state.movementData,\n    selectedData: state.selectedData,\n    phylotreeGanttSettings: state.phylotreeGanttSettings,\n    colorScale: state.colorScale\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    deactivateChart: deactivateChart,\n    changeTreeGanttResizeSignal: changeTreeGanttResizeSignal,\n    changeTreeGanttTextSize: changeTreeGanttTextSize,\n    changeTreeGanttTextOffset: changeTreeGanttTextOffset,\n    setSelectedData: setSelectedData\n  }, dispatch);\n}\n\nvar MeasuredPhyloTreeGantt = withMeasure(dimensions)(PhyloTreeGantt);\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasuredPhyloTreeGantt);","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_PhyloTreeGantt/comp_PhyloTreeGantt.js"],"names":["React","useState","useEffect","PhyloTreeGanttChart","PhyloTreeGanttSettings","hierarchy","Row","Col","Card","Button","connect","bindActionCreators","withMeasure","deactivateChart","setSelectedData","DragOutlined","CloseOutlined","RetweetOutlined","SettingOutlined","changeTreeGanttResizeSignal","changeTreeGanttTextSize","changeTreeGanttTextOffset","newickParse","dimensions","PhyloTreeGantt","props","isUserRedraw","setisUserRedraw","isDrawerVisible","setisDrawerVisible","phylotreeNwk","treeStr","phylotreeData","d","branchset","sum","closeCardHandler","id","openDrawerHandler","closeDrawerHandler","userRedrawHandler","height","padding","margin","border","phylotreeGanttSettings","movementData","width","isolateData","selectedData","colorScale","mapStateToProps","state","tree","mapDispatchToProps","dispatch","MeasuredPhyloTreeGantt"],"mappings":"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","sourcesContent":["/* ============================================================================\n\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport PhyloTreeGanttChart from \"./chart_PhyloTreeGantt\";\nimport PhyloTreeGanttSettings from \"./comp_PhyloTreeGantt_Settings\";\nimport { hierarchy } from \"d3-hierarchy\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport {\n  DragOutlined,\n  CloseOutlined,\n  RetweetOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport {\n  changeTreeGanttResizeSignal,\n  changeTreeGanttTextSize,\n  changeTreeGanttTextOffset,\n} from \"../action/phyloTreeGantt_actions\";\nimport newickParse from \"../utils/newick\";\n\nconst dimensions = [\"width\", \"height\"];\n\nconst PhyloTreeGantt = (props) => {\n  const [isUserRedraw, setisUserRedraw] = useState(false);\n  const [isDrawerVisible, setisDrawerVisible] = useState(false);\n\n  //DATA PREP\n  const phylotreeNwk = newickParse(props.treeStr);\n  const phylotreeData = hierarchy(phylotreeNwk, (d) => d.branchset).sum((d) =>\n    d.branchset ? 0 : 1\n  );\n\n  // USEEFFECTS\n  useEffect(() => {\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]);\n\n  //HANDLERS\n  const closeCardHandler = () => {\n    props.deactivateChart(props.id);\n    props.changeTreeGanttResizeSignal(false);\n  };\n  const openDrawerHandler = () => {\n    setisDrawerVisible(true);\n  };\n  const closeDrawerHandler = () => {\n    setisDrawerVisible(false);\n  };\n  const userRedrawHandler = () => {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeTreeGanttResizeSignal(false);\n    }\n  };\n\n  //\n  return (\n    <React.Fragment>\n      <div style={{ height: \"100%\" }}>\n        <Card\n          title={\"Phylogenetic tree and Gantt chart\"}\n          bordered={true}\n          headStyle={{ height: \"50px\", padding: \"0 20px\" }}\n          style={{ height: \"100%\" }}\n          bodyStyle={{ margin: \"0px\", padding: \"5px\" }}\n          extra={\n            <Row>\n              <Col span={6}>\n                <Button\n                  className=\"panelHeader\"\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<DragOutlined />}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<RetweetOutlined />}\n                  onClick={userRedrawHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<SettingOutlined />}\n                  onClick={openDrawerHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<CloseOutlined />}\n                  onClick={closeCardHandler}\n                ></Button>\n              </Col>\n            </Row>\n          }\n        >\n          <React.Fragment>\n            <div id=\"phylotree-drawer-settings\">\n              <PhyloTreeGanttSettings\n                isDrawerVisible={isDrawerVisible}\n                closeDrawerHandler={closeDrawerHandler}\n                phylotreeGanttSettings={props.phylotreeGanttSettings}\n                changeTreeGanttTextSize={props.changeTreeGanttTextSize}\n                changeTreeGanttTextOffset={props.changeTreeGanttTextOffset}\n              />\n            </div>\n            {phylotreeData && props.movementData && (\n              <PhyloTreeGanttChart\n                width={props.width}\n                height={props.height}\n                isolateData={props.isolateData}\n                phylotreeData={phylotreeData}\n                movementData={props.movementData}\n                isUserRedraw={isUserRedraw}\n                phylotreeGanttSettings={props.phylotreeGanttSettings}\n                selectedData={props.selectedData}\n                setSelectedData={props.setSelectedData}\n                colorScale={props.colorScale}\n              />\n            )}\n          </React.Fragment>\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isolateData: state.isolateData,\n    treeStr: state.tree,\n    movementData: state.movementData,\n    selectedData: state.selectedData,\n    phylotreeGanttSettings: state.phylotreeGanttSettings,\n    colorScale: state.colorScale,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      deactivateChart: deactivateChart,\n      changeTreeGanttResizeSignal: changeTreeGanttResizeSignal,\n      changeTreeGanttTextSize: changeTreeGanttTextSize,\n      changeTreeGanttTextOffset: changeTreeGanttTextOffset,\n      setSelectedData: setSelectedData,\n    },\n    dispatch\n  );\n}\n\nconst MeasuredPhyloTreeGantt = withMeasure(dimensions)(PhyloTreeGantt);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MeasuredPhyloTreeGantt);\n"]},"metadata":{},"sourceType":"module"}