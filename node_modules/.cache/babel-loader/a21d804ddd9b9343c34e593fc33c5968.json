{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_PhyloTree/comp_PhyloTree.js\";\n\n/* ============================================================================\n\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport PhyloTreeChart from \"./chart_PhyloTree_phylocanvas\";\nimport PhyloTreeSettings from \"./comp_PhyloTree_Settings\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport { DragOutlined, CloseOutlined, RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { changeTreeResizeSignal, changeTreeLayout, changeIsTreeNodeAligned, changeTreeNodeSize, changeTreeTextSize, changeTreeTextOffset, changeIsTreeScaleShown, changeTreeScaleFactor, changeTreeCustomScale, changeIsTreeDownloading } from \"../action/phyloTree_actions\";\nvar dimensions = [\"width\", \"height\"];\n\nvar PhyloTree = function PhyloTree(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUserRedraw = _useState2[0],\n      setisUserRedraw = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDrawerVisible = _useState4[0],\n      setisDrawerVisible = _useState4[1]; // USEEFFECTS\n\n\n  useEffect(function () {\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]); //HANDLERS\n\n  var closeCardHandler = function closeCardHandler() {\n    props.deactivateChart(props.id);\n    props.changeTreeResizeSignal(false);\n  };\n\n  var openDrawerHandler = function openDrawerHandler() {\n    setisDrawerVisible(true);\n  };\n\n  var closeDrawerHandler = function closeDrawerHandler() {\n    setisDrawerVisible(false);\n  };\n\n  var userRedrawHandler = function userRedrawHandler() {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeTreeResizeSignal(false);\n    }\n  }; //\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Phylogenetic tree\",\n    bordered: true,\n    headStyle: {\n      height: \"50px\",\n      padding: \"0 20px\"\n    },\n    style: {\n      height: \"100%\"\n    },\n    bodyStyle: {\n      margin: \"0px\",\n      padding: \"5px\"\n    },\n    extra: /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"panelHeader\",\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(DragOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(RetweetOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }),\n      onClick: userRedrawHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(SettingOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }),\n      onClick: openDrawerHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      style: {\n        margin: \"0 5px\",\n        border: \"none\"\n      },\n      icon: /*#__PURE__*/React.createElement(CloseOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }),\n      onClick: closeCardHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"phylotree-drawer-settings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PhyloTreeSettings, {\n    isDrawerVisible: isDrawerVisible,\n    closeDrawerHandler: closeDrawerHandler,\n    phylotreeSettings: props.phylotreeSettings,\n    changeTreeLayout: props.changeTreeLayout,\n    changeIsTreeNodeAligned: props.changeIsTreeNodeAligned,\n    changeTreeNodeSize: props.changeTreeNodeSize,\n    changeTreeTextSize: props.changeTreeTextSize,\n    changeTreeTextOffset: props.changeTreeTextOffset,\n    changeIsTreeScaleShown: props.changeIsTreeScaleShown,\n    changeTreeScaleFactor: props.changeTreeScaleFactor,\n    changeTreeCustomScale: props.changeTreeCustomScale,\n    changeIsTreeDownloading: props.changeIsTreeDownloading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })), props.treeData && /*#__PURE__*/React.createElement(PhyloTreeChart, {\n    width: props.width,\n    height: props.height,\n    isolateData: props.isolateData,\n    data: props.treeData,\n    isUserRedraw: isUserRedraw,\n    phylotreeSettings: props.phylotreeSettings,\n    selectedData: props.selectedData,\n    setSelectedData: props.setSelectedData,\n    colorScale: props.colorScale,\n    changeIsTreeDownloading: props.changeIsTreeDownloading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isolateData: state.isolateData,\n    treeData: state.tree,\n    selectedData: state.selectedData,\n    phylotreeSettings: state.phylotreeSettings,\n    colorScale: state.colorScale\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    deactivateChart: deactivateChart,\n    changeTreeResizeSignal: changeTreeResizeSignal,\n    changeTreeLayout: changeTreeLayout,\n    changeIsTreeNodeAligned: changeIsTreeNodeAligned,\n    changeTreeNodeSize: changeTreeNodeSize,\n    changeTreeTextSize: changeTreeTextSize,\n    changeTreeTextOffset: changeTreeTextOffset,\n    changeIsTreeScaleShown: changeIsTreeScaleShown,\n    changeTreeScaleFactor: changeTreeScaleFactor,\n    changeTreeCustomScale: changeTreeCustomScale,\n    changeIsTreeDownloading: changeIsTreeDownloading,\n    setSelectedData: setSelectedData\n  }, dispatch);\n}\n\nvar MeasuredPhyloTree = withMeasure(dimensions)(PhyloTree);\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasuredPhyloTree);","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_PhyloTree/comp_PhyloTree.js"],"names":["React","useState","useEffect","PhyloTreeChart","PhyloTreeSettings","Row","Col","Card","Button","connect","bindActionCreators","withMeasure","deactivateChart","setSelectedData","DragOutlined","CloseOutlined","RetweetOutlined","SettingOutlined","changeTreeResizeSignal","changeTreeLayout","changeIsTreeNodeAligned","changeTreeNodeSize","changeTreeTextSize","changeTreeTextOffset","changeIsTreeScaleShown","changeTreeScaleFactor","changeTreeCustomScale","changeIsTreeDownloading","dimensions","PhyloTree","props","isUserRedraw","setisUserRedraw","isDrawerVisible","setisDrawerVisible","closeCardHandler","id","openDrawerHandler","closeDrawerHandler","userRedrawHandler","height","padding","margin","border","phylotreeSettings","treeData","width","isolateData","selectedData","colorScale","mapStateToProps","state","tree","mapDispatchToProps","dispatch","MeasuredPhyloTree"],"mappings":"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","sourcesContent":["/* ============================================================================\n\n============================================================================ */\nimport React, { useState, useEffect } from \"react\";\nimport PhyloTreeChart from \"./chart_PhyloTree_phylocanvas\";\nimport PhyloTreeSettings from \"./comp_PhyloTree_Settings\";\nimport { Row, Col, Card, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport withMeasure from \"../hocs/withMeasure\";\nimport { deactivateChart, setSelectedData } from \"../action/index\";\nimport {\n  DragOutlined,\n  CloseOutlined,\n  RetweetOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport {\n  changeTreeResizeSignal,\n  changeTreeLayout,\n  changeIsTreeNodeAligned,\n  changeTreeNodeSize,\n  changeTreeTextSize,\n  changeTreeTextOffset,\n  changeIsTreeScaleShown,\n  changeTreeScaleFactor,\n  changeTreeCustomScale,\n  changeIsTreeDownloading,\n} from \"../action/phyloTree_actions\";\n\nconst dimensions = [\"width\", \"height\"];\n\nconst PhyloTree = (props) => {\n  const [isUserRedraw, setisUserRedraw] = useState(false);\n  const [isDrawerVisible, setisDrawerVisible] = useState(false);\n\n  // USEEFFECTS\n  useEffect(() => {\n    if (isUserRedraw) {\n      setisUserRedraw(false);\n    }\n  }, [isUserRedraw]);\n\n  //HANDLERS\n  const closeCardHandler = () => {\n    props.deactivateChart(props.id);\n    props.changeTreeResizeSignal(false);\n  };\n  const openDrawerHandler = () => {\n    setisDrawerVisible(true);\n  };\n  const closeDrawerHandler = () => {\n    setisDrawerVisible(false);\n  };\n  const userRedrawHandler = () => {\n    if (!isUserRedraw) {\n      setisUserRedraw(true);\n      props.changeTreeResizeSignal(false);\n    }\n  };\n\n  //\n  return (\n    <React.Fragment>\n      <div style={{ height: \"100%\" }}>\n        <Card\n          title={\"Phylogenetic tree\"}\n          bordered={true}\n          headStyle={{ height: \"50px\", padding: \"0 20px\" }}\n          style={{ height: \"100%\" }}\n          bodyStyle={{ margin: \"0px\", padding: \"5px\" }}\n          extra={\n            <Row>\n              <Col span={6}>\n                <Button\n                  className=\"panelHeader\"\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<DragOutlined />}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<RetweetOutlined />}\n                  onClick={userRedrawHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<SettingOutlined />}\n                  onClick={openDrawerHandler}\n                ></Button>\n              </Col>\n              <Col span={6}>\n                <Button\n                  size={\"small\"}\n                  style={{ margin: \"0 5px\", border: \"none\" }}\n                  icon={<CloseOutlined />}\n                  onClick={closeCardHandler}\n                ></Button>\n              </Col>\n            </Row>\n          }\n        >\n          <React.Fragment>\n            <div id=\"phylotree-drawer-settings\">\n              <PhyloTreeSettings\n                isDrawerVisible={isDrawerVisible}\n                closeDrawerHandler={closeDrawerHandler}\n                phylotreeSettings={props.phylotreeSettings}\n                changeTreeLayout={props.changeTreeLayout}\n                changeIsTreeNodeAligned={props.changeIsTreeNodeAligned}\n                changeTreeNodeSize={props.changeTreeNodeSize}\n                changeTreeTextSize={props.changeTreeTextSize}\n                changeTreeTextOffset={props.changeTreeTextOffset}\n                changeIsTreeScaleShown={props.changeIsTreeScaleShown}\n                changeTreeScaleFactor={props.changeTreeScaleFactor}\n                changeTreeCustomScale={props.changeTreeCustomScale}\n                changeIsTreeDownloading={props.changeIsTreeDownloading}\n              />\n            </div>\n            {props.treeData && (\n              <PhyloTreeChart\n                width={props.width}\n                height={props.height}\n                isolateData={props.isolateData}\n                data={props.treeData}\n                isUserRedraw={isUserRedraw}\n                phylotreeSettings={props.phylotreeSettings}\n                selectedData={props.selectedData}\n                setSelectedData={props.setSelectedData}\n                colorScale={props.colorScale}\n                changeIsTreeDownloading={props.changeIsTreeDownloading}\n              />\n            )}\n          </React.Fragment>\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isolateData: state.isolateData,\n    treeData: state.tree,\n    selectedData: state.selectedData,\n    phylotreeSettings: state.phylotreeSettings,\n    colorScale: state.colorScale,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      deactivateChart: deactivateChart,\n      changeTreeResizeSignal: changeTreeResizeSignal,\n      changeTreeLayout: changeTreeLayout,\n      changeIsTreeNodeAligned: changeIsTreeNodeAligned,\n      changeTreeNodeSize: changeTreeNodeSize,\n      changeTreeTextSize: changeTreeTextSize,\n      changeTreeTextOffset: changeTreeTextOffset,\n      changeIsTreeScaleShown: changeIsTreeScaleShown,\n      changeTreeScaleFactor: changeTreeScaleFactor,\n      changeTreeCustomScale: changeTreeCustomScale,\n      changeIsTreeDownloading: changeIsTreeDownloading,\n      setSelectedData: setSelectedData,\n    },\n    dispatch\n  );\n}\n\nconst MeasuredPhyloTree = withMeasure(dimensions)(PhyloTree);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasuredPhyloTree);\n"]},"metadata":{},"sourceType":"module"}