{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_InputFiles/comp_InputFiles.js\";\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Button, Modal, Input } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport MetadataInput from \"./btn_MetadataInput\";\nimport LocalmapInput from \"./btn_LocalmapInput\";\nimport PhylotreeInput from \"./btn_PhylotreeInput\";\nimport TransgraphInput from \"./btn_TransgraphInput\";\nimport MovementInput from \"./btn_MovementInput\";\nimport * as constant from \"../utils/constants\";\nimport \"./style_inputFiles.css\";\nimport { loadIsolateData, loadSVG, loadTransmissionData, loadMovementData, setColorScale, setColorByLocation } from \"../action/index\";\nimport { loadSimulatedMap } from \"../action/simulatedMap_actions\";\nimport { loadTreeData } from \"../action/phyloTree_actions\";\n\nvar InputFIles = function InputFIles(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    style: {\n      margin: \"0px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    id: \"inputfiles-header\",\n    xs: 24,\n    md: 20,\n    xl: 16,\n    xxl: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: \"32pt\",\n      marginBottom: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Input files\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: \"12pt\",\n      paddingLeft: '10px',\n      paddingRight: '10px',\n      marginBottom: \"5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Click the input button or drag your file(s) into the input area to start using HAIviz. To create the input files, check our documentation page, or click \\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"round\",\n    size: \"small\",\n    href: constant.TEMPLATE.bundled,\n    style: {\n      backgroundColor: \"#1eb776\",\n      color: \"white\",\n      fontSize: \"11pt\",\n      border: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"here\")), \"\\xA0 to download example files.\"))), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    gutter: [16, 16],\n    style: {\n      width: \"80%\",\n      margin: \"auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    md: 11,\n    xl: 8,\n    xxl: 4,\n    className: \"input-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MetadataInput, {\n    isolateData: props.isolateData,\n    loadIsolateData: props.loadIsolateData,\n    setColorScale: props.setColorScale,\n    loadSimulatedMap: props.loadSimulatedMap,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    md: 11,\n    xl: 8,\n    xxl: 4,\n    className: \"input-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LocalmapInput, {\n    isolateData: props.isolateData,\n    svgMap: props.svgMap,\n    loadXML: props.loadXML,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    md: 11,\n    xl: 8,\n    xxl: 4,\n    className: \"input-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PhylotreeInput, {\n    isolateData: props.isolateData,\n    treeData: props.treeData,\n    loadTreeData: props.loadTreeData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    md: 11,\n    xl: 8,\n    xxl: 4,\n    className: \"input-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TransgraphInput, {\n    isolateData: props.isolateData,\n    transgraphData: props.transgraphData,\n    loadTransgraphData: props.loadTransgraphData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    md: 11,\n    xl: 8,\n    xxl: 4,\n    className: \"input-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MovementInput, {\n    isolateData: props.isolateData,\n    movementData: props.movementData,\n    loadMovementData: props.loadMovementData,\n    loadIsolateData: props.loadIsolateData,\n    setColorByLocation: props.setColorByLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })))));\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    isolateData: state.isolateData,\n    svgMap: state.floorplan,\n    treeData: state.tree,\n    transgraphData: state.transmission,\n    movementData: state.movementData\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return bindActionCreators({\n    loadIsolateData: loadIsolateData,\n    loadXML: loadSVG,\n    loadTreeData: loadTreeData,\n    loadTransgraphData: loadTransmissionData,\n    loadMovementData: loadMovementData,\n    setColorScale: setColorScale,\n    setColorByLocation: setColorByLocation,\n    loadSimulatedMap: loadSimulatedMap\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputFIles);","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/viz_InputFiles/comp_InputFiles.js"],"names":["React","useState","Row","Col","Button","Modal","Input","connect","bindActionCreators","MetadataInput","LocalmapInput","PhylotreeInput","TransgraphInput","MovementInput","constant","loadIsolateData","loadSVG","loadTransmissionData","loadMovementData","setColorScale","setColorByLocation","loadSimulatedMap","loadTreeData","InputFIles","props","width","height","backgroundColor","margin","fontSize","marginBottom","paddingLeft","paddingRight","TEMPLATE","bundled","color","border","isolateData","svgMap","loadXML","treeData","transgraphData","loadTransgraphData","movementData","mapStateToProps","state","ownProps","floorplan","tree","transmission","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Button, Modal, Input } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport MetadataInput from \"./btn_MetadataInput\";\nimport LocalmapInput from \"./btn_LocalmapInput\";\nimport PhylotreeInput from \"./btn_PhylotreeInput\";\nimport TransgraphInput from \"./btn_TransgraphInput\";\nimport MovementInput from \"./btn_MovementInput\";\nimport * as constant from \"../utils/constants\";\nimport \"./style_inputFiles.css\";\nimport {\n  loadIsolateData,\n  loadSVG,\n  loadTransmissionData,\n  loadMovementData,\n  setColorScale,\n  setColorByLocation,\n} from \"../action/index\";\nimport { loadSimulatedMap } from \"../action/simulatedMap_actions\";\nimport { loadTreeData } from \"../action/phyloTree_actions\";\n\nconst InputFIles = (props) => {\n  return (\n    <React.Fragment>\n      <div style={{ width: \"100%\", height: \"100%\", backgroundColor: \"white\" }}>\n        <Row justify={\"center\"} style={{ margin: \"0px\" }}>\n          <Col id=\"inputfiles-header\" xs={24} md={20} xl={16} xxl={12}>\n            <p style={{ fontSize: \"32pt\", marginBottom: \"20px\" }}>\n              Input files\n            </p>\n            <p style={{ fontSize: \"12pt\", paddingLeft: '10px', paddingRight: '10px', marginBottom: \"5px\" }}>\n              Click the input button or drag your file(s) into the input area to\n              start using HAIviz. To create the input files, check our\n              documentation page, or click &nbsp;\n              <span>\n                <Button\n                  shape={\"round\"}\n                  size={\"small\"}\n                  href={constant.TEMPLATE.bundled}\n                  style={{\n                    backgroundColor: \"#1eb776\",\n                    color: \"white\",\n                    fontSize: \"11pt\",\n                    border: \"none\",\n                  }}\n                >\n                  here\n                </Button>\n              </span>\n              &nbsp; to download example files.\n            </p>\n          </Col>\n        </Row>\n\n        <Row\n          justify={\"center\"}\n          gutter={[16, 16]}\n          style={{ width: \"80%\", margin: \"auto\" }}\n        >\n          <Col xs={24} sm={12} md={11} xl={8} xxl={4} className=\"input-button\">\n            <MetadataInput\n              isolateData={props.isolateData}\n              loadIsolateData={props.loadIsolateData}\n              setColorScale={props.setColorScale}\n              loadSimulatedMap={props.loadSimulatedMap}\n            />\n          </Col>\n\n          <Col xs={24} sm={12} md={11} xl={8} xxl={4} className=\"input-button\">\n            <LocalmapInput\n              isolateData={props.isolateData}\n              svgMap={props.svgMap}\n              loadXML={props.loadXML}\n            />\n          </Col>\n\n          <Col xs={24} sm={12} md={11} xl={8} xxl={4} className=\"input-button\">\n            <PhylotreeInput\n              isolateData={props.isolateData}\n              treeData={props.treeData}\n              loadTreeData={props.loadTreeData}\n            />\n          </Col>\n          <Col xs={24} sm={12} md={11} xl={8} xxl={4} className=\"input-button\">\n            <TransgraphInput\n              isolateData={props.isolateData}\n              transgraphData={props.transgraphData}\n              loadTransgraphData={props.loadTransgraphData}\n            />\n          </Col>\n          <Col xs={24} sm={12} md={11} xl={8} xxl={4} className=\"input-button\">\n            <MovementInput\n              isolateData={props.isolateData}\n              movementData={props.movementData}\n              loadMovementData={props.loadMovementData}\n              loadIsolateData={props.loadIsolateData}\n              setColorByLocation={props.setColorByLocation}\n            />\n          </Col>\n        </Row>\n      </div>\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    isolateData: state.isolateData,\n    svgMap: state.floorplan,\n    treeData: state.tree,\n    transgraphData: state.transmission,\n    movementData: state.movementData,\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return bindActionCreators(\n    {\n      loadIsolateData: loadIsolateData,\n      loadXML: loadSVG,\n      loadTreeData: loadTreeData,\n      loadTransgraphData: loadTransmissionData,\n      loadMovementData: loadMovementData,\n      setColorScale: setColorScale,\n      setColorByLocation: setColorByLocation,\n      loadSimulatedMap: loadSimulatedMap,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputFIles);\n\n"]},"metadata":{},"sourceType":"module"}