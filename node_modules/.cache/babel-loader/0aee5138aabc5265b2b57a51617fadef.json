{"ast":null,"code":"import { NEW_SVG_MAPEDITOR, NEW_LOCDATA_MAPEDITOR } from \"../utils/constants\";\nimport { initialState } from \"../reducers\";\n\nvar mapEditorReducer = function mapEditorReducer(prevState, action) {\n  switch (action.type) {\n    case NEW_SVG_MAPEDITOR:\n      var newState_svgData = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.svgData) {\n        newState_svgData.svgData = action.payload;\n      }\n\n      return newState_svgData;\n\n    case NEW_LOCDATA_MAPEDITOR:\n      var newState_locData = Object.assign({}, prevState);\n\n      if (action.payload && action.payload !== prevState.locationData) {\n        newState_locData.locationData = action.payload;\n      }\n\n      return newState_locData;\n\n    default:\n      if (prevState) {\n        return prevState;\n      } else {\n        return initialState.temporalbarSettings;\n      }\n\n  }\n};\n\nexport default mapEditorReducer;","map":{"version":3,"sources":["/Volumes/DATA/BUDI/APP_DEV/haiviz-v04/src/reducers/reducer-mapEditor.js"],"names":["NEW_SVG_MAPEDITOR","NEW_LOCDATA_MAPEDITOR","initialState","mapEditorReducer","prevState","action","type","newState_svgData","Object","assign","payload","svgData","newState_locData","locationData","temporalbarSettings"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,qBAA5B,QAAyD,oBAAzD;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAYC,MAAZ,EAAuB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,iBAAL;AACE,UAAIO,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,SAAlB,CAAvB;;AACA,UAAIC,MAAM,CAACK,OAAP,IAAkBL,MAAM,CAACK,OAAP,KAAmBN,SAAS,CAACO,OAAnD,EAA4D;AAC1DJ,QAAAA,gBAAgB,CAACI,OAAjB,GAA2BN,MAAM,CAACK,OAAlC;AACD;;AACD,aAAOH,gBAAP;;AAEF,SAAKN,qBAAL;AACE,UAAIW,gBAAgB,GAAGJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,SAAlB,CAAvB;;AACA,UAAIC,MAAM,CAACK,OAAP,IAAkBL,MAAM,CAACK,OAAP,KAAmBN,SAAS,CAACS,YAAnD,EAAiE;AAC/DD,QAAAA,gBAAgB,CAACC,YAAjB,GAAgCR,MAAM,CAACK,OAAvC;AACD;;AACD,aAAOE,gBAAP;;AAEF;AACE,UAAIR,SAAJ,EAAe;AACb,eAAOA,SAAP;AACD,OAFD,MAEO;AACL,eAAOF,YAAY,CAACY,mBAApB;AACD;;AApBL;AAsBD,CAvBD;;AAyBA,eAAeX,gBAAf","sourcesContent":["import { NEW_SVG_MAPEDITOR, NEW_LOCDATA_MAPEDITOR } from \"../utils/constants\";\nimport { initialState } from \"../reducers\";\n\nconst mapEditorReducer = (prevState, action) => {\n  switch (action.type) {\n    case NEW_SVG_MAPEDITOR:\n      let newState_svgData = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.svgData) {\n        newState_svgData.svgData = action.payload;\n      }\n      return newState_svgData;\n\n    case NEW_LOCDATA_MAPEDITOR:\n      let newState_locData = Object.assign({}, prevState);\n      if (action.payload && action.payload !== prevState.locationData) {\n        newState_locData.locationData = action.payload;\n      }\n      return newState_locData;\n\n    default:\n      if (prevState) {\n        return prevState;\n      } else {\n        return initialState.temporalbarSettings;\n      }\n  }\n};\n\nexport default mapEditorReducer;\n"]},"metadata":{},"sourceType":"module"}